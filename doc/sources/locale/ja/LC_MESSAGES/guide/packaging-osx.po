# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-13 08:22+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: JUN OKAZAKI <okazakijun54392@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/python_kivy_doc_ja/teams/74810/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sources/guide/packaging-osx.rst:2
msgid "Creating packages for OS X"
msgstr "Creating packages for OS X(翻訳済み)"

#: ../../sources/guide/packaging-osx.rst:5
msgid ""
"Packaging Kivy applications with the following methods must be done inside "
"OS X, 32-bit platforms are no longer supported."
msgstr ""
"以下の方法でKivyアプリケーションのパッケージ化ははOS X内で行ないます。また32ビットプラットフォームではサポートされなくなりました。"

#: ../../sources/guide/packaging-osx.rst:11
msgid "Using Buildozer"
msgstr "Using Buildozer(Buildozerを使用)"

#: ../../sources/guide/packaging-osx.rst:13
msgid ""
"pip install git+http://github.com/kivy/buildozer cd "
"/to/where/I/Want/to/package buildozer init"
msgstr ""
"pip install git+http://github.com/kivy/buildozer cd "
"/to/where/I/Want/to/package buildozer init"

#: ../../sources/guide/packaging-osx.rst:17
msgid ""
"Edit the buildozer.spec and add the details for your app. Dependencies can "
"be added to the `requirements=` section."
msgstr "buildozer.specを編集して、アプリの詳細情報を追加します。`requirements=` sectionに追加します。"

#: ../../sources/guide/packaging-osx.rst:20
msgid "By default the kivy version specified in the requirements is ignored."
msgstr "デフォルトでは要件に指定されたkivyバージョンは無視されます。"

#: ../../sources/guide/packaging-osx.rst:22
msgid ""
"If you have a Kivy.app at /Applications/Kivy.app then that is used, for "
"packaging. Otherwise the latest build from kivy.org using Kivy master will "
"be downloaded and used."
msgstr ""
"/Applications/Kivy.appでKivy.appを持っている場合はパッケージングのために使用されます。それ以外の場合はKivy "
"masterを使用してkivy.orgから最新のビルドをダウンロードして使用されます。"

#: ../../sources/guide/packaging-osx.rst:26
msgid ""
"If you want to package for python 3.x.x simply download the package named "
"Kivy3.7z from the download section of kivy.org and extract it to Kivy.app in"
" /Applications, then run::"
msgstr ""
"Python3.xxのためにパッケージ化したい場合は、単純にkivy.orgのダウンロードセクションからKivy3.7zという名前のパッケージをダウンロードして実行して、/Applications"
" の Kivy.appに抽出します。"

#: ../../sources/guide/packaging-osx.rst:32
msgid ""
"Once the app is packaged, you might want to remove unneeded packages like "
"gstreamer, if you don't need video support. Same logic applies for other "
"things you do not use, just reduce the package to its minimal state that is "
"needed for the app to run."
msgstr ""
"アプリがパッケージ化され、ビデオサポートを必要としない場合、gstreamerのような不要なパッケージを削除する場合があります。同一のロジックはアプリを実行するために必要とされ、最小の状態にパッケージの容量を減らして使用していない他のパッケージにも適用されます。"

#: ../../sources/guide/packaging-osx.rst:37
msgid ""
"As an example we are including the showcase example packaged using this "
"method for both Python 2 (9.xMB) and 3 (15.xMB), you can find the packages "
"here: https://drive.google.com/drive/folders/0B1WO07-OL50_alFzSXJUajBFdnc ."
msgstr ""
"Python "
"2（9.xMB）と3（15.xMB）の両方のために、このメソッドを使用してパッケージ化された\"\"ショーケースの例として、ここでパッケージを見つけられます::https://drive.google.com/drive/folders/0B1WO07-OL50_alFzSXJUajBFdnc"

#: ../../sources/guide/packaging-osx.rst:42
msgid "That's it. Enjoy!"
msgstr "それでおしまい。 お楽しみください！"

#: ../../sources/guide/packaging-osx.rst:44
msgid ""
"Buildozer right now uses the Kivy SDK to package your app. If you want to "
"control more details about your app than buildozer currently offers then you"
" can use the SDK directly, as detailed in the section below."
msgstr ""
"Buildozerは、アプリをパッケージ化する際にKivy "
"SDKを使用しています。Buildozerよりも、アプリの詳細を制御したい場合は以下のセクションで説明するように、直接SDKを使用する方法を提供しています。"

#: ../../sources/guide/packaging-osx.rst:50
msgid "Using the Kivy SDK"
msgstr "Using the Kivy SDK(Kivy SDKを使用しています)\""

#: ../../sources/guide/packaging-osx.rst:52
msgid ""
"Since version 1.9.0, Kivy is released for the OS X platform in a self-"
"contained, portable distribution."
msgstr "バージョン1.9.0以来、KivyはOS Xプラットフォームにインストールするタイプとポータブルでの配布がリリースされます。"

#: ../../sources/guide/packaging-osx.rst:55
msgid ""
"Apps can be packaged and distributed with the Kivy SDK using the method "
"described below, making it easier to include frameworks like SDL2 and "
"GStreamer."
msgstr ""
"下記の方法を使用して、アプリはパッケージ化されてSDL2とのGStreamerのようなフレームワークが簡単に含めてKivy SDKと一緒に配布できます。"

#: ../../sources/guide/packaging-osx.rst:59
msgid ""
"Make sure you have the unmodified Kivy SDK (Kivy.app) from the download "
"page."
msgstr "ダウンロードページから変更されていないKivy SDK（Kivy.appを）を持っていることを確認してください。"

#: ../../sources/guide/packaging-osx.rst:61
msgid "Run the following commands::"
msgstr "次のコマンドを実行してください::"

#: ../../sources/guide/packaging-osx.rst:70
msgid ""
"This step above is important, you have to make sure to preserve the paths "
"and permissions. A command like ``cp -rf`` will copy but make the app "
"unusable and lead to error later on."
msgstr ""
"上記のこのステップでは、パスと権限を確認することが重要です。以下のようなコマンド``cp "
"-rf``などでコピーしますが、アプリケーションが使用できなくなると後でエラーになります。"

#: ../../sources/guide/packaging-osx.rst:74
msgid ""
"Now all you need to do is to include your compiled app in the Kivy.app by "
"running the following command::"
msgstr "今、必要があるのは、次のコマンドを実行してKivy.appでコンパイルされたアプリケーションを含めることです。"

#: ../../sources/guide/packaging-osx.rst:79
msgid "Where <app_folder_name> is the name of your app."
msgstr "ここでの<app_folder_name>はアプリの名前です。"

#: ../../sources/guide/packaging-osx.rst:81
msgid ""
"This copies Kivy.app to `<app_folder_name>.app` and includes a compiled copy"
" of your app into this package."
msgstr ""
"Kivy.appのコピーの`<app_folder_name>.app`ファイルのパッケージにアプリケーションのコンパイル済みのコピーが含まれています。"

#: ../../sources/guide/packaging-osx.rst:84
msgid ""
"That's it, your self-contained package is ready to be deployed! You can now "
"further customize your app as described bellow."
msgstr "自己完結パッケージを展開する準備ができました！以下の説明でさらにアプリをカスタマイズできます。"

#: ../../sources/guide/packaging-osx.rst:88
msgid "Installing modules"
msgstr "Installing modules (モジュール群のインストール)"

#: ../../sources/guide/packaging-osx.rst:90
msgid ""
"Kivy package on osx uses its own virtual env that is activated when you run "
"your app using `kivy` command. To install any module you need to install the"
" module like so::"
msgstr ""
"OSX上のKivyパッケージには、`kivy` コマンドを使用してアプリケーションを実行したときに有効化する独自のvirtual "
"envを使用しています。 インストールする必要がある任意のモジュールをインストールするには次のようにします::"

#: ../../sources/guide/packaging-osx.rst:97
msgid "Where are the modules/files installed?"
msgstr "モジュール/ファイルはどこにインストールされているか？"

#: ../../sources/guide/packaging-osx.rst:98
msgid "Inside the portable venv within the app at::"
msgstr "アプリ内のポータブルvirtual env内にあります::"

#: ../../sources/guide/packaging-osx.rst:102
msgid ""
"If you install a module that installs a binary for example like kivy-garden "
"That binary will be only available from the venv above, as in after you do::"
msgstr "例えばkivyガーデンのようなバイナリをインストールした場合、virtual envないで後から利用できるようになります::"

#: ../../sources/guide/packaging-osx.rst:107
msgid "The garden lib will be only available when you activate this env."
msgstr "このenvをアクティブにした場合、Kivyガーデンのlibが使用可能になります。"

#: ../../sources/guide/packaging-osx.rst:109
msgid ""
"source /Applications/Kivy.app/Contents/Resources/venv/bin/activate garden "
"install mapview deactivate"
msgstr ""
"ソース、/Applications/Kivy.app/Contents/Resources/venv/bin/activate のmapview　"
"の非アクティブ化をコントロールする。"

#: ../../sources/guide/packaging-osx.rst:114
msgid "To install binary files"
msgstr "バイナリファイルをインストールするには"

#: ../../sources/guide/packaging-osx.rst:116
msgid ""
"Just copy the binary to the Kivy.app/Contents/Resources/venv/bin/ directory."
msgstr "Kivy.app/Contents/Resources/venv/bin/ のディレクトリにバイナリをコピーするだけです。"

#: ../../sources/guide/packaging-osx.rst:119
msgid "To include other frameworks"
msgstr "他のフレームワークを含めるには"

#: ../../sources/guide/packaging-osx.rst:120
msgid ""
"Kivy.app comes with SDL2 and Gstreamer frameworks provided. To include "
"frameworks other than the ones provided do the following::"
msgstr "Kivy.appはSDL2とのGStreamerフレームワークが付属して提供されます。 他のフレームワークを含めるには次の方法で行います："

#: ../../sources/guide/packaging-osx.rst:129
msgid ""
"Do not forget to replace <Framework_name> with your framework. This tool "
"`osxrelocator` essentially changes the path for the libs in the framework "
"such that they are relative to the executable within the .app, making the "
"Framework portable with the .app."
msgstr ""
"<Framework_name>を使用するフレームワークで置換することを忘れないでください "
"`osxrelocator`ツール\tは.appファイル内の実行可能ファイルへの相対的な枠組みの中でLIBSのパスを変更し、.appでフレームワークポータブルを作ります。"

#: ../../sources/guide/packaging-osx.rst:136
msgid "Shrinking the app size"
msgstr "アプリのサイズを縮小"

#: ../../sources/guide/packaging-osx.rst:137
msgid ""
"The app has a considerable size right now, however the unneeded parts can be"
" removed from the package."
msgstr "現在のアプリはかなりの大きさを持っていますが、不要な部分をパッケージから削除できます。"

#: ../../sources/guide/packaging-osx.rst:140
msgid ""
"For example if you don't use GStreamer, simply remove it from "
"YourApp.app/Contents/Frameworks. Similarly you can remove the examples "
"folder from /Applications/Kivy.app/Contents/Resources/kivy/examples/ or "
"kivy/tools, kivy/docs etc."
msgstr ""
"例えばGStreamerを使用しない場合、単純にYourApp.app/Contents/Frameworksから削除します。同様に、/Applications/Kivy.app/Contents/Resources/kivy/examples/"
" または kivy/tools, kivy/docs などからexamplesフォルダを削除できます。"

#: ../../sources/guide/packaging-osx.rst:146
msgid ""
"This way the package can be made to only include the parts that are needed "
"for your app."
msgstr "このように、パッケージはあなたのアプリケーションのために必要とされる部分を含めることができます。"

#: ../../sources/guide/packaging-osx.rst:150
msgid "Adjust settings"
msgstr "Adjust setting(設定を調整する)"

#: ../../sources/guide/packaging-osx.rst:151
msgid ""
"Icons and other settings of your app can be changed by editing "
"YourApp/Contents/info.plist to suit your needs."
msgstr "アイコンとアプリの他の設定は、ニーズに合わせてYourApp/Contents/info.plistファイルを編集することで変更します。"

#: ../../sources/guide/packaging-osx.rst:155
msgid "Create a DMG"
msgstr "Create a DMG(DMGの作成)"

#: ../../sources/guide/packaging-osx.rst:156
msgid "To make a DMG of your app use the following command::"
msgstr "アプリのDMGを作成するには、次のコマンドを使用します:"

#: ../../sources/guide/packaging-osx.rst:160
msgid ""
"Note the lack of `/` at the end. This should give you a compressed dmg that "
"will further shrink the size of your distributed app."
msgstr "最後に `/` がないことを注意してください。これは開発したアプリのサイズをさらに縮小する圧縮されたdmgを与えます。"

#: ../../sources/guide/packaging-osx.rst:169
msgid "Using PyInstaller without Homebrew"
msgstr "Using PyInstaller without Homebrew(HomebrewなしでPyInstallerを使用する)"

#: ../../sources/guide/packaging-osx.rst:170
msgid ""
"First install Kivy and its dependencies without using Homebrew as mentioned "
"here http://kivy.org/docs/installation/installation.html#development-"
"version."
msgstr ""
"まず、ここで述べたようにHomebrewを使用せずにKivyとその依存関係をインストールします。http://kivy.org/docs/installation/installation.html"
"#development-version 。"

#: ../../sources/guide/packaging-osx.rst:173
msgid ""
"Once you have kivy and its deps installed, you need to install PyInstaller."
msgstr "kivyを持っており、そのdepsをインストールしたら、pyInstallerをインストールする必要があります。"

#: ../../sources/guide/packaging-osx.rst:175
msgid "Let's assume we use a folder like `testpackaging`::"
msgstr "`testpackaging`フォルダを使用すると仮定しましょう::"

#: ../../sources/guide/packaging-osx.rst:180
msgid ""
"Create a file named touchtracer.spec in this directory and add the following"
" code to it::"
msgstr "このディレクトリにtouchtracer.specという名前のファイルを作成し、そこに次のコードを追加します::"

#: ../../sources/guide/packaging-osx.rst:220
msgid "Change the paths with your relevant paths::"
msgstr "パスを関連するパスに変更します::"

#: ../../sources/guide/packaging-osx.rst:228
msgid "Then run the following command::"
msgstr "次に以下のコマンドを実行します::"

#: ../../sources/guide/packaging-osx.rst:232
msgid ""
"Replace `touchtracer` with your app where appropriate. This will give you a "
"<yourapp>.app in the dist/ folder."
msgstr ""
"アプリを作る際に`touchtracer`を置換してください。 これは、あなたの dist/ folderの<yourapp> "
".appファイルを提供します。"

#: ../../sources/guide/packaging-osx.rst:237
msgid "Using PyInstaller and Homebrew"
msgstr "Using PyInstaller and Homebrew(PyInstallerとHomebrewを使用する)"

#: ../../sources/guide/packaging-osx.rst:239
msgid "Package your app on the oldest OS X version you want to support."
msgstr "サポートする最も古いOS Xのバージョンでアプリをパッケージ化します。"

#: ../../sources/guide/packaging-osx.rst:242
msgid "Complete guide"
msgstr "Complete guide(コンプリートガイド)"

#: ../../sources/guide/packaging-osx.rst:243
msgid "Install `Homebrew <http://brew.sh>`_"
msgstr "`Homebrew <http://brew.sh>`_ をインストールします。"

#: ../../sources/guide/packaging-osx.rst:244
msgid "Install Python::"
msgstr "Pythonをインストールします::"

#: ../../sources/guide/packaging-osx.rst:249
msgid ""
"To use Python 3, ``brew install python3`` and replace ``pip`` with ``pip3`` "
"in the guide below."
msgstr ""
"Python3を使用するには、``brew install python3``と``pip``を``pip3``と置換してガイドに従ってください。"

#: ../../sources/guide/packaging-osx.rst:252
msgid ""
"(Re)install your dependencies with ``--build-bottle`` to make sure they can "
"be used on other machines::"
msgstr "（再）``--build-bottle``を使用して依存関係をインストール、他のマシンで使用することができるかを確認します："

#: ../../sources/guide/packaging-osx.rst:258
msgid ""
"If your project depends on GStreamer or other additional libraries "
"(re)install them with ``--build-bottle`` as described `below <additional "
"libraries_>`_."
msgstr ""
"プロジェクトがGStreamerまたは他の追加のライブラリに依存する場合（再）``--build-"
"bottle`でインストールして記載されているように`従います`below <additional libraries_>`_。"

#: ../../sources/guide/packaging-osx.rst:262
msgid "Install Cython and Kivy::"
msgstr "CythonとKivyをインストールします::"

#: ../../sources/guide/packaging-osx.rst:267
msgid "Install PyInstaller::"
msgstr "PyInstallerをインストールします::"

#: ../../sources/guide/packaging-osx.rst:271
msgid "Package your app using the path to your main.py::"
msgstr "main.pyへのパスを使用してアプリをパッケージ化します::"

#: ../../sources/guide/packaging-osx.rst:281
msgid ""
"This will not yet copy additional image or sound files. You would need to "
"adapt the created ``.spec`` file for that."
msgstr "これは、まだ追加の画像や音声のファイルをコピーしません。``.spec`` を作成した後そのためのファイルを追加する必要があります。"

#: ../../sources/guide/packaging-osx.rst:286
msgid "Editing the spec file"
msgstr "Editing the spec file(specファイルを編集する)"

#: ../../sources/guide/packaging-osx.rst:287
msgid ""
"The specs file is named `touchtracer.spec` and is located in the directory "
"where you ran the pyinstaller command."
msgstr "スペック・ファイルはtouchtracer.specという名前で、pyInstallerのコマンドを実行したディレクトリに存在します。"

#: ../../sources/guide/packaging-osx.rst:290
msgid ""
"You need to change the `COLLECT()` call to add the data of touchtracer "
"(`touchtracer.kv`, `particle.png`, ...). Change the line to add a Tree() "
"object. This Tree will search and add every file found in the touchtracer "
"directory to your final package. Your COLLECT section should look something "
"like this::"
msgstr ""
"``COLLECT()`` にtouchtracerで呼ばれるデータ（`touchtracer.kv`, "
"`particle.png`、...）を追加する必要があります。``Tree()``オブジェクトに追加する行を加えます（例：``Tree"
"('examples-"
"path\\\\\\\\demo\\\\\\\\touchtracer\\\\\\\\')）``。Treeはtouchtracerディレクトリにあるすべてのファイルを検索して最終的なパッケージに追加します。"
" COLLECTセクションに次のようになります::"

#: ../../sources/guide/packaging-osx.rst:305
msgid ""
"This will add the required hooks so that PyInstaller gets the required Kivy "
"files. We are done. Your spec is ready to be executed."
msgstr ""
"pyInstallerが必要なKivyファイルを取得するようにするために必要なhookを追加します。実行します。 specを実行する準備ができました。"

#: ../../sources/guide/packaging-osx.rst:309
msgid "Build the spec and create a DMG"
msgstr "specのビルドとDMGの作成"

#: ../../sources/guide/packaging-osx.rst:311
msgid "Open a console."
msgstr "コンソールを開きます。"

#: ../../sources/guide/packaging-osx.rst:312
msgid "Go to the PyInstaller directory, and build the spec::"
msgstr "PyInstallerディレクトリに移動してspecをビルドします"

#: ../../sources/guide/packaging-osx.rst:316
msgid "Run::"
msgstr "実行します。"

#: ../../sources/guide/packaging-osx.rst:322
msgid "You will now have a Touchtracer.dmg available in the `dist` directory."
msgstr "これで、`dist` ディレクトリで使用可能なTouchtracer.dmgを持つことになります。"

#: ../../sources/guide/packaging-osx.rst:326
msgid "Additional Libraries"
msgstr "Additional Libraries(追加ライブラリ)"

#: ../../sources/guide/packaging-osx.rst:328
msgid "GStreamer"
msgstr "GStreamer"

#: ../../sources/guide/packaging-osx.rst:329
msgid "If your project depends on GStreamer::"
msgstr "プロジェクトがGStreamerに依存している場合："

#: ../../sources/guide/packaging-osx.rst:334
msgid ""
"If your Project needs Ogg Vorbis support be sure to add the ``--with-"
"libvorbis`` option to the command above."
msgstr ""
"プロジェクトのOgg Vorbisのサポートが必要な場合は、上記のコマンドにオプション``--with-libvorbis``を追加して選択します。"

#: ../../sources/guide/packaging-osx.rst:337
msgid ""
"If you are using Python from Homebrew you will also need the following step "
"until `this pull request <https://github.com/Homebrew/homebrew/pull/46097>`_"
" gets merged::"
msgstr ""
"HomebrewのPythonを使用している場合、あなたは現在、この\n"
"`プルリクエスト<https://github.com/Homebrew/homebrew/pull/46097>`_ をマージする必要があります："
