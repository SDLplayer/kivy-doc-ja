# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-13 08:22+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.graphics.vertex_instructions.rst:3
msgid "Vertex Instructions"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions:2
msgid "This module includes all the classes for drawing simple vertex objects."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions:5
msgid "Updating properties"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions:7
msgid "The list attributes of the graphics instruction classes (e.g. :attr:`Triangle.points`, :attr:`Mesh.indices` etc.) are not Kivy properties but Python properties. As a consequence, the graphics will only be updated when the list object itself is changed and not when list values are modified."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions:13
msgid "For example in python:"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions:25
msgid "and in kv:"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions:34
msgid "Although pressing the button will change the triangle coordinates, the graphics will not be updated because the list itself has not changed. Similarly, no updates will occur using any syntax that changes only elements of the list e.g. self.triangle.points[0:2] = [10,10] or self.triangle.points.insert(10) etc. To force an update after a change, the list variable itself must be changed, which in this case can be achieved with:"
msgstr ""

#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.graphics.instructions.VertexInstruction`"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Triangle:1
msgid "A 2d triangle."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Triangle:6
#: ../../docstring of kivy.graphics.vertex_instructions.Quad:6
#: ../../docstring of kivy.graphics.vertex_instructions.Line:24
#: ../../docstring of kivy.graphics.vertex_instructions.Point:6
#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:6
msgid "`points`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Triangle:5
msgid "List of points in the format (x1, y1, x2, y2, x3, y3)."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Triangle.points:1
msgid "Property for getting/settings points of the triangle."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Quad:1
msgid "A 2d quad."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Quad:5
msgid "List of point in the format (x1, y1, x2, y2, x3, y3, x4, y4)."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Quad.points:1
msgid "Property for getting/settings points of the quad."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Rectangle:1
msgid "A 2d rectangle."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Rectangle:4
msgid "`pos`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Rectangle:5
msgid "Position of the rectangle, in the format (x, y)."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Rectangle:8
msgid "`size`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Rectangle:7
msgid "Size of the rectangle, in the format (width, height)."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Rectangle.pos:1
msgid "Property for getting/settings the position of the rectangle."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Rectangle.size:1
msgid "Property for getting/settings the size of the rectangle."
msgstr ""

#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.graphics.vertex_instructions.Rectangle`"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.RoundedRectangle:1
msgid "A 2D rounded rectangle."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.RoundedRectangle:7
msgid "`segments`: int, defaults to 10"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.RoundedRectangle:7
msgid "Define how many segments are needed for drawing the round corner. The drawing will be smoother if you have many segments."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.RoundedRectangle:17
msgid "`radius`: list, defaults to [(10.0, 10.0), (10.0, 10.0), (10.0, 10.0), (10.0, 10.0)]"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.RoundedRectangle:10
msgid "Specifies the radiuses of the round corners clockwise: top-left, top-right, bottom-right, bottom-left. Elements of the list can be numbers or tuples of two numbers to specify different x,y dimensions. One value will define all corner dimensions to that value. Four values will define dimensions for each corner separately. Higher number of values will be truncated to four. The first value will be used for all corners, if there is fewer than four values."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.RoundedRectangle.radius:1
msgid "Corner radiuses of the rounded rectangle, defaults to [10,]."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.RoundedRectangle.segments:1
msgid "Property for getting/setting the number of segments for each corner."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:1
msgid "A 2d border image. The behavior of the border image is similar to the concept of a CSS3 border-image."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:7
msgid "`border`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:6
msgid "Border information in the format (bottom, right, top, left). Each value is in pixels."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:60
msgid "`auto_scale`: string"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:14
msgid "This used to be a bool and has been changed to be a string state."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:17
msgid "Can be one of 'off', 'both', 'x_only', 'y_only', 'y_full_x_lower', 'x_full_y_lower', 'both_lower'."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:20
msgid "Autoscale controls the behavior of the 9-slice."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:22
msgid "By default the border values are preserved exactly, meaning that if the total size of the object is smaller than the border values you will have some 'rendering errors' where your texture appears inside out. This also makes it impossible to achieve a rounded button that scales larger than the size of its source texture. The various options for auto_scale will let you achieve some mixes of the 2 types of rendering."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:30
msgid "'off': is the default and behaves as BorderImage did when auto_scale was False before."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:33
msgid "'both': Scales both x and y dimension borders according to the size of the BorderImage, this disables the BorderImage making it render the same as a regular Image."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:37
msgid "'x_only': The Y dimension functions as the default, and the X scales to the size of the BorderImage's width."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:40
msgid "'y_only': The X dimension functions as the default, and the Y  scales to the size of the BorderImage's height."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:43
msgid "'y_full_x_lower': Y scales as in 'y_only', Y scales if the size of the scaled version would be smaller than the provided border only."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:47
msgid "'x_full_y_lower': X scales as in 'x_only', Y scales if the size of the scaled version would be smaller than the provided border only."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:51
msgid "'both_lower': This is what auto_scale did when it was True in 1.9.1 Both X and Y dimensions will be scaled if the BorderImage is smaller than the source."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage:55
msgid "If the BorderImage's size is less than the sum of it's borders, horizontally or vertically, and this property is set to True, the borders will be rescaled to accommodate for the smaller size."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage.auto_scale:1
msgid "Property for setting if the corners are automatically scaled when the BorderImage is too small."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage.border:1
msgid "Property for getting/setting the border of the class."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.BorderImage.display_border:1
msgid "Property for getting/setting the border display size."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse:1
msgid "A 2D ellipse."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse:5
msgid "Added angle_start and angle_end."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse:9
#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:9
msgid "`segments`: int, defaults to 180"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse:9
msgid "Define how many segments are needed for drawing the ellipse. The drawing will be smoother if you have many segments."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse:11
msgid "`angle_start`: int, defaults to 0"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse:12
msgid "Specifies the starting angle, in degrees, of the disk portion."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse:15
msgid "`angle_end`: int, defaults to 360"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse:14
msgid "Specifies the ending angle, in degrees, of the disk portion."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse.angle_end:1
msgid "End angle of the ellipse in degrees, defaults to 360."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse.angle_start:1
msgid "Start angle of the ellipse in degrees, defaults to 0."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Ellipse.segments:1
msgid "Property for getting/setting the number of segments of the ellipse."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:1
msgid "A 2d line."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:3
msgid "Drawing a line can be done easily::"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:8
msgid "The line has 3 internal drawing modes that you should be aware of for optimal results:"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:11
msgid "If the :attr:`width` is 1.0, then the standard GL_LINE drawing from OpenGL will be used. :attr:`dash_length` and :attr:`dash_offset` will work, while properties for cap and joint have no meaning here."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:14
msgid "If the :attr:`width` is greater than 1.0, then a custom drawing method, based on triangulation, will be used. :attr:`dash_length` and :attr:`dash_offset` do not work in this mode. Additionally, if the current color has an alpha less than 1.0, a stencil will be used internally to draw the line."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:25
#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:7
msgid "List of points in the format (x1, y1, x2, y2...)"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:26
#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:13
msgid "`dash_length`: int"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:27
#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:14
msgid "Length of a segment (if dashed), defaults to 1."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:29
#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:18
msgid "`dash_offset`: int"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:29
msgid "Offset between the end of a segment and the beginning of the next one, defaults to 0. Changing this makes it dashed."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:31
msgid "`width`: float"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:32
msgid "Width of the line, defaults to 1.0."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:33
msgid "`cap`: str, defaults to 'round'"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:34
msgid "See :attr:`cap` for more information."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:35
msgid "`joint`: str, defaults to 'round'"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:36
msgid "See :attr:`joint` for more information."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:37
msgid "`cap_precision`: int, defaults to 10"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:38
msgid "See :attr:`cap_precision` for more information"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:40
#: ../../docstring of kivy.graphics.vertex_instructions.Line:42
msgid "`joint_precision`: int, defaults to 10"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:40
msgid "See :attr:`joint_precision` for more information See :attr:`cap_precision` for more information."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:43
msgid "See :attr:`joint_precision` for more information."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:44
msgid "`close`: bool, defaults to False"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:45
#: ../../docstring of kivy.graphics.vertex_instructions.Line.close:1
msgid "If True, the line will be closed."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:47
msgid "`circle`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:47
msgid "If set, the :attr:`points` will be set to build a circle. See :attr:`circle` for more information."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:50
msgid "`ellipse`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:50
msgid "If set, the :attr:`points` will be set to build an ellipse. See :attr:`ellipse` for more information."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:53
msgid "`rectangle`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:53
msgid "If set, the :attr:`points` will be set to build a rectangle. See :attr:`rectangle` for more information."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:56
msgid "`bezier`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:56
msgid "If set, the :attr:`points` will be set to build a bezier line. See :attr:`bezier` for more information."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:59
msgid "`bezier_precision`: int, defaults to 180"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:59
msgid "Precision of the Bezier drawing."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:61
msgid "`dash_offset` and `dash_length` have been added."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:64
msgid "`width`, `cap`, `joint`, `cap_precision`, `joint_precision`, `close`, `ellipse`, `rectangle` have been added."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line:68
msgid "`bezier`, `bezier_precision` have been added."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.bezier:1
msgid "Use this property to build a bezier line, without calculating the :attr:`points`. You can only set this property, not get it."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.bezier:4
msgid "The argument must be a tuple of 2n elements, n being the number of points."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.bezier:6
#: ../../docstring of kivy.graphics.vertex_instructions.Line.rectangle:11
#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:18
msgid "Usage::"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.bezier:12
msgid "Bezier lines calculations are inexpensive for a low number of points, but complexity is quadratic, so lines with a lot of points can be very expensive to build, use with care!"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.bezier_precision:1
msgid "Number of iteration for drawing the bezier between 2 segments, defaults to 180. The bezier_precision must be at least 1."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.cap:1
msgid "Determine the cap of the line, defaults to 'round'. Can be one of 'none', 'square' or 'round'"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.cap_precision:1
msgid "Number of iteration for drawing the \"round\" cap, defaults to 10. The cap_precision must be at least 1."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.circle:1
msgid "Use this property to build a circle, without calculating the :attr:`points`. You can only set this property, not get it."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.circle:4
msgid "The argument must be a tuple of (center_x, center_y, radius, angle_start, angle_end, segments):"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.circle:7
msgid "center_x and center_y represent the center of the circle"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.circle:8
msgid "radius represent the radius of the circle"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.circle:9
#: ../../docstring of kivy.graphics.vertex_instructions.Line.ellipse:9
msgid "(optional) angle_start and angle_end are in degree. The default value is 0 and 360."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.circle:11
#: ../../docstring of kivy.graphics.vertex_instructions.Line.ellipse:11
msgid "(optional) segments is the precision of the ellipse. The default value is calculated from the range between angle."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.circle:14
msgid "Note that it's up to you to :attr:`close` the circle or not."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.circle:16
#: ../../docstring of kivy.graphics.vertex_instructions.Line.ellipse:16
msgid "For example, for building a simple ellipse, in python::"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.dash_length:1
msgid "Property for getting/setting the length of the dashes in the curve"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.dash_offset:1
msgid "Property for getting/setting the offset between the dashes in the curve"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.ellipse:1
msgid "Use this property to build an ellipse, without calculating the :attr:`points`. You can only set this property, not get it."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.ellipse:4
msgid "The argument must be a tuple of (x, y, width, height, angle_start, angle_end, segments):"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.ellipse:7
msgid "x and y represent the bottom left of the ellipse"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.ellipse:8
msgid "width and height represent the size of the ellipse"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.ellipse:14
msgid "Note that it's up to you to :attr:`close` the ellipse or not."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.joint:1
msgid "Determine the join of the line, defaults to 'round'. Can be one of 'none', 'round', 'bevel', 'miter'."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.joint_precision:1
msgid "Number of iteration for drawing the \"round\" joint, defaults to 10. The joint_precision must be at least 1."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.points:1
msgid "Property for getting/settings points of the line"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.points:5
msgid "This will always reconstruct the whole graphics from the new points list. It can be very CPU expensive."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rectangle:1
#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:1
msgid "Use this property to build a rectangle, without calculating the :attr:`points`. You can only set this property, not get it."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rectangle:4
msgid "The argument must be a tuple of (x, y, width, height):"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rectangle:6
#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:11
msgid "x and y represent the bottom-left position of the rectangle"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rectangle:7
#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:12
msgid "width and height represent the size"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rectangle:9
#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:16
msgid "The line is automatically closed."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:4
msgid "The argument must be a tuple of one of the following forms:"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:6
msgid "(x, y, width, height, corner_radius)"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:7
msgid "(x, y, width, height, corner_radius, resolution)"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:8
msgid "(x, y, width, height, corner_radius1, corner_radius2, corner_radius3, corner_radius4)"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:9
msgid "(x, y, width, height, corner_radius1, corner_radius2, corner_radius3, corner_radius4, resolution)"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:13
msgid "corner_radius is the number of pixels between two borders and the center of the circle arc joining them"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.rounded_rectangle:14
msgid "resolution is the number of line segment that will be used to draw the circle arc at each corner (defaults to 30)"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Line.width:1
msgid "Determine the width of the line, defaults to 1.0."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point:1
msgid "A list of 2d points. Each point is represented as a square with a width/height of 2 times the :attr:`pointsize`."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point:6
msgid "List of points in the format (x1, y1, x2, y2...), where each pair of coordinates specifies the center of a new point."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point:10
msgid "`pointsize`: float, defaults to 1."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point:9
msgid "The size of the point, measured from the center to the edge. A value of 1.0 therefore means the real size will be 2.0 x 2.0."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point:14
msgid "Starting from version 1.0.7, vertex instruction have a limit of 65535 vertices (indices of vertex to be accurate). 2 entries in the list (x, y) will be converted to 4 vertices. So the limit inside Point() class is 2^15-2."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point.add_point:1
msgid "Add a point to the current :attr:`points` list."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point.add_point:3
msgid "If you intend to add multiple points, prefer to use this method instead of reassigning a new :attr:`points` list. Assigning a new :attr:`points` list will recalculate and reupload the whole buffer into the GPU. If you use add_point, it will only upload the changes."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point.points:1
msgid "Property for getting/settings the center points in the points list. Each pair of coordinates specifies the center of a new point."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Point.pointsize:1
msgid "Property for getting/setting point size. The size is measured from the center to the edge, so a value of 1.0 means the real size will be 2.0 x 2.0."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:1
msgid "A 2d mesh."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:3
msgid "In OpenGL ES 2.0 and in our graphics implementation, you cannot have more than 65535 indices."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:6
msgid "A list of vertices is described as::"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:12
msgid "If you want to draw a triangle, add 3 vertices. You can then make an indices list as follows:"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:15
msgid "indices = [0, 1, 2]"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:20
msgid "`vertices`: iterable"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:21
msgid "List of vertices in the format (x1, y1, u1, v1, x2, y2, u2, v2...)."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:22
msgid "`indices`: iterable"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:23
msgid "List of indices in the format (i1, i2, i3...)."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:25
msgid "`mode`: str"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:25
msgid "Mode of the vbo. Check :attr:`mode` for more information. Defaults to 'points'."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:43
msgid "`fmt`: list"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:28
msgid "The format for vertices, by default, each vertex is described by 2D coordinates (x, y) and 2D texture coordinate (u, v). Each element of the list should be a tuple or list, of the form"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:32
msgid "(variable_name, size, type)"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:34
msgid "which will allow mapping vertex data to the glsl instructions."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:36
msgid "[(b'v_pos', 2, b'float'), (b'v_tc', 2, b'float'),]"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:38
msgid "will allow using"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:40
msgid "attribute vec2 v_pos; attribute vec2 v_tc;"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:43
msgid "in glsl's vertex shader."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:45
msgid "Before, `vertices` and `indices` would always be converted to a list, now, they are only converted to a list if they do not implement the buffer interface. So e.g. numpy arrays, python arrays etc. are used in place, without creating any additional copies. However, the buffers cannot be readonly (even though they are not changed, due to a cython limitation) and must be contiguous in memory."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh:54
msgid "When passing a memoryview or a instance that implements the buffer interface, `vertices` should be a buffer of floats (`'f'` code in python array) and `indices` should be a buffer of unsigned short (`'H'` code in python array). Arrays in other formats will still have to be converted internally, negating any potential gain."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh.indices:1
msgid "Vertex indices used to specify the order when drawing the mesh."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh.mode:1
msgid "VBO Mode used for drawing vertices/indices. Can be one of 'points', 'line_strip', 'line_loop', 'lines', 'triangles', 'triangle_strip' or 'triangle_fan'."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Mesh.vertices:1
msgid "List of x, y, u, v coordinates used to construct the Mesh. Right now, the Mesh instruction doesn't allow you to change the format of the vertices, which means it's only x, y + one texture coordinate."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`builtins.Exception`"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.GraphicException:1
msgid "Exception raised when a graphics error is fired."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:1
msgid "A 2d Bezier curve."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:9
msgid "Define how many segments are needed for drawing the curve. The drawing will be smoother if you have many segments."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:11
msgid "`loop`: bool, defaults to False"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:12
msgid "Set the bezier curve to join the last point to the first."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier:16
msgid "Distance between the end of a segment and the start of the next one, defaults to 0. Changing this makes it dashed."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier.dash_length:1
msgid "Property for getting/setting the length of the dashes in the curve."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier.dash_offset:1
msgid "Property for getting/setting the offset between the dashes in the curve."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier.points:1
msgid "Property for getting/settings the points of the triangle."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier.points:5
msgid "This will always reconstruct the whole graphic from the new points list. It can be very CPU intensive."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.Bezier.segments:1
msgid "Property for getting/setting the number of segments of the curve."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.graphics.vertex_instructions.Line`"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.SmoothLine:1
msgid "Experimental line using over-draw methods to get better anti-aliasing results. It has few drawbacks:"
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.SmoothLine:4
msgid "drawing a line with alpha will probably not have the intended result if the line crosses itself."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.SmoothLine:6
msgid ":attr:`~Line.cap`, :attr:`~Line.joint` and :attr:`~Line.dash` properties are not supported."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.SmoothLine:8
msgid "it uses a custom texture with a premultiplied alpha."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.SmoothLine:9
msgid "lines under 1px in width are not supported: they will look the same."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.SmoothLine:13
msgid "This is an unfinished work, experimental, and subject to crashes."
msgstr ""

#: ../../docstring of kivy.graphics.vertex_instructions.SmoothLine.overdraw_width:1
msgid "Determine the overdraw width of the line, defaults to 1.2."
msgstr ""

