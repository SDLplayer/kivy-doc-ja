# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-13 08:22+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: JUN OKAZAKI <okazakijun54392@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/python_kivy_doc_ja/teams/74810/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sources/api-kivy.uix.screenmanager.rst:3
msgid "Screen Manager"
msgstr "Screen Manager(翻訳中)"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:7
msgid ""
"The screen manager is a widget dedicated to managing multiple screens for "
"your application. The default :class:`ScreenManager` displays only one "
":class:`Screen` at a time and uses a :class:`TransitionBase` to switch from "
"one Screen to another."
msgstr ""
"スクリーンマネージャは、アプリケーションの複数の画面を管理するためのwidgetです。 デフォルトの  :class:`ScreenManager`  "
"は一度に1つの :class:`Screen`  のみを表示し、 :class:`TransitionBase` "
"を使用して1つの画面から別の画面に切り替わります。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:12
msgid ""
"Multiple transitions are supported based on changing the screen coordinates "
"/ scale or even performing fancy animation using custom shaders."
msgstr ""
"画面の座標/スケールを変更したり、カスタムシェイダーを使用して派手なアニメーションを実行したりすることによって複数のトランジションがサポートされます。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:16
msgid "Basic Usage"
msgstr "Basic Usage(基本的な使い方)"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:18
msgid ""
"Let's construct a Screen Manager with 4 named screens. When you are creating"
" a screen, **you absolutely need to give a name to it**::"
msgstr "4つの名前のスクリーンでスクリーン・マネージャを構築してみましょう。 **画面を作成するときは、必ず名前を付ける必要があります** ::"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:38
msgid ""
"The default :attr:`ScreenManager.transition` is a :class:`SlideTransition` "
"with options :attr:`~SlideTransition.direction` and "
":attr:`~TransitionBase.duration`."
msgstr ""
":attr:`ScreenManager.transition`  のデフォルトは、:attr:`~SlideTransition.direction`"
"  は  :attr:`~TransitionBase.duration` がオプションの :class:`SlideTransition` です。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:42
msgid ""
"Please note that by default, a :class:`Screen` displays nothing: it's just a"
" :class:`~kivy.uix.relativelayout.RelativeLayout`. You need to use that "
"class as a root widget for your own screen, the best way being to subclass."
msgstr ""
"デフォルトでは、 :class:`Screen`  には何も表示されません。これは単なる "
":class:`~kivy.uix.relativelayout.RelativeLayout` です。 そのクラスを独自のスクリーンのroot "
"widget として使用する必要があります。サブクラス化するのが最善の方法です。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:47
msgid ""
"As :class:`Screen` is a :class:`~kivy.uix.relativelayout.RelativeLayout`, it"
" is important to understand the :ref:`kivy-uix-relativelayout-common-"
"pitfalls`."
msgstr ""
":class:`Screen`  は :class:`~kivy.uix.relativelayout.RelativeLayout` "
"であるため、:ref:`kivy-uix-relativelayout-common-pitfalls` を理解することが重要です。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:51
msgid "Here is an example with a 'Menu Screen' and a 'Settings Screen'::"
msgstr "'Menu Screen' と' Settings Screen' の例を以下に示します::"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:100
msgid "Changing Direction"
msgstr "Changing Direction(変化する方向)"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:102
msgid ""
"A common use case for :class:`ScreenManager` involves using a "
":class:`SlideTransition` which slides right to the next screen and slides "
"left to the previous screen. Building on the previous example, this can be "
"accomplished like so::"
msgstr ""
":class:`ScreenManager`  "
"の一般的な使用例では、次の画面にスライドして前の画面にスライドするSlideTransitionを使用します。 "
"前の例を基にして、これは次のように行うことができます："

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:131
msgid "Advanced Usage"
msgstr "Advanced Usage(応用例)"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:133
msgid ""
"From 1.8.0, you can now switch dynamically to a new screen, change the "
"transition options and remove the previous one by using "
":meth:`~ScreenManager.switch_to`::"
msgstr ""
"1.8.0から、 :meth:`~ScreenManager.switch_to` "
"を使用して、動的に新しい画面に切り替えたり、遷移オプションを変更したり、前の画面を削除したりすることができます。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:144
msgid ""
"Note that this method adds the screen to the :class:`ScreenManager` instance"
" and should not be used if your screens have already been added to this "
"instance. To switch to a screen which is already added, you should use the "
":attr:`~ScreenManager.current` property."
msgstr ""
"このメソッドは :class:`ScreenManager`  "
"インスタンスに画面を追加するので、画面がすでにこのインスタンスに追加されている場合は使用しないでください。 すでに追加されている画面に切り替えるには、 "
":attr:`~ScreenManager.current` プロパティを使用する必要があります。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:151
msgid "Changing transitions"
msgstr "Changing transitions(トラジッションの変更)"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:153
msgid "You have multiple transitions available by default, such as:"
msgstr "デフォルトでは次のような複数のトランジションが使用できます。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:155
msgid ":class:`NoTransition` - switches screens instantly with no animation"
msgstr ":class:`NoTransition` - アニメーションなしで瞬時に画面を切り替える"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:156
msgid ":class:`SlideTransition` - slide the screen in/out, from any direction"
msgstr ":class:`SlideTransition` - 任意の方向から画面を出し入れする"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:157
msgid ""
":class:`CardTransition` - new screen slides on the previous or the old one "
"slides off the new one depending on the mode"
msgstr ":class:`CardTransition` - モードに応じて、前のスライドまたは新しいスライドを新しいものからスライドさせる"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:159
msgid ":class:`SwapTransition` - implementation of the iOS swap transition"
msgstr ":class:`SwapTransition` -  iOSスワップトランジッションの実装"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:160
msgid ":class:`FadeTransition` - shader to fade the screen in/out"
msgstr ":class:`FadeTransition` - スクリーンのフェードイン/アウトを行うシェーダ"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:161
msgid ""
":class:`WipeTransition` - shader to wipe the screens from right to left"
msgstr ":class:`WipeTransition` -  スクリーンを右から左に拭くためのシェーダ"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:162
msgid ""
":class:`FallOutTransition` - shader where the old screen 'falls' and becomes"
" transparent, revealing the new one behind it."
msgstr ""
":class:`FallOutTransition` - 古いスクリーンが '落ちて' 透明になるシェーダ。背後に新しいスクリーンが現れます。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:164
msgid ""
":class:`RiseInTransition` - shader where the new screen rises from the "
"screen centre while fading from transparent to opaque."
msgstr ":class:`RiseInTransition` - 透明から不透明にフェードしながら新しい画面が画面中心から浮かび上がるシェーダ。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:167
msgid ""
"You can easily switch transitions by changing the "
":attr:`ScreenManager.transition` property::"
msgstr "ScreenManager.transitionプロパティを変更することで簡単にトランジションを切り替えれます::"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:174
msgid ""
"Currently, none of Shader based Transitions use anti-aliasing. This is "
"because they use the FBO which doesn't have any logic to handle "
"supersampling. This is a known issue and we are working on a transparent "
"implementation that will give the same results as if it had been rendered on"
" screen."
msgstr ""
"現在、Shaderベースのトランジションのいずれもアンチエイリアスを使用していません。 "
"これは、スーパーサンプリングを処理するロジックを持たないFBOを使用するためです。 "
"これは既知の問題であり画面上にレンダリングされた場合と同じ結果をもたらす透過的な実装に取り組んでいます。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager:180
msgid ""
"To be more concrete, if you see sharp edged text during the animation, it's "
"normal."
msgstr "より具体的には、アニメーション中にシャープなエッジのテキストが見える場合は、それは正常です。"

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.uix.relativelayout.RelativeLayout`"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:1
msgid ""
"Screen is an element intended to be used with a :class:`ScreenManager`. "
"Check module documentation for more information."
msgstr ""
"Screenは :class:`ScreenManager` で使用するための要素です。 詳細については、モジュールのマニュアルを参照してください。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:6
msgid "`on_pre_enter`: ()"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:6
msgid ""
"Event fired when the screen is about to be used: the entering animation is "
"started."
msgstr "画面が使用されようとしたときに発生するイベント：入力アニメーションが開始されます。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:9
msgid "`on_enter`: ()"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:9
msgid ""
"Event fired when the screen is displayed: the entering animation is "
"complete."
msgstr "画面が表示されたときに起動されるイベント：入力アニメーションが完了した。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:12
msgid "`on_pre_leave`: ()"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:12
msgid ""
"Event fired when the screen is about to be removed: the leaving animation is"
" started."
msgstr "画面が削除されようとしたときに発生するイベント:離脱アニメーションが開始されます。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:16
msgid "`on_leave`: ()"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:15
msgid ""
"Event fired when the screen is removed: the leaving animation is finished."
msgstr "画面が削除されると発生するイベント:終了アニメーションが終了しました。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen:18
msgid ""
"Events `on_pre_enter`, `on_enter`, `on_pre_leave` and `on_leave` were added."
msgstr ""
" `on_pre_enter`  、 `on_enter` `on_pre_leave`  、 `on_leave`  イベントが追加されました。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.manager:1
#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.manager:1
msgid ""
":class:`ScreenManager` object, set when the screen is added to a manager."
msgstr ":class:`ScreenManager`  オブジェクト。画面がマネージャに追加されたときに設定されます。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.manager:4
#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.manager:4
msgid ""
":attr:`manager` is an :class:`~kivy.properties.ObjectProperty` and defaults "
"to None, read-only."
msgstr ""
":attr:`manager`  は :class:`~kivy.properties.ObjectProperty`  "
"であり、デフォルトはNone（読み取り専用）です。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.name:1
msgid ""
"Name of the screen which must be unique within a :class:`ScreenManager`. "
"This is the name used for :attr:`ScreenManager.current`."
msgstr ""
" :class:`ScreenManager` 内で一意でなければならない画面の名前。 これは:attr:`ScreenManager.current`"
" で使用される名前です。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.name:4
msgid ""
":attr:`name` is a :class:`~kivy.properties.StringProperty` and defaults to "
"''."
msgstr ":attr:`name`  は :class:`~kivy.properties.StringProperty`  でデフォルトは\"\"です。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.transition_progress:1
msgid ""
"Value that represents the completion of the current transition, if any is "
"occurring."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.transition_progress:4
msgid ""
"If a transition is in progress, whatever the mode, the value will change "
"from 0 to 1. If you want to know if it's an entering or leaving animation, "
"check the :attr:`transition_state`."
msgstr ""
"トランジションが進行中であれば、モードにかかわらず、値は0から1に変わります。トランジションかトランジションかを知りたい場合は "
":attr:`transition_state` を確認してください。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.transition_progress:8
msgid ""
":attr:`transition_progress` is a :class:`~kivy.properties.NumericProperty` "
"and defaults to 0."
msgstr ""
":attr:`transition_progress`  は :class:`~kivy.properties.NumericProperty` "
"で、デフォルトは0です。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.transition_state:1
msgid "Value that represents the state of the transition:"
msgstr "遷移の状態を表す値："

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.transition_state:3
msgid "'in' if the transition is going to show your screen"
msgstr "移行が画面を表示する場合は 'in'"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.transition_state:4
msgid "'out' if the transition is going to hide your screen"
msgstr "遷移があなたの画面を隠す場合は 'out'"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.transition_state:6
msgid ""
"After the transition is complete, the state will retain it's last value (in "
"or out)."
msgstr "遷移が完了すると、状態は最後の値（インまたはアウト）を保持します。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.Screen.transition_state:9
msgid ""
":attr:`transition_state` is an :class:`~kivy.properties.OptionProperty` and "
"defaults to 'out'."
msgstr ""
":attr:`transition_state` は  :class:`~kivy.properties.OptionProperty`  "
"で、デフォルトは  'out' です。"

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.uix.floatlayout.FloatLayout`"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager:1
msgid ""
"Screen manager. This is the main class that will control your "
":class:`Screen` stack and memory."
msgstr "スクリーンマネージャー。 これは、 :class:`Screen`  のスタックとメモリを制御するメインクラスです。"

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager:4
msgid "By default, the manager will show only one screen at a time."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.current:1
msgid "Name of the screen currently shown, or the screen to show."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.current:15
msgid ""
":attr:`current` is a :class:`~kivy.properties.StringProperty` and defaults "
"to None."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.current_screen:1
msgid ""
"Contains the currently displayed screen. You must not change this property "
"manually, use :attr:`current` instead."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.current_screen:4
msgid ""
":attr:`current_screen` is an :class:`~kivy.properties.ObjectProperty` and "
"defaults to None, read-only."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.get_screen:1
msgid ""
"Return the screen widget associated with the name or raise a "
":class:`ScreenManagerException` if not found."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.has_screen:1
msgid "Return True if a screen with the `name` has been found."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.next:1
msgid "Return the name of the next screen from the screen list."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.previous:1
msgid "Return the name of the previous screen from the screen list."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.screen_names:1
msgid ""
"List of the names of all the :class:`Screen` widgets added. The list is read"
" only."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.screen_names:4
msgid ""
":attr:`screens_names` is an :class:`~kivy.properties.AliasProperty` and is "
"read-only. It is updated if the screen list changes or the name of a screen "
"changes."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.screens:1
msgid ""
"List of all the :class:`Screen` widgets added. You should not change this "
"list manually. Use the :meth:`add_widget "
"<kivy.uix.widget.Widget.add_widget>` method instead."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.screens:5
msgid ""
":attr:`screens` is a :class:`~kivy.properties.ListProperty` and defaults to "
"[], read-only."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.switch_to:1
msgid ""
"Add a new screen to the ScreenManager and switch to it. The previous screen "
"will be removed from the children. `options` are the :attr:`transition` "
"options that will be changed before the animation happens."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.switch_to:6
msgid ""
"If no previous screens are available, the screen will be used as the main "
"one::"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.switch_to:16
msgid ""
"If any animation is in progress, it will be stopped and replaced by this "
"one: you should avoid this because the animation will just look weird. Use "
"either :meth:`switch_to` or :attr:`current` but not both."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.switch_to:20
msgid ""
"The `screen` name will be changed if there is any conflict with the current "
"screen."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.transition:1
msgid ""
"Transition object to use for animating the transition from the current "
"screen to the next one being shown."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.transition:4
msgid ""
"For example, if you want to use a :class:`WipeTransition` between slides::"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.transition:18
msgid ""
":attr:`transition` is an :class:`~kivy.properties.ObjectProperty` and "
"defaults to a :class:`SlideTransition`."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManager.transition:23
msgid ""
"Default transition has been changed from :class:`SwapTransition` to "
":class:`SlideTransition`."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`builtins.Exception`"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ScreenManagerException:1
msgid "Exception for the :class:`ScreenManager`."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase:1
msgid ""
"TransitionBase is used to animate 2 screens within the "
":class:`ScreenManager`. This class acts as a base for other implementations "
"like the :class:`SlideTransition` and :class:`SwapTransition`."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase:7
msgid "`on_progress`: Transition object, progression float"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase:8
msgid "Fired during the animation of the transition."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase:11
msgid "`on_complete`: Transition object"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase:10
msgid "Fired when the transition is finished."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.add_screen:1
msgid "(internal) Used to add a screen to the :class:`ScreenManager`."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.duration:1
msgid "Duration in seconds of the transition."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.duration:3
msgid ""
":class:`duration` is a :class:`~kivy.properties.NumericProperty` and "
"defaults to .4 (= 400ms)."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.duration:8
msgid "Default duration has been changed from 700ms to 400ms."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.is_active:1
msgid "Indicate whether the transition is currently active or not."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.is_active:3
msgid ""
":attr:`is_active` is a :class:`~kivy.properties.BooleanProperty` and "
"defaults to False, read-only."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.remove_screen:1
msgid "(internal) Used to remove a screen from the :class:`ScreenManager`."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.screen_in:1
msgid ""
"Property that contains the screen to show. Automatically set by the "
":class:`ScreenManager`."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.screen_in:4
msgid ""
":class:`screen_in` is an :class:`~kivy.properties.ObjectProperty` and "
"defaults to None."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.screen_out:1
msgid ""
"Property that contains the screen to hide. Automatically set by the "
":class:`ScreenManager`."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.screen_out:4
msgid ""
":class:`screen_out` is an :class:`~kivy.properties.ObjectProperty` and "
"defaults to None."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.start:1
#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.CardTransition.start:1
msgid ""
"(internal) Starts the transition. This is automatically called by the "
":class:`ScreenManager`."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.TransitionBase.stop:1
msgid ""
"(internal) Stops the transition. This is automatically called by the "
":class:`ScreenManager`."
msgstr ""

#: ../../<autodoc>:1 ../../<autodoc>:1 ../../<autodoc>:1 ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.uix.screenmanager.TransitionBase`"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ShaderTransition:1
msgid ""
"Transition class that uses a Shader for animating the transition between 2 "
"screens. By default, this class doesn't assign any fragment/vertex shader. "
"If you want to create your own fragment shader for the transition, you need "
"to declare the header yourself and include the \"t\", \"tex_in\" and "
"\"tex_out\" uniform::"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ShaderTransition.clearcolor:1
msgid "Sets the color of Fbo ClearColor."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ShaderTransition.clearcolor:5
msgid ""
":attr:`clearcolor` is a :class:`~kivy.properties.ListProperty` and defaults "
"to [0, 0, 0, 1]."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ShaderTransition.fs:1
msgid "Fragment shader to use."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ShaderTransition.fs:3
msgid ""
":attr:`fs` is a :class:`~kivy.properties.StringProperty` and defaults to "
"None."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ShaderTransition.vs:1
msgid "Vertex shader to use."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.ShaderTransition.vs:3
msgid ""
":attr:`vs` is a :class:`~kivy.properties.StringProperty` and defaults to "
"None."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.SlideTransition:1
msgid ""
"Slide Transition, can be used to show a new screen from any direction: left,"
" right, up or down."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.SlideTransition.direction:1
msgid "Direction of the transition."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.SlideTransition.direction:3
msgid ""
":attr:`direction` is an :class:`~kivy.properties.OptionProperty` and "
"defaults to 'left'. Can be one of 'left', 'right', 'up' or 'down'."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.SwapTransition:1
msgid ""
"Swap transition that looks like iOS transition when a new window appears on "
"the screen."
msgstr ""

#: ../../<autodoc>:1 ../../<autodoc>:1 ../../<autodoc>:1 ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.uix.screenmanager.ShaderTransition`"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.FadeTransition:1
msgid "Fade transition, based on a fragment Shader."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.WipeTransition:1
msgid "Wipe transition, based on a fragment Shader."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.FallOutTransition:1
msgid ""
"Transition where the new screen 'falls' from the screen centre, becoming "
"smaller and more transparent until it disappears, and revealing the new "
"screen behind it. Mimics the popular/standard Android transition."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.FallOutTransition.duration:1
#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.RiseInTransition.duration:1
msgid ""
"Duration in seconds of the transition, replacing the default of "
":class:`TransitionBase`."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.FallOutTransition.duration:4
msgid ""
":class:`duration` is a :class:`~kivy.properties.NumericProperty` and "
"defaults to .15 (= 150ms)."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.RiseInTransition:1
msgid ""
"Transition where the new screen rises from the screen centre, becoming "
"larger and changing from transparent to opaque until it fills the screen. "
"Mimics the popular/standard Android transition."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.RiseInTransition.duration:4
msgid ""
":class:`duration` is a :class:`~kivy.properties.NumericProperty` and "
"defaults to .2 (= 200ms)."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.NoTransition:1
msgid ""
"No transition, instantly switches to the next screen with no delay or "
"animation."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.uix.screenmanager.SlideTransition`"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.CardTransition:1
msgid ""
"Card transition that looks similar to Android 4.x application drawer "
"interface animation."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.CardTransition:4
msgid ""
"It supports 4 directions like SlideTransition: left, right, up and down, and"
" two modes, pop and push. If push mode is activated, the previous screen "
"does not move, and the new one slides in from the given direction. If the "
"pop mode is activated, the previous screen slides out, when the new screen "
"is already on the position of the ScreenManager."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.CardTransition.mode:1
msgid ""
"Indicates if the transition should push or pop the screen on/off the "
"ScreenManager."
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.CardTransition.mode:4
msgid "'push' means the screen slides in in the given direction"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.CardTransition.mode:5
msgid "'pop' means the screen slides out in the given direction"
msgstr ""

#: ../../../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/screenmanager.pydocstring
#: of kivy.uix.screenmanager.CardTransition.mode:7
msgid ""
":attr:`mode` is an :class:`~kivy.properties.OptionProperty` and defaults to "
"'push'."
msgstr ""
