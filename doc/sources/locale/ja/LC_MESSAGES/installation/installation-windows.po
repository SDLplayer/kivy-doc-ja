# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-13 08:22+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/installation/installation-windows.rst:4
msgid "Installation on Windows"
msgstr ""

#: ../../sources/installation/installation-windows.rst:6
msgid "Beginning with 1.9.1 we provide binary `wheels <https://wheel.readthedocs.org/en/latest/>`_ for Kivy and all its dependencies to be used with an existing Python installation. See :ref:`install-win-dist`."
msgstr ""

#: ../../sources/installation/installation-windows.rst:11
msgid "We also provide nightly wheels generated using Kivy `master <https://github.com/kivy/kivy>`_. See :ref:`install-nightly-win-dist`. See also :ref:`upgrade-win-dist`. If installing kivy to an **alternate location** and not to site-packages, please see :ref:`alternate-win`."
msgstr ""

#: ../../sources/installation/installation-windows.rst:18
msgid "For Python < 3.5 we use the MinGW compiler. However, for Python 3.5 on Windows we currently only support the microsoft MSVC compiler because of the following Python `issue 4709 <http://bugs.python.org/issue4709>`_ about MinGW. Generally this should make no difference when using precompiled wheels."
msgstr ""

#: ../../sources/installation/installation-windows.rst:26
msgid "Support for Python 3.5 and higher isn't available with the current stable version (``1.9.1``). Compile the master branch or use the nightly wheels."
msgstr ""

#: ../../sources/installation/installation-windows.rst:30
msgid "To use Kivy you need `Python <https://www.python.org/downloads/windows/>`_. Multiple versions of Python can be installed side by side, but Kivy needs to be installed for each Python version that you want to use Kivy."
msgstr ""

#: ../../sources/installation/installation-windows.rst:37
msgid "Installation"
msgstr ""

#: ../../sources/installation/installation-windows.rst:39
msgid "Now that python is installed, open the :ref:`windows-run-app` and make sure python is available by typing ``python --version``. Then, do the following to install."
msgstr ""

#: ../../sources/installation/installation-windows.rst:43
msgid "Ensure you have the latest pip and wheel::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:47
msgid "Install the dependencies (skip gstreamer (~120MB) if not needed, see :ref:`kivy-dependencies`)::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:53
msgid "For Python 3.5 only we additionally offer angle which can be used instead of glew and can be installed with::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:58
msgid "Install kivy::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:62
msgid "That's it. You should now be able to ``import kivy`` in python or run a basic example::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:69
msgid "If you encounter any **permission denied** errors, try opening the `Command prompt as administrator <https://technet.microsoft.com/en-us/library/cc947813%28v=ws.10%29.aspx>`_ and trying again."
msgstr ""

#: ../../sources/installation/installation-windows.rst:75
msgid "What are wheels, pip and wheel"
msgstr ""

#: ../../sources/installation/installation-windows.rst:77
msgid "In Python, packages such as Kivy can be installed with the python package manager, `pip <https://pip.pypa.io/en/stable/>`_. Some packages such as Kivy require additional steps, such as compilation, when installing using the Kivy source code with pip. Wheels (with a ``.whl`` extension) are pre-built distributions of a package that has already been compiled and do not require additional steps to install."
msgstr ""

#: ../../sources/installation/installation-windows.rst:84
msgid "When hosted on `pypi <https://pypi.python.org/pypi>`_ one installs a wheel using ``pip``, e.g. ``python -m pip install kivy``. When downloading and installing a wheel directly, ``python -m pip install wheel_file_name`` is used, such as::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:94
msgid "Nightly wheel installation"
msgstr ""

#: ../../sources/installation/installation-windows.rst:117
#: ../../sources/installation/installation-windows.rst:204
msgid "Using the latest development version can be risky and you might encounter issues during development. If you encounter any bugs, please report them."
msgstr ""

#: ../../sources/installation/installation-windows.rst:120
msgid "Snapshot wheels of current Kivy master are created on every commit to the `master` branch of kivy repository. They can be found `here <https://kivy.org/downloads/appveyor/kivy>`_. To use them, instead of doing ``python -m pip install kivy`` we'll install one of these wheels as follows."
msgstr ""

#: ../../sources/installation/installation-windows.rst:126
msgid "|cp27_win32|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:127
msgid "|cp34_win32|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:128
msgid "|cp35_win32|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:129
msgid "|cp36_win32|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:131
msgid "|cp27_amd64|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:132
msgid "|cp34_amd64|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:133
msgid "|cp35_amd64|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:134
msgid "|cp36_amd64|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:136
msgid "Perform steps 1 and 2 of the above Installation section."
msgstr ""

#: ../../sources/installation/installation-windows.rst:137
msgid "Download the appropriate wheel for your system."
msgstr ""

#: ../../sources/installation/installation-windows.rst:138
msgid "Install it with ``python -m pip install wheel-name`` where ``wheel-name`` is the name of the renamed file and add deps to the `PATH`."
msgstr ""

#: ../../sources/installation/installation-windows.rst:141
msgid "Kivy examples are separated from the core because of their size. The examples can be installed separately on both Python 2 and 3 with this single wheel:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:144
msgid "|examples_whl|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:149
msgid "Kivy's dependencies"
msgstr ""

#: ../../sources/installation/installation-windows.rst:151
msgid "We offer wheels for Kivy and its dependencies separately so only desired dependencies need be installed. The dependencies are offered as optional sub-packages of kivy.deps, e.g. ``kivy.deps.sdl2``."
msgstr ""

#: ../../sources/installation/installation-windows.rst:155
msgid "Currently on Windows, we provide the following dependency wheels:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:157
msgid "`gstreamer <https://gstreamer.freedesktop.org>`_ for audio and video"
msgstr ""

#: ../../sources/installation/installation-windows.rst:158
msgid "`glew <http://glew.sourceforge.net/>`_ and/or `angle (3.5 only) <https://github.com/Microsoft/angle>`_ for OpenGL"
msgstr ""

#: ../../sources/installation/installation-windows.rst:160
msgid "`sdl2 <https://libsdl.org>`_ for control and/or OpenGL."
msgstr ""

#: ../../sources/installation/installation-windows.rst:162
msgid "One can select which of these to use for OpenGL use using the `KIVY_GL_BACKEND` envrionment variable by setting it to `glew` (the default), `angle`, or `sdl2`. `angle` is currently in an experimental phase as a substitute for `glew` on Python 3.5 only."
msgstr ""

#: ../../sources/installation/installation-windows.rst:168
msgid "`gstreamer` is an optional dependency which only needs to be installed if video display or audio is desired. `ffpyplayer` is an alternate dependency for audio or video."
msgstr ""

#: ../../sources/installation/installation-windows.rst:175
msgid "Command line"
msgstr ""

#: ../../sources/installation/installation-windows.rst:177
msgid "Know your command line. To execute any of the ``pip`` or ``wheel`` commands, one needs a command line tool with python on the path. The default command line on Windows is `Command Prompt <http://www.computerhope.com/issues/chusedos.htm>`_, and the quickest way to open it is to press `Win+R` on your keyboard, type ``cmd`` in the window that opens, and then press enter."
msgstr ""

#: ../../sources/installation/installation-windows.rst:184
msgid "Alternate linux style command shells that we recommend is `Git for Windows <https://git-for-windows.github.io/>`_ which offers a bash command line as `well <http://rogerdudler.github.io/git-guide/>`_ as `git <https://try.github.io>`_. Note, CMD can still be used even if bash is installed."
msgstr ""

#: ../../sources/installation/installation-windows.rst:190
msgid "Walking the path! To add your python to the path, simply open your command line and then us the ``cd`` command to change the current directory to where python is installed, e.g. ``cd C:\\Python27``. Alternatively if you only have one python version installed, permanently add the python directory to the path for `cmd <http://www.computerhope.com/issues/ch000549.htm>`_ or `bash <http://stackoverflow.com/q/14637979>`_."
msgstr ""

#: ../../sources/installation/installation-windows.rst:200
msgid "Use development Kivy"
msgstr ""

#: ../../sources/installation/installation-windows.rst:207
msgid "To compile and install kivy using the kivy `source code <https://github.com/kivy/kivy/archive/master.zip>`_  or to use kivy with git rather than a wheel there are some additional steps:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:211
msgid "Both the ``python`` and the ``Python\\Scripts`` directories **must** be on the path. They must be on the path every time you recompile kivy."
msgstr ""

#: ../../sources/installation/installation-windows.rst:214
msgid "Ensure you have the latest pip and wheel with::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:218
msgid "Get the compiler. For Python < 3.5 we use mingwpy as follows."
msgstr ""

#: ../../sources/installation/installation-windows.rst:221
msgid "Create the ``python\\Lib\\distutils\\distutils.cfg`` file and add the two lines::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:227
msgid "Install MinGW with::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:231
msgid "For Python 3.5 we use the MSVC compiler. For 3.5, `Visual Studio 2015 <https://www.visualstudio.com/downloads/>`_ is required, which is availible for free. Just download and install it and you'll be good to go."
msgstr ""

#: ../../sources/installation/installation-windows.rst:236
msgid "Visual Studio is very big so you can also use the smaller, `Visual C Build Tools instead <https://github.com/kivy/kivy/wiki/Using-Visual-C---Build-Tools-instead-of-Visual-Studio-on-Windows>`_."
msgstr ""

#: ../../sources/installation/installation-windows.rst:240
msgid "Set the environment variables. On windows do::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:245
msgid "In bash do::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:250
msgid "These variables must be set everytime you recompile kivy."
msgstr ""

#: ../../sources/installation/installation-windows.rst:252
msgid "Install the other dependencies as well as their dev versions (you can skip gstreamer and gstreamer_dev if you aren't going to use video/audio)::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:259
msgid "If you downloaded or cloned kivy to an alternate location and don't want to install it to site-packages read the next section."
msgstr ""

#: ../../sources/installation/installation-windows.rst:262
msgid "Finally compile and install kivy with ``pip install filename``, where ``filename`` can be a url such as ``https://github.com/kivy/kivy/archive/master.zip`` for kivy master, or the full path to a local copy of a kivy."
msgstr ""

#: ../../sources/installation/installation-windows.rst:268
msgid "Compile Kivy"
msgstr ""

#: ../../sources/installation/installation-windows.rst:270
msgid "Start installation of Kivy cloned from GitHub::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:274
msgid "If the compilation succeeds without any error, Kivy should be good to go. You can test it with running a basic example::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:282
msgid "Installing Kivy to an alternate location"
msgstr ""

#: ../../sources/installation/installation-windows.rst:284
msgid "In development Kivy is often installed to an alternate location and then installed with::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:289
msgid "That allows Kivy to remain in its original location while being available to python, which is useful for tracking changes you make in Kivy for example directly with Git."
msgstr ""

#: ../../sources/installation/installation-windows.rst:293
msgid "To achieve using Kivy in an alternate location extra tweaking is required. Due to this `issue <https://github.com/pypa/pip/issues/2677>`_ ``wheel`` and ``pip`` install the dependency wheels to ``python\\Lib\\site-packages\\kivy``. So they need to be moved to your actual kivy installation from site-packages."
msgstr ""

#: ../../sources/installation/installation-windows.rst:298
msgid "After installing the kivy dependencies and downloading or cloning kivy to your favorite location, do the following:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:301
msgid "Move the contents of ``python\\Lib\\site-packages\\kivy\\deps`` to ``your-path\\kivy\\deps`` where ``your-path`` is the path where your kivy is located."
msgstr ""

#: ../../sources/installation/installation-windows.rst:304
msgid "Remove the ``python\\Lib\\site-packages\\kivy`` directory altogether."
msgstr ""

#: ../../sources/installation/installation-windows.rst:305
msgid "From ``python\\Lib\\site-packages`` move **all** ``kivy.deps.*.dist-info`` directories to ``your-path`` right next to ``kivy``."
msgstr ""

#: ../../sources/installation/installation-windows.rst:308
msgid "Now you can safely compile kivy in its current location with one of these commands::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:316
msgid "**If kivy fails to be imported,** you probably didn't delete all the ``*.dist-info`` folders and and the kivy or ``kivy.deps*`` folders from site-packages."
msgstr ""

#: ../../sources/installation/installation-windows.rst:321
msgid "Making Python available anywhere"
msgstr ""

#: ../../sources/installation/installation-windows.rst:323
msgid "There are two methods for launching python on your ``*.py`` files."
msgstr ""

#: ../../sources/installation/installation-windows.rst:326
msgid "Double-click method"
msgstr ""

#: ../../sources/installation/installation-windows.rst:328
msgid "If you only have one Python installed, you can associate all ``*.py`` files with your python, if it isn't already, and then run it by double clicking. Or you can only do it once if you want to be able to choose each time:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:332
msgid "Right click on the Python file (.py file extension) of the application you want to launch"
msgstr ""

#: ../../sources/installation/installation-windows.rst:335
msgid "From the context menu that appears, select *Open With*"
msgstr ""

#: ../../sources/installation/installation-windows.rst:336
msgid "Browse your hard disk drive and find the file ``python.exe`` that you want to use. Select it."
msgstr ""

#: ../../sources/installation/installation-windows.rst:339
msgid "Select \"Always open the file with...\" if you don't want to repeat this procedure every time you double click a .py file."
msgstr ""

#: ../../sources/installation/installation-windows.rst:342
msgid "You are done. Open the file."
msgstr ""

#: ../../sources/installation/installation-windows.rst:345
msgid "Send-to method"
msgstr ""

#: ../../sources/installation/installation-windows.rst:347
msgid "You can launch a .py file with our Python using the Send-to menu:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:349
msgid "Browse to the ``python.exe`` file you want to use. Right click on it and copy it."
msgstr ""

#: ../../sources/installation/installation-windows.rst:352
msgid "Open Windows explorer (File explorer in Windows 8), and to go the address 'shell:sendto'. You should get the special Windows directory `SendTo`"
msgstr ""

#: ../../sources/installation/installation-windows.rst:355
msgid "Paste the previously copied ``python.exe`` file **as a shortcut**."
msgstr ""

#: ../../sources/installation/installation-windows.rst:356
msgid "Rename it to python <python-version>. E.g. ``python27-x64``"
msgstr ""

#: ../../sources/installation/installation-windows.rst:358
msgid "You can now execute your application by right clicking on the `.py` file -> \"Send To\" -> \"python <python-version>\"."
msgstr ""

#: ../../sources/installation/installation-windows.rst:364
msgid "Upgrading from a previous Kivy dist"
msgstr ""

#: ../../sources/installation/installation-windows.rst:366
msgid "To install the new wheels to a previous Kivy distribution all the files and folders, except for the python folder should be deleted from the distribution. This python folder will then be treated as a normal system installed python and all the steps described in :ref:`Installation` can then be continued."
msgstr ""

