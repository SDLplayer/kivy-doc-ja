# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-13 08:22+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: JUN OKAZAKI <okazakijun54392@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/python_kivy_doc_ja/teams/74810/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sources/installation/installation-windows.rst:4
msgid "Installation on Windows"
msgstr "Installation on Windows(翻訳済み)"

#: ../../sources/installation/installation-windows.rst:6
msgid ""
"Beginning with 1.9.1 we provide binary `wheels "
"<https://wheel.readthedocs.org/en/latest/>`_ for Kivy and all its "
"dependencies to be used with an existing Python installation. See :ref"
":`install-win-dist`."
msgstr ""
"1.9.1以降では、Kivyためにのバイナリ `wheels <https://wheel.readthedocs.org/en/latest/>`_ "
" を提供します。すべての依存関係は、既存のPythonインストールに使用します。  :ref:`install-win-dist`  を参照してください 。"

#: ../../sources/installation/installation-windows.rst:11
msgid ""
"We also provide nightly wheels generated using Kivy `master "
"<https://github.com/kivy/kivy>`_. See :ref:`install-nightly-win-dist`. See "
"also :ref:`upgrade-win-dist`. If installing kivy to an **alternate "
"location** and not to site-packages, please see :ref:`alternate-win`."
msgstr ""
"また、Kivy  `master <https://github.com/kivy/kivy>`_ を使用して生成されたNightlyのwheel "
"を提供します 。 :ref:`install-nightly-win-dist` を参照してください 。 :ref:`upgrade-win-dist`"
"  を参照してください 。site-packagesではなく別の場所にkivyをインストールする場合は、 :ref:`alternate-win` "
"を参照してください 。"

#: ../../sources/installation/installation-windows.rst:18
msgid ""
"For Python < 3.5 we use the MinGW compiler. However, for Python 3.5 on "
"Windows we currently only support the microsoft MSVC compiler because of the"
" following Python `issue 4709 <http://bugs.python.org/issue4709>`_ about "
"MinGW. Generally this should make no difference when using precompiled "
"wheels."
msgstr ""
"Python 3.5以下ではMinGWコンパイラを使用しています。しかし、Windows上のPython "
"3.5では、MinGWに関する次のPythonの `issue 4709 <http://bugs.python.org/issue4709>`_  "
"のため、現在のところMicrosoft "
"MSVCコンパイラのみをサポートしています。一般に、プリコンパイルされたwheelを使用する場合は、これは違いはありません。"

#: ../../sources/installation/installation-windows.rst:26
msgid ""
"Support for Python 3.5 and higher isn't available with the current stable "
"version (``1.9.1``). Compile the master branch or use the nightly wheels."
msgstr ""
"Python 3.5以降のサポートは、現在の安定版（1.9.1）では使用できません。マスターブランチをコンパイルするか、nightly "
"wheelを使用します。"

#: ../../sources/installation/installation-windows.rst:30
msgid ""
"To use Kivy you need `Python <https://www.python.org/downloads/windows/>`_. "
"Multiple versions of Python can be installed side by side, but Kivy needs to"
" be installed for each Python version that you want to use Kivy."
msgstr ""
"Kivyを使用するには `Python <https://www.python.org/downloads/windows/>`_ が必要です "
"。Pythonの複数のバージョンを平行にインストールできますが、KivyはKivyを使用する各Pythonのバージョンにインストールする必要があります。"

#: ../../sources/installation/installation-windows.rst:37
msgid "Installation"
msgstr "Installation(インストール)"

#: ../../sources/installation/installation-windows.rst:39
msgid ""
"Now that python is installed, open the :ref:`windows-run-app` and make sure "
"python is available by typing ``python --version``. Then, do the following "
"to install."
msgstr ""
"pythonがすでにインストールされているとして、 :ref:`windows-run-app` を開き、次のように入力して「python "
"--version 」Pythonが利用可能であることを確認してください。次に、インストールするには、次の手順を実行します。"

#: ../../sources/installation/installation-windows.rst:43
msgid "Ensure you have the latest pip and wheel::"
msgstr "最新のpipとwheelを持っていることを確認します::"

#: ../../sources/installation/installation-windows.rst:47
msgid ""
"Install the dependencies (skip gstreamer (~120MB) if not needed, see :ref"
":`kivy-dependencies`)::"
msgstr ""
"依存関係をインストールします（gstreamer（120MB)が必要ない場合はスキップできます、 :ref:`kivy-dependencies` "
"を参照してください）"

#: ../../sources/installation/installation-windows.rst:53
msgid ""
"For Python 3.5 only we additionally offer angle which can be used instead of"
" glew and can be installed with::"
msgstr "Python 3.5の場合には、glewの代わりに使用できるangleを追加でインストールできます::"

#: ../../sources/installation/installation-windows.rst:58
msgid "Install kivy::"
msgstr "Kivyをインストールします::"

#: ../../sources/installation/installation-windows.rst:62
msgid ""
"That's it. You should now be able to ``import kivy`` in python or run a "
"basic example::"
msgstr "それでおしまい。Pythonで「import Kivy」が使用できるようになります。"

#: ../../sources/installation/installation-windows.rst:69
msgid ""
"If you encounter any **permission denied** errors, try opening the `Command "
"prompt as administrator <https://technet.microsoft.com/en-"
"us/library/cc947813%28v=ws.10%29.aspx>`_ and trying again."
msgstr ""
"「permission denied」が発生した場合は、`管理者としてコマンドプロンプト  "
"<https://technet.microsoft.com/enus/library/cc947813%28v=ws.10%29.aspx>`_  "
"を開き再度実行してみてください。"

#: ../../sources/installation/installation-windows.rst:75
msgid "What are wheels, pip and wheel"
msgstr "What are wheels, pip and wheel(wheel、pipとは何ですか？)"

#: ../../sources/installation/installation-windows.rst:77
msgid ""
"In Python, packages such as Kivy can be installed with the python package "
"manager, `pip <https://pip.pypa.io/en/stable/>`_. Some packages such as Kivy"
" require additional steps, such as compilation, when installing using the "
"Kivy source code with pip. Wheels (with a ``.whl`` extension) are pre-built "
"distributions of a package that has already been compiled and do not require"
" additional steps to install."
msgstr ""
"Pythonでは、Kivyなどのパッケージをpythonパッケージマネージャー `pip "
"<https://pip.pypa.io/en/stable/>`_ でインストールできます。 "
"pipでKivyソースコードを使用してインストールする場合、Kivyなどの一部のパッケージでは、コンパイルなどの追加手順が必要です。wheel（.whl拡張子付き）は既にコンパイルされたパッケージの事前ビルドされたディストリビューションでありインストールするのに追加の手順を必要としません。"

#: ../../sources/installation/installation-windows.rst:84
msgid ""
"When hosted on `pypi <https://pypi.python.org/pypi>`_ one installs a wheel "
"using ``pip``, e.g. ``python -m pip install kivy``. When downloading and "
"installing a wheel directly, ``python -m pip install wheel_file_name`` is "
"used, such as::"
msgstr ""
"`pypi <https://pypi.python.org/pypi>`_ "
"でホストされている場合、「pip」を使用してホイールがインストールされます。 「python -m pip install "
"kivy」。wheelを直接ダウンロードしてインストールする場合、「python -m pip install "
"wheel_file_name」が使用されます。"

#: ../../sources/installation/installation-windows.rst:94
msgid "Nightly wheel installation"
msgstr "Nightly wheel installation(Nightly wheelのインストール)"

#: ../../sources/installation/installation-windows.rst:117
#: ../../sources/installation/installation-windows.rst:204
msgid ""
"Using the latest development version can be risky and you might encounter "
"issues during development. If you encounter any bugs, please report them."
msgstr "最新の開発版を使用することはリスクがあり、開発中に問題が発生する可能性があります。任意のバグに遭遇した場合は報告してください。"

#: ../../sources/installation/installation-windows.rst:120
msgid ""
"Snapshot wheels of current Kivy master are created on every commit to the "
"`master` branch of kivy repository. They can be found `here "
"<https://kivy.org/downloads/appveyor/kivy>`_. To use them, instead of doing "
"``python -m pip install kivy`` we'll install one of these wheels as follows."
msgstr ""
"現在のKivyマスターのスナップショットホイールは、kivyリポジトリの 「master」ブランチへのすべてのコミット時に作成されます。それらはここ  "
"`ここ <https://kivy.org/downloads/appveyor/kivy>`_ "
"で見つけることができます。それらを使用するには、「python -m pip install "
"kivy」を実行するのではなく、次のようにこれらのwheeleの1つをインストールします。"

#: ../../sources/installation/installation-windows.rst:126
msgid "|cp27_win32|_"
msgstr "|cp27_win32|_"

#: ../../sources/installation/installation-windows.rst:127
msgid "|cp34_win32|_"
msgstr "|cp34_win32|_"

#: ../../sources/installation/installation-windows.rst:128
msgid "|cp35_win32|_"
msgstr "|cp35_win32|_"

#: ../../sources/installation/installation-windows.rst:129
msgid "|cp36_win32|_"
msgstr "|cp36_win32|_"

#: ../../sources/installation/installation-windows.rst:131
msgid "|cp27_amd64|_"
msgstr "|cp27_amd64|_"

#: ../../sources/installation/installation-windows.rst:132
msgid "|cp34_amd64|_"
msgstr "|cp34_amd64|_"

#: ../../sources/installation/installation-windows.rst:133
msgid "|cp35_amd64|_"
msgstr "|cp35_amd64|_"

#: ../../sources/installation/installation-windows.rst:134
msgid "|cp36_amd64|_"
msgstr "|cp36_amd64|_"

#: ../../sources/installation/installation-windows.rst:136
msgid "Perform steps 1 and 2 of the above Installation section."
msgstr "上記のインストールセクションの手順1と2を実行します。"

#: ../../sources/installation/installation-windows.rst:137
msgid "Download the appropriate wheel for your system."
msgstr "システムに適したwheel をダウンロードしてください。"

#: ../../sources/installation/installation-windows.rst:138
msgid ""
"Install it with ``python -m pip install wheel-name`` where ``wheel-name`` is"
" the name of the renamed file and add deps to the `PATH`."
msgstr ""
"「python -m pip install wheel-name」でインストールします。ここでwheel-"
"nameは名前を変更したファイルの名前で「PATH」にdepsを追加します"

#: ../../sources/installation/installation-windows.rst:141
msgid ""
"Kivy examples are separated from the core because of their size. The "
"examples can be installed separately on both Python 2 and 3 with this single"
" wheel:"
msgstr "Kivyの例はサイズのためにコアから切り離されています。これらの例はPython 2とPython 3の両方に個別にインストールできます:"

#: ../../sources/installation/installation-windows.rst:144
msgid "|examples_whl|_"
msgstr "|examples_whl|_"

#: ../../sources/installation/installation-windows.rst:149
msgid "Kivy's dependencies"
msgstr "Kivy's dependencies(Kivyの依存関係)"

#: ../../sources/installation/installation-windows.rst:151
msgid ""
"We offer wheels for Kivy and its dependencies separately so only desired "
"dependencies need be installed. The dependencies are offered as optional "
"sub-packages of kivy.deps, e.g. ``kivy.deps.sdl2``."
msgstr ""
"私たちはKivyとその依存関係のweelを別々に提供しているので、必要な依存関係のみをインストールする必要があります。依存関係は例えばkivy.deps.sdl2のようなkivy.depsのオプションのサブパッケージとして提供されます。"
" "

#: ../../sources/installation/installation-windows.rst:155
msgid "Currently on Windows, we provide the following dependency wheels:"
msgstr "現在のところ、Windowsでは次の依存関係のwheelを提供しています:"

#: ../../sources/installation/installation-windows.rst:157
msgid "`gstreamer <https://gstreamer.freedesktop.org>`_ for audio and video"
msgstr "`gstreamer <https://gstreamer.freedesktop.org>`_  は音声とビデオのため"

#: ../../sources/installation/installation-windows.rst:158
msgid ""
"`glew <http://glew.sourceforge.net/>`_ and/or `angle (3.5 only) "
"<https://github.com/Microsoft/angle>`_ for OpenGL"
msgstr ""
"`glew <http://glew.sourceforge.net/>`_ 　と `angle (3.5 のみ) "
"<https://github.com/Microsoft/angle>`_  はOpenGLのため"

#: ../../sources/installation/installation-windows.rst:160
msgid "`sdl2 <https://libsdl.org>`_ for control and/or OpenGL."
msgstr "制御またはOpenGL用の `sdl2 <https://libsdl.org>`_ 。"

#: ../../sources/installation/installation-windows.rst:162
msgid ""
"One can select which of these to use for OpenGL use using the "
"`KIVY_GL_BACKEND` envrionment variable by setting it to `glew` (the "
"default), `angle`, or `sdl2`. `angle` is currently in an experimental phase "
"as a substitute for `glew` on Python 3.5 only."
msgstr ""
"環境変数「KIVY_GL_BACKEND」をglew（デフォルト）、angle、またはsdl2に設定することでどれかをOpenGLで使用するかを選択できます。"
" angleはPython 3.5でのglewの代用として実験段階にあります。"

#: ../../sources/installation/installation-windows.rst:168
msgid ""
"`gstreamer` is an optional dependency which only needs to be installed if "
"video display or audio is desired. `ffpyplayer` is an alternate dependency "
"for audio or video."
msgstr ""
"「gstreamer」はビデオの表示や音声が必要な場合にインストールするだけのオプションの依存関係です。「 "
"ffpyplayer」はオーディオまたはビデオの別の依存関係です。"

#: ../../sources/installation/installation-windows.rst:175
msgid "Command line"
msgstr "Command line(コマンドライン)"

#: ../../sources/installation/installation-windows.rst:177
msgid ""
"Know your command line. To execute any of the ``pip`` or ``wheel`` commands,"
" one needs a command line tool with python on the path. The default command "
"line on Windows is `Command Prompt "
"<http://www.computerhope.com/issues/chusedos.htm>`_, and the quickest way to"
" open it is to press `Win+R` on your keyboard, type ``cmd`` in the window "
"that opens, and then press enter."
msgstr ""
"コマンドラインを知っています。「pip」または「wheel」コマンドのいずれかを実行するには、コマンドラインツールでパス上のpythonの使用が必要です。\n"
"Windowsのデフォルトのコマンドラインは `コマンドプロンプト <http://www.computerhope.com/issues/chusedos.htm>`_  で 、開くための最も簡単な方法は、キーボードで「Win + R」を押して開いたウィンドウ内で「cmd」と入力し、Enterキーを押します。"

#: ../../sources/installation/installation-windows.rst:184
msgid ""
"Alternate linux style command shells that we recommend is `Git for Windows "
"<https://git-for-windows.github.io/>`_ which offers a bash command line as "
"`well <http://rogerdudler.github.io/git-guide/>`_ as `git "
"<https://try.github.io>`_. Note, CMD can still be used even if bash is "
"installed."
msgstr ""
"代替Linuxのスタイルのコマンドシェルとしては `git <https://try.github.io>`_ の\n"
" `操作 <http://rogerdudler.github.io/git-guide/>`などはbashのコマンドラインである`Git for Windows <https://git-for-windows.github.io/>`_を推薦します。ノート、CMDはbashがインストールされている場合でも使用できます。"

#: ../../sources/installation/installation-windows.rst:190
msgid ""
"Walking the path! To add your python to the path, simply open your command "
"line and then us the ``cd`` command to change the current directory to where"
" python is installed, e.g. ``cd C:\\Python27``. Alternatively if you only "
"have one python version installed, permanently add the python directory to "
"the path for `cmd <http://www.computerhope.com/issues/ch000549.htm>`_ or "
"`bash <http://stackoverflow.com/q/14637979>`_."
msgstr ""
"パスを歩いてみましょう！パスにpythonを追加するには、コマンドラインを開き、「cd」コマンドでPythonがインストールされている場所へカレントディレクトリ\"を変更するには、例えば「cd"
" C:\\Python27」と入力します 。Pythonのバージョンを1つのみインストールしている場合は `cmd "
"<http://www.computerhope.com/issues/ch000549.htm>`_  や`bash "
"<http://stackoverflow.com/q/14637979>`_ のためにPythonのディレクトリを追加して永続的にします。"

#: ../../sources/installation/installation-windows.rst:200
msgid "Use development Kivy"
msgstr "Use development Kivy(Kivyの開発バージョンを使用する)"

#: ../../sources/installation/installation-windows.rst:207
msgid ""
"To compile and install kivy using the kivy `source code "
"<https://github.com/kivy/kivy/archive/master.zip>`_  or to use kivy with git"
" rather than a wheel there are some additional steps:"
msgstr ""
"Kivyの`ソースコード <https://github.com/kivy/kivy/archive/master.zip>`_  "
"を使用するかまたはgitを使用してのコンパイルとKivyをインストールするには、wheelからインストールするよりもいくつかの追加の手順があります:"

#: ../../sources/installation/installation-windows.rst:211
msgid ""
"Both the ``python`` and the ``Python\\Scripts`` directories **must** be on "
"the path. They must be on the path every time you recompile kivy."
msgstr ""
"「Pythonと」と「Python \\ "
"Scripts」の両方のディレクトリがパス上になければなりません。kivyを再コンパイルするたびにパス上に存在している必要があります。"

#: ../../sources/installation/installation-windows.rst:214
msgid "Ensure you have the latest pip and wheel with::"
msgstr "pipとwheelが最新であることを確認してください::"

#: ../../sources/installation/installation-windows.rst:218
msgid "Get the compiler. For Python < 3.5 we use mingwpy as follows."
msgstr "コンパイラを入手してください。 Python が3.5より下のバージョンの場合、以下のようにmingwpyを使用します"

#: ../../sources/installation/installation-windows.rst:221
msgid ""
"Create the ``python\\Lib\\distutils\\distutils.cfg`` file and add the two "
"lines::"
msgstr "「python\\\\Lib\\\\distutils\\\\distutils.cfg」ファイルを作成して、以下の2行を追加します::"

#: ../../sources/installation/installation-windows.rst:227
msgid "Install MinGW with::"
msgstr "MinGWをインストールします::"

#: ../../sources/installation/installation-windows.rst:231
msgid ""
"For Python 3.5 we use the MSVC compiler. For 3.5, `Visual Studio 2015 "
"<https://www.visualstudio.com/downloads/>`_ is required, which is availible "
"for free. Just download and install it and you'll be good to go."
msgstr ""
"Python 3.5ではMSVCコンパイラを使用しています。 3.5ではVisual Studio "
"2015が必要です。これは無料で利用できます。ダウンロードしてからインストールしておくくのが良いでしょう。"

#: ../../sources/installation/installation-windows.rst:236
msgid ""
"Visual Studio is very big so you can also use the smaller, `Visual C Build "
"Tools instead <https://github.com/kivy/kivy/wiki/Using-Visual-C---Build-"
"Tools-instead-of-Visual-Studio-on-Windows>`_."
msgstr ""
"Visual Studio はとても容量が大きいので代わりに容量が小さい `Visual C Build Tools instead "
"<https://github.com/kivy/kivy/wiki/Using-Visual-C---Build-Tools-instead-of-"
"Visual-Studio-on-Windows>`_ を使用できます。"

#: ../../sources/installation/installation-windows.rst:240
msgid "Set the environment variables. On windows do::"
msgstr "環境変数を設定します。ウィンドウズ上で実行する場合::"

#: ../../sources/installation/installation-windows.rst:245
msgid "In bash do::"
msgstr "bashで実行する場合::"

#: ../../sources/installation/installation-windows.rst:250
msgid "These variables must be set everytime you recompile kivy."
msgstr "変数はKivyをインストールするたびに設定が必要です。"

#: ../../sources/installation/installation-windows.rst:252
msgid ""
"Install the other dependencies as well as their dev versions (you can skip "
"gstreamer and gstreamer_dev if you aren't going to use video/audio)::"
msgstr ""
"その他の依存関係だけでなく、そのdevのバージョン（ビデオ/オーディオを使用しない場合は、gstreamerとgstreamer_devをスキップできます）をインストールします::"

#: ../../sources/installation/installation-windows.rst:259
msgid ""
"If you downloaded or cloned kivy to an alternate location and don't want to "
"install it to site-packages read the next section."
msgstr ""
"Kivyをダウンロードしたかまたは別の場所にクローニングしてsite-packagesにインストールしたくない場合は、次のセクションをお読みください。"

#: ../../sources/installation/installation-windows.rst:262
msgid ""
"Finally compile and install kivy with ``pip install filename``, where "
"``filename`` can be a url such as "
"``https://github.com/kivy/kivy/archive/master.zip`` for kivy master, or the "
"full path to a local copy of a kivy."
msgstr ""
"最後にコンパイルしてkivyはインストール（pip install filename）します。 "
"filenameは次のようにURLを指定できます「https://github.com/kivy/kivy/archive/master.zip」。URLはkivyマスター、またはkivy"
" zipのローカルでコピーされた絶対パスを指定します。"

#: ../../sources/installation/installation-windows.rst:268
msgid "Compile Kivy"
msgstr "Compile Kivy(Kivyをコンパイル)"

#: ../../sources/installation/installation-windows.rst:270
msgid "Start installation of Kivy cloned from GitHub::"
msgstr "GitHub からクローンしたKivyのインストールを開始します::"

#: ../../sources/installation/installation-windows.rst:274
msgid ""
"If the compilation succeeds without any error, Kivy should be good to go. "
"You can test it with running a basic example::"
msgstr "コンパイルがエラーなく成功した場合はKivyは正常に動作するはずです。基本的な例を実行してテストできます："

#: ../../sources/installation/installation-windows.rst:282
msgid "Installing Kivy to an alternate location"
msgstr "Installing Kivy to an alternate location(別の場所にKivyをインストール)"

#: ../../sources/installation/installation-windows.rst:284
msgid ""
"In development Kivy is often installed to an alternate location and then "
"installed with::"
msgstr "開発中のKivyはしばしば別の場所にインストールされ、次の様にインストールされます："

#: ../../sources/installation/installation-windows.rst:289
msgid ""
"That allows Kivy to remain in its original location while being available to"
" python, which is useful for tracking changes you make in Kivy for example "
"directly with Git."
msgstr "これによりKivyは元の場所にとどまり、Pythonで利用できます。これはKivyで直接行った変更をGitで追跡するのに便利です。"

#: ../../sources/installation/installation-windows.rst:293
msgid ""
"To achieve using Kivy in an alternate location extra tweaking is required. "
"Due to this `issue <https://github.com/pypa/pip/issues/2677>`_ ``wheel`` and"
" ``pip`` install the dependency wheels to ``python\\Lib\\site-"
"packages\\kivy``. So they need to be moved to your actual kivy installation "
"from site-packages."
msgstr ""
"別の場所でKivyを使用するには、余分な調整が必要です。このissue "
"<https://github.com/pypa/pip/issues/2677>`_  のため、python \\ Lib \\ site-"
"packages \\ kivyに依存wheelを「whteel」と「pip」でインストールしてください。したがって、site-"
"packagesら実際のKivyをインストールした場所に移行する必要があります。"

#: ../../sources/installation/installation-windows.rst:298
msgid ""
"After installing the kivy dependencies and downloading or cloning kivy to "
"your favorite location, do the following:"
msgstr "kivyの依存関係をインストールし、好みの場所にkivyをダウンロードまたはクローンしたら次のように実行してください："

#: ../../sources/installation/installation-windows.rst:301
msgid ""
"Move the contents of ``python\\Lib\\site-packages\\kivy\\deps`` to ``your-"
"path\\kivy\\deps`` where ``your-path`` is the path where your kivy is "
"located."
msgstr ""
"python \\ Lib \\ site-packages \\ kivy \\ depsの内容をyour-path \\ kivy \\ "
"depsに移動します。ここで「your-path」はkivyが配置されているパスです。"

#: ../../sources/installation/installation-windows.rst:304
msgid "Remove the ``python\\Lib\\site-packages\\kivy`` directory altogether."
msgstr "python \\ Lib \\ site-packages \\ kivyディレクトリを完全に削除します。"

#: ../../sources/installation/installation-windows.rst:305
msgid ""
"From ``python\\Lib\\site-packages`` move **all** ``kivy.deps.*.dist-info`` "
"directories to ``your-path`` right next to ``kivy``."
msgstr ""
"python \\ Lib \\ site-packagesから、すべての「kivy.deps.*.dist-"
"info」ディレクトリを「kivy」のすぐ隣の「your-path」に移動します。"

#: ../../sources/installation/installation-windows.rst:308
msgid ""
"Now you can safely compile kivy in its current location with one of these "
"commands::"
msgstr "これで、kivyを以下のいずれかのコマンドで安全にコンパイルできます："

#: ../../sources/installation/installation-windows.rst:316
msgid ""
"**If kivy fails to be imported,** you probably didn't delete all the "
"``*.dist-info`` folders and and the kivy or ``kivy.deps*`` folders from "
"site-packages."
msgstr ""
"** kivyのインポートに失敗した場合は、**  おそらく、すべての「* .dist-info」フォルダ、およびkivyまたは「kivy.deps "
"*」フォルダをsite-packagesから削除していない可能性があります。"

#: ../../sources/installation/installation-windows.rst:321
msgid "Making Python available anywhere"
msgstr "Making Python available anywhere(どこでもPythonを利用できるようにする)"

#: ../../sources/installation/installation-windows.rst:323
msgid "There are two methods for launching python on your ``*.py`` files."
msgstr "「* .py」ファイルでPythonを起動するには2つの方法があります。"

#: ../../sources/installation/installation-windows.rst:326
msgid "Double-click method"
msgstr "Double-click method(ダブルクリックメソッド)"

#: ../../sources/installation/installation-windows.rst:328
msgid ""
"If you only have one Python installed, you can associate all ``*.py`` files "
"with your python, if it isn't already, and then run it by double clicking. "
"Or you can only do it once if you want to be able to choose each time:"
msgstr ""
"Pythonが1つしかインストールされていなくてまだ開いていない場合、すべての「* "
".py」ファイルをPythonに関連付けできます。次にダブルクリックして実行します。または毎回選択できるようにしたい場合は、1回だけ行うことができます："

#: ../../sources/installation/installation-windows.rst:332
msgid ""
"Right click on the Python file (.py file extension) of the application you "
"want to launch"
msgstr "起動するアプリケーションのPythonファイル（.pyファイル拡張子）を右クリックします。"

#: ../../sources/installation/installation-windows.rst:335
msgid "From the context menu that appears, select *Open With*"
msgstr "表示されるコンテキストメニューから、「プログラムから開く」を選択します。"

#: ../../sources/installation/installation-windows.rst:336
msgid ""
"Browse your hard disk drive and find the file ``python.exe`` that you want "
"to use. Select it."
msgstr "ハードディスクドライブをブラウズし、使用するpython.exeファイルを探します。選択してください。"

#: ../../sources/installation/installation-windows.rst:339
msgid ""
"Select \"Always open the file with...\" if you don't want to repeat this "
"procedure every time you double click a .py file."
msgstr ".pyファイルをダブルクリックするたびにこの手順を繰り返さない場合は、「常に子のアプリを使ってファイルを開く...」を選択します。"

#: ../../sources/installation/installation-windows.rst:342
msgid "You are done. Open the file."
msgstr "完了です。ファイルを開きます。"

#: ../../sources/installation/installation-windows.rst:345
msgid "Send-to method"
msgstr "Send-to method(「送る」メソッド)"

#: ../../sources/installation/installation-windows.rst:347
msgid "You can launch a .py file with our Python using the Send-to menu:"
msgstr "「送る」メニューを使ってPythonで.pyファイルを起動できます："

#: ../../sources/installation/installation-windows.rst:349
msgid ""
"Browse to the ``python.exe`` file you want to use. Right click on it and "
"copy it."
msgstr "使用するpython.exeファイルを参照してください。右クリックしてコピーします。"

#: ../../sources/installation/installation-windows.rst:352
msgid ""
"Open Windows explorer (File explorer in Windows 8), and to go the address "
"'shell:sendto'. You should get the special Windows directory `SendTo`"
msgstr ""
"Windowsエクスプローラ（Windows 8のファイルエクスプローラ）を開いて "
"「shell：sendto」のアドレスに移動します。特別なWindowsディレクトリ「SendTo」を取得する必要があります"

#: ../../sources/installation/installation-windows.rst:355
msgid "Paste the previously copied ``python.exe`` file **as a shortcut**."
msgstr "以前にコピーしたpython.exeをショートカットとして貼り付けます。"

#: ../../sources/installation/installation-windows.rst:356
msgid "Rename it to python <python-version>. E.g. ``python27-x64``"
msgstr "例えば python27-x64の様にpython <python-version>に名前を変更します。"

#: ../../sources/installation/installation-windows.rst:358
msgid ""
"You can now execute your application by right clicking on the `.py` file -> "
"\"Send To\" -> \"python <python-version>\"."
msgstr ""
".pyファイル - > \"Send To\"  - > \"python <python-"
"version>\"を右クリックしてアプリケーションを実行できるようになりました。"

#: ../../sources/installation/installation-windows.rst:364
msgid "Upgrading from a previous Kivy dist"
msgstr "Upgrading from a previous Kivy dist(以前のKivy開発版からのアップデート)"

#: ../../sources/installation/installation-windows.rst:366
msgid ""
"To install the new wheels to a previous Kivy distribution all the files and "
"folders, except for the python folder should be deleted from the "
"distribution. This python folder will then be treated as a normal system "
"installed python and all the steps described in :ref:`Installation` can then"
" be continued."
msgstr ""
"以前のKivyディストリビューションに新しいwheelをインストールするにはpythonフォルダーを除くすべてのファイルとフォルダーをディストリビューションから削除する必要があります。このpythonフォルダはPythonをインストールした通常のシステムとして扱われ、"
" :ref:`Installation`  で説明されているすべての手順を続行できます"
