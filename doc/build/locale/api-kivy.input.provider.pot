# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-30 06:27+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.input.provider.rst:3
msgid "Motion Event Provider"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/provider.py:docstring of kivy.input.provider:2
msgid "Abstract class for the implementation of a :class:`~kivy.input.motionevent.MotionEvent` provider. The implementation must support the :meth:`~MotionEventProvider.start`, :meth:`~MotionEventProvider.stop` and :meth:`~MotionEventProvider.update` methods."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`builtins.object`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/provider.py:docstring of kivy.input.provider.MotionEventProvider:1
msgid "Base class for a provider."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/provider.py:docstring of kivy.input.provider.MotionEventProvider.start:1
msgid "Start the provider. This method is automatically called when the application is started and if the configuration uses the current provider."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/provider.py:docstring of kivy.input.provider.MotionEventProvider.stop:1
msgid "Stop the provider."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/provider.py:docstring of kivy.input.provider.MotionEventProvider.update:1
msgid "Update the provider and dispatch all the new touch events though the `dispatch_fn` argument."
msgstr ""

