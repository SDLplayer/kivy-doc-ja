# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-06-01 21:12+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/faq.rst:4
msgid "FAQ"
msgstr ""

#: ../../sources/faq.rst:6
msgid "There are a number of questions that repeatedly need to be answered. The following document tries to answer some of them."
msgstr ""

#: ../../sources/faq.rst:12
msgid "Technical FAQ"
msgstr ""

#: ../../sources/faq.rst:15
msgid "Fatal Python error: (pygame parachute) Segmentation Fault"
msgstr ""

#: ../../sources/faq.rst:17
msgid "Most of time, this issue is due to the usage of old graphics drivers. Install the latest graphics driver available for your graphics card, and it should be ok."
msgstr ""

#: ../../sources/faq.rst:20
msgid "If not, this means you have probably triggered some OpenGL code without an available OpenGL context. If you are loading images, atlases, using graphics instructions, you must spawn a Window first::"
msgstr ""

#: ../../sources/faq.rst:31
msgid "If not, please report a detailed issue on github by following the instructions in the :ref:`reporting_issues` section of the :doc:`contribute` documentation. This is very important for us because that kind of error can be very hard to debug. Give us all the information you can give about your environment and execution."
msgstr ""

#: ../../sources/faq.rst:39
msgid "undefined symbol: glGenerateMipmap"
msgstr ""

#: ../../sources/faq.rst:41
msgid "You graphics card or its drivers might be too old. Update your graphics drivers to the latest available version and retry."
msgstr ""

#: ../../sources/faq.rst:45
msgid "ImportError: No module named event"
msgstr ""

#: ../../sources/faq.rst:47
msgid "If you use Kivy from our development version, you must compile it before using it. In the kivy directory, do::"
msgstr ""

#: ../../sources/faq.rst:54
msgid "Android FAQ"
msgstr ""

#: ../../sources/faq.rst:57
msgid "could not extract public data"
msgstr ""

#: ../../sources/faq.rst:59
msgid "This error message can occur under various circumstances. Ensure that:"
msgstr ""

#: ../../sources/faq.rst:61
msgid "you have a phone with an sdcard"
msgstr ""

#: ../../sources/faq.rst:62
msgid "you are not currently in \"USB Mass Storage\" mode"
msgstr ""

#: ../../sources/faq.rst:63
msgid "you have permissions to write to the sdcard"
msgstr ""

#: ../../sources/faq.rst:65
msgid "In the case of the \"USB Mass Storage\" mode error, and if you don't want to keep unplugging the device, set the usb option to Power."
msgstr ""

#: ../../sources/faq.rst:69
msgid "Crash on touch interaction on Android 2.3.x"
msgstr ""

#: ../../sources/faq.rst:71
msgid "There have been reports of crashes on Adreno 200/205 based devices. Apps otherwise run fine but crash when interacted with/through the screen."
msgstr ""

#: ../../sources/faq.rst:74
msgid "These reports also mentioned the issue being resolved when moving to an ICS or higher ROM."
msgstr ""

#: ../../sources/faq.rst:78
msgid "Is it possible to have a kiosk app on android 3.0 ?"
msgstr ""

#: ../../sources/faq.rst:80
msgid "Thomas Hansen have wrote a detailed answer on the kivy-users mailing list:"
msgstr ""

#: ../../sources/faq.rst:82
msgid "https://groups.google.com/d/msg/kivy-users/QKoCekAR1c0/yV-85Y_iAwoJ"
msgstr ""

#: ../../sources/faq.rst:84
msgid "Basically, you need to root the device, remove the SystemUI package, add some lines to the xml configuration, and you're done."
msgstr ""

#: ../../sources/faq.rst:88
msgid "What's the difference between python-for-android from Kivy and SL4A?"
msgstr ""

#: ../../sources/faq.rst:90
msgid "Despite having the same name, Kivy's python-for-android is not related to the python-for-android project from SL4A, Py4A, or android-python27. They are distinctly different projects with different goals. You may be able to use Py4A with Kivy, but no code or effort has been made to do so. The Kivy team feels that our python-for-android is the best solution for us going forward, and attempts to integrate with and support Py4A is not a good use of our time."
msgstr ""

#: ../../sources/faq.rst:99
msgid "Project FAQ"
msgstr ""

#: ../../sources/faq.rst:102
msgid "Why do you use Python? Isn't it slow?"
msgstr ""

#: ../../sources/faq.rst:104
msgid "Let us try to give a thorough answer; please bear with us."
msgstr ""

#: ../../sources/faq.rst:106
msgid "Python is a very agile language that allows you to do many things in a (by comparison) short time. For many development scenarios, we strongly prefer writing our application quickly in a high-level language such as Python, testing it, then optionally optimizing it."
msgstr ""

#: ../../sources/faq.rst:112
msgid "But what about speed? If you compare execution speeds of implementations for a certain set of algorithms (esp. number crunching) you will find that Python is a lot slower than say, C++. Now you may be even more convinced that it's not a good idea in our case to use Python. Drawing sophisticated graphics (and we are not talking about your grandmother's OpenGL here) is computationally quite expensive and given that we often want to do that for rich user experiences, that would be a fair argument. **But**, in virtually every case your application ends up spending most of the time (by far) executing the same part of the code. In Kivy, for example, these parts are event dispatching and graphics drawing. Now Python allows you to do something to make these parts much faster."
msgstr ""

#: ../../sources/faq.rst:127
msgid "By using Cython, you can compile your code down to the C level, and from there your usual C compiler optimizes things. This is a pretty pain free process and if you add some hints to your code, the result becomes even faster. We are talking about a speed up in performance by a factor of anything between 1x and up to more than 1000x (greatly depends on your code). In Kivy, we did this for you and implemented the portions of our code, where efficiency really is critical, on the C level."
msgstr ""

#: ../../sources/faq.rst:136
msgid "For graphics drawing, we also leverage today's GPUs which are, for some tasks such as graphics rasterization, much more efficient than a CPU. Kivy does as much as is reasonable on the GPU to maximize performance. If you use our Canvas API to do the drawing, there is even a compiler that we invented which optimizes your drawing code automatically. If you keep your drawing mostly on the GPU, much of your program's execution speed is not determined by the programming language used, but by the graphics hardware you throw at it."
msgstr ""

#: ../../sources/faq.rst:146
msgid "We believe that these (and other) optimizations that Kivy does for you already make most applications fast enough by far. Often you will even want to limit the speed of the application in order not to waste resources. But even if this is not sufficient, you still have the option of using Cython for your own code to *greatly* speed it up."
msgstr ""

#: ../../sources/faq.rst:153
msgid "Trust us when we say that we have given this very careful thought. We have performed many different benchmarks and come up with some clever optimizations to make your application run smoothly."
msgstr ""

#: ../../sources/faq.rst:159
msgid "Does Kivy support Python 3.x?"
msgstr ""

#: ../../sources/faq.rst:161
msgid "Yes! As of version 1.8.0 Kivy supports both Python >= 2.7 and Python >= 3.3 with the same codebase. Python 3 is also now supported by python-for-android."
msgstr ""

#: ../../sources/faq.rst:165
msgid "However, be aware that while Kivy will run in Python 3.3+, our iOS build tools still require Python 2.7."
msgstr ""

#: ../../sources/faq.rst:170
msgid "How is Kivy related to PyMT?"
msgstr ""

#: ../../sources/faq.rst:172
msgid "Our developers are professionals and are pretty savvy in their area of expertise. However, before Kivy came around there was (and still is) a project named PyMT that was led by our core developers. We learned a great deal from that project during the time that we developed it. In the more than two years of research and development we found many interesting ways to improve the design of our framework. We have performed numerous benchmarks and as it turns out, to achieve the great speed and flexibility that Kivy has, we had to rewrite quite a big portion of the codebase, making this a backwards-incompatible but future-proof decision. Most notable are the performance increases, which are just incredible. Kivy starts and operates just so much faster, due to these heavy optimizations. We also had the opportunity to work with businesses and associations using PyMT. We were able to test our product on a large diversity of setups and made PyMT work on all of them. Writing a system such as Kivy or PyMT is one thing. Making it work under all these different conditions is another. We have a good background here, and brought our knowledge to Kivy."
msgstr ""

#: ../../sources/faq.rst:192
msgid "Furthermore, since some of our core developers decided to drop their full-time jobs and turn to this project completely, it was decided that a more professional foundation had to be laid. Kivy is that foundation. It is supposed to be a stable and professional product. Technically, Kivy is not really a successor to PyMT because there is no easy migration path between them. However, the goal is the same: Producing high-quality applications for novel user interfaces. This is why we encourage everyone to base new projects on Kivy instead of PyMT. Active development of PyMT has stalled. Maintenance patches are still accepted."
msgstr ""

#: ../../sources/faq.rst:206
msgid "Do you accept patches?"
msgstr ""

#: ../../sources/faq.rst:208
msgid "Yes, we love patches. In order to ensure a smooth integration of your precious changes however, please make sure to read our contribution guidelines. Obviously we don't accept every patch. Your patch has to be consistent with our styleguide and, more importantly, make sense. It does make sense to talk to us before you come up with bigger changes, especially new features."
msgstr ""

#: ../../sources/faq.rst:218
msgid "Does the Kivy project participate in Google's Summer of Code ?"
msgstr ""

#: ../../sources/faq.rst:220
msgid "Potential students ask whether we participate in GSoC. The clear answer is: Indeed. :-)"
msgstr ""

#: ../../sources/faq.rst:223
msgid "If you want to participate as a student and want to maximize your chances of being accepted, start talking to us today and try fixing some smaller (or larger, if you can ;-) problems to get used to our workflow. If we know you can work well with us, that'd be a big plus."
msgstr ""

#: ../../sources/faq.rst:228
msgid "Here's a checklist:"
msgstr ""

#: ../../sources/faq.rst:230
msgid "Make sure to read through the website and at least skim the documentation."
msgstr ""

#: ../../sources/faq.rst:231
msgid "Look at the source code."
msgstr ""

#: ../../sources/faq.rst:232
msgid "Read our contribution guidelines."
msgstr ""

#: ../../sources/faq.rst:233
msgid "Pick an idea that you think is interesting from the ideas list (see link above) or come up with your own idea."
msgstr ""

#: ../../sources/faq.rst:235
msgid "Do some research **yourself**. GSoC is not about us teaching you something and you getting paid for that. It is about you trying to achieve agreed upon goals by yourself with our support. The main driving force in this should be, obviously, yourself.  Many students come up and ask what they should do. Well, we don't know because we know neither your interests nor your skills. Show us you're serious about it and take initiative."
msgstr ""

#: ../../sources/faq.rst:241
msgid "Write a draft proposal about what you want to do. Include what you understand the current state is (very roughly), what you would like to improve and how, etc."
msgstr ""

#: ../../sources/faq.rst:244
msgid "Discuss that proposal with us in a timely manner. Get feedback."
msgstr ""

#: ../../sources/faq.rst:245
msgid "Be patient! Especially on IRC. We will try to get to you if we're available. If not, send an email and just wait. Most questions are already answered in the docs or somewhere else and can be found with some research. If your questions don't reflect that you've actually thought through what you're asking, it might not be well received."
msgstr ""

#: ../../sources/faq.rst:251
msgid "Good luck! :-)"
msgstr ""

