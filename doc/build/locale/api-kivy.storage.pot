# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-06-01 21:12+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.storage.rst:3
msgid "Storage"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:6
msgid "This module is still experimental, and the API is subject to change in a future version."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:10
msgid "Usage"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:12
msgid "The idea behind the Storage module is to be able to load/store any number of key-value pairs via an indexed key. The default model is abstract so you cannot use it directly. We provide some implementations such as:"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:16
msgid ":class:`kivy.storage.dictstore.DictStore`: use a python dict as a store"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:17
msgid ":class:`kivy.storage.jsonstore.JsonStore`: use a `JSON <https://en.wikipedia.org/wiki/JSON>`_ file as a store"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:19
msgid ":class:`kivy.storage.redisstore.RedisStore`: use a `Redis <http://redis.io>`_ database with `redis-py <https://github.com/andymccurdy/redis-py>`_"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:24
msgid "Examples"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:26
msgid "For example, let's use a JsonStore::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:47
msgid "Because the data is persistent, you can check later to see if the key exists::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:58
msgid "Synchronous / Asynchronous API"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:60
msgid "All the standard methods (:meth:`~AbstractStore.get`, :meth:`~AbstractStore.put` , :meth:`~AbstractStore.exists`, :meth:`~AbstractStore.delete`, :meth:`~AbstractStore.find`) have an asynchronous version."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:65
msgid "For example, the *get* method has a `callback` parameter. If set, the `callback` will be used to return the result to the user when available: the request will be asynchronous. If the `callback` is None, then the request will be synchronous and the result will be returned directly."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:71
msgid "Without callback (Synchronous API)::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:76
msgid "With callback (Asynchronous API)::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:83
msgid "The callback signature (for almost all methods) is::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:94
msgid "Synchronous container type"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage:96
msgid "The storage API emulates the container type for the synchronous API::"
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore:1
msgid "Abstract class used to implement a Store"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_clear:1
msgid "Asynchronous version of :meth:`clear`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_count:1
msgid "Asynchronously return the number of entries in the storage."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_delete:1
msgid "Asynchronous version of :meth:`delete`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_delete:4
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_exists:4
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_find:6
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_get:4
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_put:4
msgid "`store`: :class:`AbstractStore` instance"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_delete:5
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_exists:5
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_find:7
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_get:5
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_put:5
msgid "Store instance"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_delete:6
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_exists:6
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_find:9
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_get:6
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_put:6
msgid "`key`: string"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_delete:7
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_exists:7
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_get:7
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_put:7
msgid "Name of the key to search for"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_delete:9
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_find:12
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_put:9
msgid "`result`: bool"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_delete:9
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_find:12
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_put:9
msgid "Indicate True if the storage has been updated, or False if nothing has been done (no changes). None if any error."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_exists:1
msgid "Asynchronous version of :meth:`exists`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_exists:8
msgid "`result`: boo"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_exists:9
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_get:9
msgid "Result of the query, None if any error"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_find:1
msgid "Asynchronous version of :meth:`find`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_find:3
msgid "The callback will be called for each entry in the result."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_find:9
msgid "Name of the key to search for, or None if we reach the end of the results"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_get:1
msgid "Asynchronous version of :meth:`get`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_get:8
msgid "`result`: dict"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_keys:1
msgid "Asynchronously return all the keys in the storage."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.async_put:1
msgid "Asynchronous version of :meth:`put`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.clear:1
msgid "Wipe the whole storage."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.count:1
msgid "Return the number of entries in the storage."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.delete:1
msgid "Delete a key from the storage. If the key is not found, a `KeyError` exception will be thrown."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.exists:1
msgid "Check if a key exists in the store."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.find:1
msgid "Return all the entries matching the filters. The entries are returned through a generator as a list of (key, entry) pairs where *entry* is a dict of key-value pairs ::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.find:8
msgid "Because it's a generator, you cannot directly use it as a list. You can do::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.get:1
msgid "Get the key-value pairs stored at `key`. If the key is not found, a `KeyError` exception will be thrown."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.keys:1
msgid "Return a list of all the keys in the storage."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/storage/__init__.py:docstring of kivy.storage.AbstractStore.put:1
msgid "Put new key-value pairs (given in *values*) into the storage. Any existing key-value pairs will be removed."
msgstr ""

