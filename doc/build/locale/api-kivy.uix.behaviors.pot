# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-30 06:27+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.uix.behaviors.rst:3
msgid "Behaviors"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:5
msgid "Behavior mixin classes"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:7
msgid "This module implements behaviors that can be `mixed in <https://en.wikipedia.org/wiki/Mixin>`_ with existing base widgets. The idea behind these classes is to encapsulate properties and events associated with certain types of widgets."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:12
msgid "Isolating these properties and events in a mixin class allows you to define your own implementation for standard kivy widgets that can act as drop-in replacements. This means you can re-style and re-define widgets as desired without breaking compatibility: as long as they implement the behaviors correctly, they can simply replace the standard widgets."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:19
msgid "Adding behaviors"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:21
msgid "Say you want to add :class:`~kivy.uix.button.Button` capabilities to an :class:`~kivy.uix.image.Image`, you could do::"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:27
msgid "This would give you an :class:`~kivy.uix.image.Image` with the events and properties inherited from :class:`ButtonBehavior`. For example, the *on_press* and *on_release* events would be fired when appropriate::"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:35
msgid "Or in kv:"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:42
msgid "Naturally, you could also bind to any property changes the behavior class offers:"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:56
msgid "The behavior class must always be _before_ the widget class. If you don't specify the inheritance in this order, the behavior will not work because the behavior methods are overwritten by the class method listed first."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:60
msgid "Similarly, if you combine a behavior class with a class which requires the use of the methods also defined by the behavior class, the resulting class may not function properly. For example, when combining the :class:`ButtonBehavior` with a :class:`~kivy.uix.slider.Slider`, both of which use the :meth:`~kivy.uix.widget.Widget.on_touch_up` method, the resulting class may not work properly."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors:69
msgid "The individual behavior classes, previously in one big `behaviors.py` file, has been split into a single file for each class under the :mod:`~kivy.uix.behaviors` module. All the behaviors are still imported in the :mod:`~kivy.uix.behaviors` module so they are accessible as before (e.g. both `from kivy.uix.behaviors import ButtonBehavior` and `from kivy.uix.behaviors.button import ButtonBehavior` work)."
msgstr ""

#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
msgid "ベースクラス: :class:`builtins.object`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ButtonBehavior:1
msgid "This `mixin <https://en.wikipedia.org/wiki/Mixin>`_ class provides :class:`~kivy.uix.button.Button` behavior. Please see the :mod:`button behaviors module <kivy.uix.behaviors.button>` documentation for more information."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ButtonBehavior:7
msgid "`on_press`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ButtonBehavior:8
msgid "Fired when the button is pressed."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ButtonBehavior:13
msgid "`on_release`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ButtonBehavior:10
msgid "Fired when the button is released (i.e. the touch/click that pressed the button goes away)."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ButtonBehavior.trigger_action:1
msgid "Trigger whatever action(s) have been bound to the button by calling both the on_press and on_release callbacks."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ButtonBehavior.trigger_action:4
msgid "This simulates a quick button press without using any touch events."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ButtonBehavior.trigger_action:6
msgid "Duration is the length of the press in seconds. Pass 0 if you want the action to happen instantly."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.uix.behaviors.button.ButtonBehavior`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ToggleButtonBehavior:1
msgid "This `mixin <https://en.wikipedia.org/wiki/Mixin>`_ class provides :mod:`~kivy.uix.togglebutton` behavior. Please see the :mod:`togglebutton behaviors module <kivy.uix.behaviors.togglebutton>` documentation for more information."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ToggleButtonBehavior.get_widgets:1
msgid "Return a list of the widgets contained in a specific group. If the group doesn't exist, an empty list will be returned."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ToggleButtonBehavior.get_widgets:6
msgid "Always release the result of this method! Holding a reference to any of these widgets can prevent them from being garbage collected. If in doubt, do::"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.ToggleButtonBehavior.get_widgets:16
msgid "It's possible that some widgets that you have previously deleted are still in the list. The garbage collector might need to release other objects before flushing them."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.DragBehavior:1
msgid "The DragBehavior `mixin <https://en.wikipedia.org/wiki/Mixin>`_ provides Drag behavior. When combined with a widget, dragging in the rectangle defined by :attr:`drag_rectangle` will drag the widget. Please see the :mod:`drag behaviors module <kivy.uix.behaviors.drag>` documentation for more information."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior:1
msgid "Provides keyboard focus behavior. When combined with other FocusBehavior widgets it allows one to cycle focus among them by pressing tab. Please see the :mod:`focus behavior module documentation <kivy.uix.behaviors.focus>` for more information."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.get_focus_next:1
msgid "Returns the next focusable widget using either :attr:`focus_next` or the :attr:`children` similar to the order when tabbing forwards with the ``tab`` key."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.get_focus_previous:1
msgid "Returns the previous focusable widget using either :attr:`focus_previous` or the :attr:`children` similar to the order when ``tab`` + ``shift`` key are triggered together."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.hide_keyboard:1
msgid "Convenience function to hide the keyboard in managed mode."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.keyboard_on_key_down:1
#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.keyboard_on_key_up:1
msgid "The method bound to the keyboard when the instance has focus."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.keyboard_on_key_down:3
msgid "When the instance becomes focused, this method is bound to the keyboard and will be called for every input press. The parameters are the same as :meth:`kivy.core.window.WindowBase.on_key_down`."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.keyboard_on_key_down:7
msgid "When overwriting the method in the derived widget, super should be called to enable tab cycling. If the derived widget wishes to use tab for its own purposes, it can call super after it has processed the character (if it does not wish to consume the tab)."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.keyboard_on_key_down:12
msgid "Similar to other keyboard functions, it should return True if the key was consumed."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.keyboard_on_key_up:3
msgid "When the instance becomes focused, this method is bound to the keyboard and will be called for every input release. The parameters are the same as :meth:`kivy.core.window.WindowBase.on_key_up`."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.keyboard_on_key_up:7
msgid "When overwriting the method in the derived widget, super should be called to enable de-focusing on escape. If the derived widget wishes to use escape for its own purposes, it can call super after it has processed the character (if it does not wish to consume the escape)."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.keyboard_on_key_up:12
msgid "See :meth:`keyboard_on_key_down`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.FocusBehavior.show_keyboard:1
msgid "Convenience function to show the keyboard in managed mode."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior:1
msgid "The Selection behavior `mixin <https://en.wikipedia.org/wiki/Mixin>`_ implements the logic behind keyboard and touch selection of selectable widgets managed by the derived widget. Please see the :mod:`compound selection behaviors module <kivy.uix.behaviors.compoundselection>` documentation for more information."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.clear_selection:1
msgid "Deselects all the currently selected nodes."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.deselect_node:1
msgid "Deselects a possibly selected node."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.deselect_node:3
msgid "It is called by the controller when it deselects a node and can also be called from the outside to deselect a node directly. The derived widget should overwrite this method and change the node to its unselected state when this is called"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.deselect_node:10
#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_node:10
#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_touch:9
msgid "`node`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.deselect_node:10
msgid "The node to be deselected."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.deselect_node:14
#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_node:17
msgid "This method must be called by the derived widget using super if it is overwritten."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.get_index_of_node:1
msgid "(internal) Returns the index of the `node` within the `selectable_nodes` returned by :meth:`get_selectable_nodes`."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.get_selectable_nodes:1
msgid "(internal) Returns a list of the nodes that can be selected. It can be overwritten by the derived widget to return the correct list."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.get_selectable_nodes:4
msgid "This list is used to determine which nodes to select with group selection. E.g. the last element in the list will be selected when home is pressed, pagedown will move (or add to, if shift is held) the selection from the current position by negative :attr:`page_count` nodes starting from the position of the currently selected node in this list and so on. Still, nodes can be selected even if they are not in this list."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.get_selectable_nodes:14
msgid "It is safe to dynamically change this list including removing, adding, or re-arranging its elements. Nodes can be selected even if they are not on this list. And selected nodes removed from the list will remain selected until :meth:`deselect_node` is called."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.get_selectable_nodes:21
msgid "Layouts display their children in the reverse order. That is, the contents of :attr:`~kivy.uix.widget.Widget.children` is displayed form right to left, bottom to top. Therefore, internally, the indices of the elements returned by this function are reversed to make it work by default for most layouts so that the final result is consistent e.g. home, although it will select the last element in this list visually, will select the first element when counting from top to bottom and left to right. If this behavior is not desired, a reversed list should be returned instead."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.get_selectable_nodes:31
msgid "Defaults to returning :attr:`~kivy.uix.widget.Widget.children`."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:1
msgid "(internal) Used by the controller to get the node at the position indicated by key. The key can be keyboard inputs, e.g. pageup, or scroll inputs from the mouse scroll wheel, e.g. scrollup. 'last_node' is the last node selected and is used to find the resulting node. For example, if the key is up, the returned node is one node up from the last node."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:8
msgid "It can be overwritten by the derived widget."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:16
msgid "`key`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:12
msgid "str, the string used to find the desired node. It can be any of the keyboard keys, as well as the mouse scrollup, scrolldown, scrollright, and scrollleft strings. If letters are typed in quick succession, the letters will be combined before it's passed in as key and can be used to find nodes that have an associated string that starts with those letters."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:18
msgid "`last_node`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:19
msgid "The last node that was selected."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:24
msgid "`last_node_idx`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:21
msgid "The cached index of the last node selected in the :meth:`get_selectable_nodes` list. If the list hasn't changed it saves having to look up the index of `last_node` in that list."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.goto_node:27
msgid "tuple, the node targeted by key and its index in the :meth:`get_selectable_nodes` list. Returning `(last_node, last_node_idx)` indicates a node wasn't found."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_node:1
msgid "Selects a node."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_node:3
msgid "It is called by the controller when it selects a node and can be called from the outside to select a node directly. The derived widget should overwrite this method and change the node state to selected when called."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_node:10
msgid "The node to be selected."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_node:13
msgid "bool, True if the node was selected, False otherwise."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_key_down:1
msgid "Processes a key press. This is called when a key press is to be used for selection. Depending on the keyboard keys pressed and the configuration, it could select or deselect nodes or node ranges from the selectable nodes list, :meth:`get_selectable_nodes`."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_key_down:6
msgid "The parameters are such that it could be bound directly to the on_key_down event of a keyboard. Therefore, it is safe to be called repeatedly when the key is held down as is done by the keyboard."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_key_down:11
msgid "bool, True if the keypress was used, False otherwise."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_key_up:1
msgid "(internal) Processes a key release. This must be called by the derived widget when a key that :meth:`select_with_key_down` returned True is released."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_key_up:5
msgid "The parameters are such that it could be bound directly to the on_key_up event of a keyboard."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_key_up:9
msgid "bool, True if the key release was used, False otherwise."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_touch:1
msgid "(internal) Processes a touch on the node. This should be called by the derived widget when a node is touched and is to be used for selection. Depending on the keyboard keys pressed and the configuration, it could select or deslect this and other nodes in the selectable nodes list, :meth:`get_selectable_nodes`."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_touch:9
msgid "The node that received the touch. Can be None for a scroll type touch."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_touch:12
msgid "`touch`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_touch:12
msgid "Optionally, the touch. Defaults to None."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CompoundSelectionBehavior.select_with_touch:15
msgid "bool, True if the touch was used, False otherwise."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CodeNavigationBehavior:1
msgid "Code navigation behavior. Modifies the navigation behavior in TextInput to work like an IDE instead of a word processor. Please see the :mod:`code navigation behaviors module <kivy.uix.behaviors.codenavigation>` documentation for more information."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.EmacsBehavior:1
msgid "A `mixin <https://en.wikipedia.org/wiki/Mixin>`_ that enables Emacs-style keyboard shortcuts for the :class:`~kivy.uix.textinput.TextInput` widget. Please see the :mod:`Emacs behaviors module <kivy.uix.behaviors.emacs>` documentation for more information."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.EmacsBehavior.delete_word_left:1
msgid "Delete text left of the cursor to the beginning of word"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.EmacsBehavior.delete_word_right:1
msgid "Delete text right of the cursor to the end of the word"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/__init__.py:docstring of kivy.uix.behaviors.CoverBehavior:1
msgid "The CoverBehavior `mixin <https://en.wikipedia.org/wiki/Mixin>`_ provides rendering a texture covering full widget size keeping aspect ratio of the original texture."
msgstr ""

