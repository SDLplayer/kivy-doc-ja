# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-30 06:27+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.input.rst:3
msgid "Input management"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:2
msgid "Our input system is wide and simple at the same time. We are currently able to natively support :"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:5
msgid "Windows multitouch events (pencil and finger)"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:6
msgid "OS X touchpads"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:7
msgid "Linux multitouch events (kernel and mtdev)"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:8
msgid "Linux wacom drivers (pencil and finger)"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:9
msgid "TUIO"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:11
msgid "All the input management is configurable in the Kivy :mod:`~kivy.config`. You can easily use many multitouch devices in one Kivy application."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:14
msgid "When the events have been read from the devices, they are dispatched through a post processing module before being sent to your application. We also have several default modules for :"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:18
msgid "Double tap detection"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:19
msgid "Decreasing jittering"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:20
msgid "Decreasing the inaccuracy of touch on \"bad\" DIY hardware"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input:21
msgid "Ignoring regions"
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`kivy.input.motionevent.MotionEvent`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent:1
msgid "Abstract class that represents an input event (touch or non-touch)."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent:4
msgid "`id`: str"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent:5
msgid "unique ID of the MotionEvent"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent:8
msgid "`args`: list"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent:7
msgid "list of parameters, passed to the depack() function"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.apply_transform_2d:1
msgid "Apply a transformation on x, y, z, px, py, pz, ox, oy, oz, dx, dy, dz"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.copy_to:1
msgid "Copy some attribute to another touch object."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.depack:1
msgid "Depack `args` into attributes of the class"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.distance:1
msgid "Return the distance between the current touch and another touch."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.dpos:1
msgid "Return delta between last position and current position, in the screen coordinate system (self.dx, self.dy)"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.grab:1
msgid "Grab this motion event. You can grab a touch if you want to receive subsequent :meth:`~kivy.uix.widget.Widget.on_touch_move` and :meth:`~kivy.uix.widget.Widget.on_touch_up` events, even if the touch is not dispatched by the parent:"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.is_mouse_scrolling:1
msgid "Returns True if the touch is a mousewheel scrolling"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.move:1
msgid "Move the touch to another position"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.opos:1
msgid "Return the initial position of the touch in the screen coordinate system (self.ox, self.oy)"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.pop:1
msgid "Pop attributes values from the stack"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.ppos:1
msgid "Return the previous position of the touch in the screen coordinate system (self.px, self.py)"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.push:1
msgid "Push attribute values in `attrs` onto the stack"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.scale_for_screen:1
msgid "Scale position for the screen"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.spos:1
msgid "Return the position in the 0-1 coordinate system (self.sx, self.sy)"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEvent.ungrab:1
msgid "Ungrab a previously grabbed touch"
msgstr ""

#: ../../<autodoc>:1
#: ../../<autodoc>:1
msgid "ベースクラス: :class:`builtins.object`"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEventProvider:1
msgid "Base class for a provider."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEventProvider.start:1
msgid "Start the provider. This method is automatically called when the application is started and if the configuration uses the current provider."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEventProvider.stop:1
msgid "Stop the provider."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEventProvider.update:1
msgid "Update the provider and dispatch all the new touch events though the `dispatch_fn` argument."
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEventFactory:1
msgid "MotionEvent factory is a class that registers all availables input factories. If you create a new input factory, you need to register it here::"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEventFactory.get:1
msgid "Get a provider class from the provider id"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEventFactory.list:1
msgid "Get a list of all available providers"
msgstr ""

#: ../../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/input/__init__.py:docstring of kivy.input.MotionEventFactory.register:1
msgid "Register a input provider in the database"
msgstr ""

