# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-06-01 21:12+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.uix.behaviors.focus.rst:3
msgid "Focus Behavior"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:2
msgid "The :class:`~kivy.uix.behaviors.FocusBehavior` `mixin <https://en.wikipedia.org/wiki/Mixin>`_ class provides keyboard focus behavior. When combined with other FocusBehavior widgets it allows one to cycle focus among them by pressing tab. In addition, upon gaining focus, the instance will automatically receive keyboard input."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:9
msgid "Focus, very different from selection, is intimately tied with the keyboard; each keyboard can focus on zero or one widgets, and each widget can only have the focus of one keyboard. However, multiple keyboards can focus simultaneously on different widgets. When escape is hit, the widget having the focus of that keyboard will de-focus."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:16
msgid "Managing focus"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:18
msgid "In essence, focus is implemented as a doubly linked list, where each node holds a (weak) reference to the instance before it and after it, as visualized when cycling through the nodes using tab (forward) or shift+tab (backward). If a previous or next widget is not specified, :attr:`focus_next` and :attr:`focus_previous` defaults to `None`. This means that the :attr:`~kivy.uix.widget.Widget.children` list and :attr:`parents <kivy.uix.widget.Widget.parent>` are walked to find the next focusable widget, unless :attr:`focus_next` or :attr:`focus_previous` is set to the `StopIteration` class, in which case focus stops there."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:29
msgid "For example, to cycle focus between :class:`~kivy.uix.button.Button` elements of a :class:`~kivy.uix.gridlayout.GridLayout`::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:41
msgid "When using a software keyboard, typical on mobile and touch devices, the keyboard display behavior is determined by the :attr:`~kivy.core.window.WindowBase.softinput_mode` property. You can use this property to ensure the focused widget is not covered or obscured by the keyboard."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:48
msgid "Initializing focus"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:50
msgid "Widgets needs to be visible before they can receive the focus. This means that setting their *focus* property to True before they are visible will have no effect. To initialize focus, you can use the 'on_parent' event::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:67
msgid "If you are using a :class:`~kivy.uix.popup`, you can use the 'on_open' event."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:69
msgid "For an overview of behaviors, please refer to the :mod:`~kivy.uix.behaviors` documentation."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus:74
msgid "This code is still experimental, and its API is subject to change in a future version."
msgstr ""

#: ../../<autodoc>:1
msgid "ベースクラス: :class:`builtins.object`"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior:1
msgid "Provides keyboard focus behavior. When combined with other FocusBehavior widgets it allows one to cycle focus among them by pressing tab. Please see the :mod:`focus behavior module documentation <kivy.uix.behaviors.focus>` for more information."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus:1
msgid "Whether the instance currently has focus."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus:3
msgid "Setting it to True will bind to and/or request the keyboard, and input will be forwarded to the instance. Setting it to False will unbind and/or release the keyboard. For a given keyboard, only one widget can have its focus, so focusing one will automatically unfocus the other instance holding its focus."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus:9
msgid "When using a software keyboard, please refer to the :attr:`~kivy.core.window.WindowBase.softinput_mode` property to determine how the keyboard display is handled."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus:13
msgid ":attr:`focus` is a :class:`~kivy.properties.BooleanProperty` and defaults to False."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus_next:1
msgid "The :class:`FocusBehavior` instance to acquire focus when tab is pressed and this instance has focus, if not `None` or `StopIteration`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus_next:5
msgid "When tab is pressed, focus cycles through all the :class:`FocusBehavior` widgets that are linked through :attr:`focus_next` and are focusable. If :attr:`focus_next` is `None`, it instead walks the children lists to find the next focusable widget. Finally, if :attr:`focus_next` is the `StopIteration` class, focus won't move forward, but end here."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus_next:22
msgid ":attr:`focus_next` is an :class:`~kivy.properties.ObjectProperty` and defaults to `None`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus_previous:1
msgid "The :class:`FocusBehavior` instance to acquire focus when shift+tab is pressed on this instance, if not None or `StopIteration`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus_previous:4
msgid "When shift+tab is pressed, focus cycles through all the :class:`FocusBehavior` widgets that are linked through :attr:`focus_previous` and are focusable. If :attr:`focus_previous` is `None`, it instead walks the children tree to find the previous focusable widget. Finally, if :attr:`focus_previous` is the `StopIteration` class, focus won't move backward, but end here."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focus_previous:21
msgid ":attr:`focus_previous` is an :class:`~kivy.properties.ObjectProperty` and defaults to `None`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focused:1
msgid "An alias of :attr:`focus`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focused:3
msgid ":attr:`focused` is a :class:`~kivy.properties.BooleanProperty` and defaults to False."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.focused:7
msgid ":attr:`focused` is an alias of :attr:`focus` and will be removed in 2.0.0."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.get_focus_next:1
msgid "Returns the next focusable widget using either :attr:`focus_next` or the :attr:`children` similar to the order when tabbing forwards with the ``tab`` key."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.get_focus_previous:1
msgid "Returns the previous focusable widget using either :attr:`focus_previous` or the :attr:`children` similar to the order when ``tab`` + ``shift`` key are triggered together."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.hide_keyboard:1
msgid "Convenience function to hide the keyboard in managed mode."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.ignored_touch:1
msgid "A list of touches that should not be used to defocus. After on_touch_up, every touch that is not in :attr:`ignored_touch` will defocus all the focused widgets if the config keyboard mode is not multi. Touches on focusable widgets that were used to focus are automatically added here."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.ignored_touch:6
msgid "Example usage::"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.ignored_touch:14
msgid "Notice that you need to access this as a class, not an instance variable."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.input_type:1
msgid "The kind of input keyboard to request."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.input_type:5
msgid ":attr:`input_type` is an :class:`~kivy.properties.OptionsProperty` and defaults to 'text'. Can be one of 'text', 'number', 'url', 'mail', 'datetime', 'tel' or 'address'."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.is_focusable:1
msgid "Whether the instance can become focused. If focused, it'll lose focus when set to False."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.is_focusable:4
msgid ":attr:`is_focusable` is a :class:`~kivy.properties.BooleanProperty` and defaults to True on a desktop (i.e. `desktop` is True in :mod:`~kivy.config`), False otherwise."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:1
msgid "The keyboard to bind to (or bound to the widget) when focused."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:3
msgid "When None, a keyboard is requested and released whenever the widget comes into and out of focus. If not None, it must be a keyboard, which gets bound and unbound from the widget whenever it's in or out of focus. It is useful only when more than one keyboard is available, so it is recommended to be set to None when only one keyboard is available."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:9
msgid "If more than one keyboard is available, whenever an instance gets focused a new keyboard will be requested if None. Unless the other instances lose focus (e.g. if tab was used), a new keyboard will appear. When this is undesired, the keyboard property can be used. For example, if there are two users with two keyboards, then each keyboard can be assigned to different groups of instances of FocusBehavior, ensuring that within each group, only one FocusBehavior will have focus, and will receive input from the correct keyboard. See `keyboard_mode` in :mod:`~kivy.config` for more information on the keyboard modes."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:19
msgid "**Keyboard and focus behavior**"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:21
msgid "When using the keyboard, there are some important default behaviors you should keep in mind."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:24
msgid "When Config's `keyboard_mode` is multi, each new touch is considered a touch by a different user and will set the focus (if clicked on a focusable) with a new keyboard. Already focused elements will not lose their focus (even if an unfocusable widget is touched)."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:29
msgid "If the keyboard property is set, that keyboard will be used when the instance gets focused. If widgets with different keyboards are linked through :attr:`focus_next` and :attr:`focus_previous`, then as they are tabbed through, different keyboards will become active. Therefore, typically it's undesirable to link instances which are assigned different keyboards."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:36
msgid "When a widget has focus, setting its keyboard to None will remove its keyboard, but the widget will then immediately try to get another keyboard. In order to remove its keyboard, rather set its :attr:`focus` to False."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:41
msgid "When using a software keyboard, typical on mobile and touch devices, the keyboard display behavior is determined by the :attr:`~kivy.core.window.WindowBase.softinput_mode` property. You can use this property to ensure the focused widget is not covered or obscured."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard:46
msgid ":attr:`keyboard` is an :class:`~kivy.properties.AliasProperty` and defaults to None."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_mode:1
msgid "Determines how the keyboard visibility should be managed. 'auto' will result in the standard behaviour of showing/hiding on focus. 'managed' requires setting the keyboard visibility manually, or calling the helper functions :meth:`show_keyboard` and :meth:`hide_keyboard`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_mode:6
msgid ":attr:`keyboard_mode` is an :class:`~kivy.properties.OptionsProperty` and defaults to 'auto'. Can be one of 'auto' or 'managed'."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_down:1
#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_up:1
msgid "The method bound to the keyboard when the instance has focus."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_down:3
msgid "When the instance becomes focused, this method is bound to the keyboard and will be called for every input press. The parameters are the same as :meth:`kivy.core.window.WindowBase.on_key_down`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_down:7
msgid "When overwriting the method in the derived widget, super should be called to enable tab cycling. If the derived widget wishes to use tab for its own purposes, it can call super after it has processed the character (if it does not wish to consume the tab)."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_down:12
msgid "Similar to other keyboard functions, it should return True if the key was consumed."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_up:3
msgid "When the instance becomes focused, this method is bound to the keyboard and will be called for every input release. The parameters are the same as :meth:`kivy.core.window.WindowBase.on_key_up`."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_up:7
msgid "When overwriting the method in the derived widget, super should be called to enable de-focusing on escape. If the derived widget wishes to use escape for its own purposes, it can call super after it has processed the character (if it does not wish to consume the escape)."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_up:12
msgid "See :meth:`keyboard_on_key_down`"
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.show_keyboard:1
msgid "Convenience function to show the keyboard in managed mode."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.unfocus_on_touch:1
msgid "Whether a instance should lose focus when clicked outside the instance."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.unfocus_on_touch:3
msgid "When a user clicks on a widget that is focus aware and shares the same keyboard as this widget (which in the case of only one keyboard, are all focus aware widgets), then as the other widgets gains focus, this widget loses focus. In addition to that, if this property is `True`, clicking on any widget other than this widget, will remove focus form this widget."
msgstr ""

#: ../../../../../../appdata/local/programs/python/python35-32/lib/site-packages/kivy/uix/behaviors/focus.py:docstring of kivy.uix.behaviors.focus.FocusBehavior.unfocus_on_touch:10
msgid ":attr:`unfocus_on_touch` is a :class:`~kivy.properties.BooleanProperty` and defaults to `False` if the `keyboard_mode` in :attr:`~kivy.config.Config` is `'multi'` or `'systemandmulti'`, otherwise it defaults to `True`."
msgstr ""

