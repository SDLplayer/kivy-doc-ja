# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-15 00:59+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../sources/installation/deps-cython.rst:4
#: ../../sources/installation/installation-linux-venvs.rst:12
#: ../../sources/installation/installation-linux-venvs.rst:19
msgid "Cython"
msgstr ""

#: ../../sources/installation/deps-cython.rst:6
msgid "|cython_note|"
msgstr ""

#: ../../sources/installation/deps-cython.rst:9
msgid "Working versions"
msgstr ""

#: ../../sources/installation/deps-cython.rst:11
msgid "Kivy 1.11.0.dev0 -> |cython_install|"
msgstr ""

#: ../../sources/installation/deps-cython.rst:12
msgid "Kivy 1.10.1 -> Cython==0.28.2"
msgstr ""

#: ../../sources/installation/deps-cython.rst:13
msgid "Kivy 1.10.0 -> Cython==0.25.2"
msgstr ""

#: ../../sources/installation/deps-cython.rst:14
msgid "Kivy 1.9.1 -> Cython==0.23.1"
msgstr ""

#: ../../sources/installation/deps-cython.rst:15
msgid "Kivy 1.9.0 -> Cython==0.21.2"
msgstr ""

#: ../../sources/installation/deps-cython.rst:17
msgid "To force a version of cython, use::"
msgstr ""

#: ../../sources/installation/deps-cython.rst:21
msgid "where <version> is the appropriate version number."
msgstr ""

#: ../../sources/installation/deps-cython.rst:24
msgid "Known issues"
msgstr ""

#: ../../sources/installation/deps-cython.rst:26
msgid "0.27 -> Kivy Cython declaration bug in 1.10.0 causes failing compilation"
msgstr ""

#: ../../sources/installation/deps-cython.rst:29
msgid "Unsupported"
msgstr ""

#: ../../sources/installation/deps-cython.rst:31
msgid ""
"0.27 - 0.27.2 -> Kivy doesn't compile on Python 3.4 with `MinGWPy "
"<http://mingwpy.github.io>`_ because of a used unexported symbol during "
"the compilation. For more details see `this issue. "
"<https://github.com/cython/cython/issues/1968>`_"
msgstr ""

#: ../../sources/installation/installation.rst:4
msgid "Basic Installation"
msgstr ""

#: ../../sources/installation/installation.rst:6
msgid ""
"Kivy offers a lot of customizability when it comes to installation. The "
"following lists an easy installation method for each platform that should"
" bring along all necessary dependencies. Ways to adjust how kivy is "
"installed and how to setup kivy for developement can be read below under "
"the :ref:`advanced_installation` section."
msgstr ""

#: ../../sources/installation/installation.rst:9
msgid ""
"Note that Kivy runs on even more platforms than the ones listed below. "
"See :ref:`packaging` for a list of all supported target platforms."
msgstr ""

#: ../../sources/installation/installation-devel.rst:137
#: ../../sources/installation/installation.rst:12
msgid "Windows"
msgstr ""

#: ../../sources/installation/installation.rst:14
msgid "Install kivy along with Windows-specific dependencies::"
msgstr ""

#: ../../sources/installation/installation.rst:18
#: ../../sources/installation/installation.rst:33
msgid ""
"Optionally, install examples featured in the `Gallery of Examples "
"<https://kivy.org/doc/stable/examples/gallery.html>`_::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:64
#: ../../sources/installation/installation.rst:23
msgid "OS X"
msgstr ""

#: ../../sources/installation/installation.rst:25
msgid "First, install necessary packages using homebrew::"
msgstr ""

#: ../../sources/installation/installation.rst:29
msgid "Then install kivy using pip::"
msgstr ""

#: ../../sources/installation/installation.rst:39
msgid "Linux"
msgstr ""

#: ../../sources/installation/installation.rst:42
msgid "Ubuntu based Distros (Ubuntu, Mint, Bhodi)"
msgstr ""

#: ../../sources/installation/installation.rst:44
#: ../../sources/installation/installation.rst:64
msgid "Add kivy PPA::"
msgstr ""

#: ../../sources/installation/installation.rst:48
msgid "Update packages list of apt::"
msgstr ""

#: ../../sources/installation/installation.rst:52
#: ../../sources/installation/installation.rst:76
msgid "Install kivy dependencies (leave out the `3` for Python 2.x)::"
msgstr ""

#: ../../sources/installation/installation.rst:56
#: ../../sources/installation/installation.rst:80
msgid ""
"Optionally, install some examples featured in the `Gallery of Examples "
"<https://kivy.org/doc/stable/examples/gallery.html>`_::"
msgstr ""

#: ../../sources/installation/installation.rst:62
msgid "Debian (Jessie or newer)"
msgstr ""

#: ../../sources/installation/installation.rst:68
msgid "Add GPG to your apt keyring for our repository::"
msgstr ""

#: ../../sources/installation/installation.rst:72
msgid "Update package list of apt::"
msgstr ""

#: ../../sources/installation/installation.rst:85
msgid "Raspberri Pi"
msgstr ""

#: ../../sources/installation/installation.rst:87
msgid ""
"Installation on a Raspberri Pi is a little complicated, its instructions "
"can be found on a separate page: :ref:`installation_rpi`."
msgstr ""

#: ../../sources/installation/installation.rst:91
msgid "Other Distros"
msgstr ""

#: ../../sources/installation/installation.rst:93
msgid "For other distros, we recommend :ref:`installation_in_venv` ."
msgstr ""

#: ../../sources/installation/installation.rst:98
msgid "Advanced Installation"
msgstr ""

#: ../../sources/installation/installation.rst:100
msgid ""
"In trying to avoid reinenting the wheel, we try to use as many third-"
"party packages as possible. Not all of them necessarily have to be "
"installed if only a subset of kivy's features are desired. Additionally, "
"some dependencies may be swapped with others if your platform doesn't "
"support one of them. Finally, for some platforms, there are multiple ways"
" to installing certain dependencies. If you prefer a different method "
"than the one listed above, the following guides might also be of interest"
" for you."
msgstr ""

#: ../../sources/installation/installation.rst:107
msgid "Stable Builds"
msgstr ""

#: ../../sources/installation/installation.rst:109
msgid ""
"Methods with fine-grained control over kivy's installation can be found "
"under the following links:"
msgstr ""

#: ../../sources/installation/installation-devel.rst:8
#: ../../sources/installation/installation.rst:121
msgid "Development Version"
msgstr ""

#: ../../sources/installation/installation.rst:123
msgid ""
"The development version is for developers and testers. Note that when "
"running a development version, you're running potentially broken code at "
"your own risk."
msgstr ""

#: ../../sources/installation/installation.rst:127
msgid "If that is something of interest to you, read more here:"
msgstr ""

#: ../../sources/installation/installation.rst:131
msgid ":ref:`installation_devel`"
msgstr ""

#: ../../sources/installation/installation.rst:132
msgid "`Contributing Guidelines <contributing>`_"
msgstr ""

#: ../../sources/installation/installation.rst:136
msgid "Uninstalling Kivy"
msgstr ""

#: ../../sources/installation/installation.rst:138
msgid ""
"If you are mixing multiple Kivy installations, you might be confused "
"about where each Kivy version is located. Please note that you might need"
" to follow these steps multiple times if you have multiple Kivy versions "
"installed in the Python library path. To find your current installed "
"version, you can use the command line::"
msgstr ""

#: ../../sources/installation/installation.rst:145
msgid "Then, remove that directory recursively."
msgstr ""

#: ../../sources/installation/installation.rst:147
msgid ""
"If you have installed Kivy with easy_install on linux, the directory may "
"contain a \"egg\" directory. Remove that as well::"
msgstr ""

#: ../../sources/installation/installation.rst:154
msgid "If you have installed with apt-get, do::"
msgstr ""

#: ../../sources/installation/installation-android.rst:4
msgid "Installation on Android"
msgstr ""

#: ../../sources/installation/installation-android.rst:6
msgid ""
"Kivy is a Python framework, and simply installing it on an Android device"
" the same way as on a desktop machine will do nothing. However, you can "
"compile a Kivy application to a standard Android APK that will run just "
"like a normal java app on (more or less) any device."
msgstr ""

#: ../../sources/installation/installation-android.rst:11
msgid ""
"We provide several different tools to help you run code on an Android "
"device, covered fully in the :doc:`Android packaging documentation "
"</guide/packaging-android>`. These include creating a fully standalone "
"APK that may be released on an Android store, as well as the ability to "
"run your Kivy apps without a compilation step using our pre-prepared Kivy"
" Launcher app."
msgstr ""

#: ../../sources/installation/installation-devel.rst:5
msgid "Installation for Developement"
msgstr ""

#: ../../sources/installation/installation-devel.rst:9
msgid ""
"Note that when running a development version, you're running potentially "
"broken code at your own risk. To use the development version, you will "
"first need to install the dependencies. Thereafter, you will need to set "
"up Kivy on your computer in a way that allows for easy development. For "
"that, please see our :ref:`contributing` document."
msgstr ""

#: ../../sources/installation/installation-devel.rst:17
msgid "Installing Dependencies"
msgstr ""

#: ../../sources/installation/installation-devel.rst:19
msgid ""
"To install Kivy's dependencies, follow the guide below for your platform."
" You might also need these packages for the RST and lexing components::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:25
msgid "Ubuntu"
msgstr ""

#: ../../sources/installation/installation-devel.rst:27
msgid ""
"For Ubuntu 12.04 and above (tested to 14.04), simply enter the following "
"command that will install all necessary packages::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:35
msgid "For Ubuntu 15.04 and versions older than 12.04, this one should work::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:41
msgid "For Ubuntu 16.04::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:47
msgid "For Ubuntu 17.10 and 18.04::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:53
msgid ""
"Kivy requires a recent version of Cython, so you might need to update "
"your Cython installation."
msgstr ""

#: ../../sources/installation/installation-devel.rst:60
msgid ""
"If you experience compilation problems, please check your version of "
"Cython against those in the :doc:`Cython dependencies <deps-cython>` "
"section."
msgstr ""

#: ../../sources/installation/installation-devel.rst:66
msgid ""
"Without using brew you can install the dependencies for kivy by manually "
"pasting the following commands in a terminal::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:78
msgid ""
"This should ask you for your root password, provide it and then paste the"
" following lines in your terminal:"
msgstr ""

#: ../../sources/installation/installation-devel.rst:93
msgid ""
"Now that you have all the dependencies for kivy, you need to make sure "
"you have the command line tools installed::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:98
msgid "Go to an appropriate dir like::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:103
msgid "You can now install kivy itself::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:109
msgid ""
"This should compile kivy, to make it accessible in your python env just "
"point your PYTHONPATH to this dir::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:114
msgid ""
"To check if kivy is installed, type the following command in your "
"terminal::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:119
msgid "It should give you an output similar to the following::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:130
msgid "OSX HomeBrew"
msgstr ""

#: ../../sources/installation/installation-devel.rst:131
msgid ""
"If you prefer to use homebrew: install the requirements using `homebrew "
"<http://brew.sh>`_::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:139
msgid "See :ref:`dev-install-win`."
msgstr ""

#: ../../sources/installation/installation-devel.rst:144
msgid "Installing Kivy for Development"
msgstr ""

#: ../../sources/installation/installation-devel.rst:146
msgid ""
"Now that you've installed all the required dependencies, it's time to "
"download and compile a development version of Kivy:"
msgstr ""

#: ../../sources/installation/installation-devel.rst:149
msgid "Download Kivy from GitHub::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:154
msgid "Compile::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:158
msgid ""
"If you have the ``make`` command available, you can also use the "
"following shortcut to compile (does the same as the last command)::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:165
msgid ""
"By default, versions 2.7 to 2.7.2 of Python use the gcc compiler which "
"ships with earlier versions of XCode. As of version 4.2, only the clang "
"compiler is shipped with XCode by default. This means that if you build "
"using XCode 4.2 or above, you need to ensure you have at least Python "
"2.7.3 installed, but preferably the latest version (2.7.5 at the time of "
"writing)."
msgstr ""

#: ../../sources/installation/installation-devel.rst:171
msgid ""
"If you want to modify the Kivy code itself, set up the `PYTHONPATH "
"environment variable <http://docs.python.org/tutorial/modules.html#the-"
"module-search-path>`_ to point at your clone. This way you don't have to "
"install (``setup.py install``) after every tiny modification. Python will"
" instead import Kivy from your clone."
msgstr ""

#: ../../sources/installation/installation-devel.rst:178
msgid ""
"Alternatively, if you don't want to make any changes to Kivy itself, you "
"can also run (as admin, e.g. with sudo)::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:183
msgid ""
"If you want to contribute code (patches, new features) to the Kivy "
"codebase, please read :ref:`contributing`."
msgstr ""

#: ../../sources/installation/installation-devel.rst:187
msgid "Running the test suite"
msgstr ""

#: ../../sources/installation/installation-devel.rst:189
msgid ""
"To help detect issues and behaviour changes in Kivy, a set of unittests "
"are provided. A good thing to do is to run them just after your Kivy "
"installation, and every time you intend to push a change. If you think "
"something was broken in Kivy, perhaps a test will show this. (If not, it "
"might be a good time to write one.)"
msgstr ""

#: ../../sources/installation/installation-devel.rst:195
msgid ""
"Kivy tests are based on nosetest, which you can install from your package"
" manager or using pip::"
msgstr ""

#: ../../sources/installation/installation-devel.rst:200
msgid "To run the test suite, do::"
msgstr ""

#: ../../sources/installation/installation-linux.rst:4
msgid "Installation on Linux"
msgstr ""

#: ../../sources/installation/installation-linux.rst:7
msgid "Using software packages"
msgstr ""

#: ../../sources/installation/installation-linux.rst:9
msgid "For installing distribution relative packages .deb/.rpm/..."
msgstr ""

#: ../../sources/installation/installation-linux.rst:13
msgid "Ubuntu / Kubuntu / Xubuntu / Lubuntu (Saucy and above)"
msgstr ""

#: ../../sources/installation/installation-linux.rst:15
msgid "Add one of the PPAs as you prefer"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "stable builds"
msgstr ""

#: ../../sources/installation/installation-linux.rst:18
msgid "$ sudo add-apt-repository ppa:kivy-team/kivy"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "nightly builds"
msgstr ""

#: ../../sources/installation/installation-linux.rst:20
msgid "$ sudo add-apt-repository ppa:kivy-team/kivy-daily"
msgstr ""

#: ../../sources/installation/installation-linux.rst:23
msgid "Update your package list using your package manager"
msgstr ""

#: ../../sources/installation/installation-linux.rst:23
msgid "$ sudo apt-get update"
msgstr ""

#: ../../sources/installation/installation-linux.rst:25
msgid "Install Kivy"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "Python2 - **python-kivy**"
msgstr ""

#: ../../sources/installation/installation-linux.rst:28
msgid "$ sudo apt-get install python-kivy"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "Python3 - **python3-kivy**"
msgstr ""

#: ../../sources/installation/installation-linux.rst:30
msgid "$ sudo apt-get install python3-kivy"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "optionally the examples - **kivy-examples**"
msgstr ""

#: ../../sources/installation/installation-linux.rst:32
msgid "$ sudo apt-get install kivy-examples"
msgstr ""

#: ../../sources/installation/installation-linux.rst:36
msgid "Debian  (Jessie or newer)"
msgstr ""

#: ../../sources/installation/installation-linux.rst:38
msgid "Add one of the PPAs to your sources.list in apt manually or via Synaptic"
msgstr ""

#: ../../sources/installation/installation-linux.rst:41
msgid "deb http://ppa.launchpad.net/kivy-team/kivy/ubuntu xenial main"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "daily builds"
msgstr ""

#: ../../sources/installation/installation-linux.rst:43
msgid "deb http://ppa.launchpad.net/kivy-team/kivy-daily/ubuntu xenial main"
msgstr ""

#: ../../sources/installation/installation-linux.rst:45
msgid ""
"**Notice**: Wheezy is not supported - You'll need to upgrade to Jessie at"
" least!"
msgstr ""

#: ../../sources/installation/installation-linux.rst:47
msgid "Add the GPG key to your apt keyring by executing"
msgstr ""

#: ../../sources/installation/installation-linux.rst:49
msgid "as user:"
msgstr ""

#: ../../sources/installation/installation-linux.rst:51
msgid "``sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A863D2D6``"
msgstr ""

#: ../../sources/installation/installation-linux.rst:53
msgid "as root:"
msgstr ""

#: ../../sources/installation/installation-linux.rst:55
msgid "``apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A863D2D6``"
msgstr ""

#: ../../sources/installation/installation-linux.rst:57
msgid ""
"Refresh your package list and install **python-kivy** and/or "
"**python3-kivy** and optionally the examples found in **kivy-examples**"
msgstr ""

#: ../../sources/installation/installation-linux.rst:62
msgid "Linux Mint"
msgstr ""

#: ../../sources/installation/installation-linux.rst:64
msgid ""
"Find out on which Ubuntu release your installation is based on, using "
"this `overview <https://linuxmint.com/download_all.php>`_."
msgstr ""

#: ../../sources/installation/installation-linux.rst:66
#: ../../sources/installation/installation-linux.rst:86
msgid ""
"Continue as described for Ubuntu above, depending on which version your "
"installation is based on."
msgstr ""

#: ../../sources/installation/installation-linux.rst:71
msgid "Bodhi Linux"
msgstr ""

#: ../../sources/installation/installation-linux.rst:73
msgid ""
"Find out which version of the distribution you are running and use the "
"table below to find out on which Ubuntu LTS it is based."
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "Bodhi 1"
msgstr ""

#: ../../sources/installation/installation-linux.rst:77
msgid "Ubuntu 10.04 LTS aka Lucid (No packages, just manual install)"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "Bodhi 2"
msgstr ""

#: ../../sources/installation/installation-linux.rst:79
msgid "Ubuntu 12.04 LTS aka Precise"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "Bodhi 3"
msgstr ""

#: ../../sources/installation/installation-linux.rst:81
msgid "Ubuntu 14.04 LTS aka Trusty"
msgstr ""

#: ../../sources/installation/installation-linux.rst
msgid "Bodhi 4"
msgstr ""

#: ../../sources/installation/installation-linux.rst:83
msgid "Ubuntu 16.04 LTS aka Xenial"
msgstr ""

#: ../../sources/installation/installation-linux.rst:90
msgid "OpenSuSE"
msgstr ""

#: ../../sources/installation/installation-linux.rst:92
msgid ""
"To install kivy go to http://software.opensuse.org/package/python-Kivy "
"and use the \"1 Click Install\" for your openSuse version. You might need"
" to make the latest kivy version appear in the list by clicking on \"Show"
" unstable packages\". We prefer to use packages by \" "
"devel:languages:python\"."
msgstr ""

#: ../../sources/installation/installation-linux.rst:94
msgid ""
"If you would like access to the examples, please select **python-Kivy-"
"examples** in the upcoming installation wizard."
msgstr ""

#: ../../sources/installation/installation-linux.rst:98
msgid "Gentoo"
msgstr ""

#: ../../sources/installation/installation-linux.rst:100
msgid "There is a kivy ebuild (kivy stable version)"
msgstr ""

#: ../../sources/installation/installation-linux.rst:102
msgid "emerge Kivy"
msgstr ""

#: ../../sources/installation/installation-linux.rst:104
msgid "available USE-flags are:"
msgstr ""

#: ../../sources/installation/installation-linux.rst:106
msgid ""
"`cairo: Standard flag, let kivy use cairo graphical libraries.` `camera: "
"Install libraries needed to support camera.` `doc: Standard flag, will "
"make you build the documentation locally.` `examples: Standard flag, will"
" give you kivy examples programs.` `garden: Install garden tool to manage"
" user maintained widgets.` `gstreamer: Standard flag, kivy will be able "
"to use audio/video streaming libraries.` `spell: Standard flag, provide "
"enchant to use spelling in kivy apps.`"
msgstr ""

#: ../../sources/installation/installation-linux.rst:115
msgid "Other"
msgstr ""

#: ../../sources/installation/installation-linux.rst:117
msgid "For other distros, we recommend :ref:`installation_in_venv`."
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:4
msgid "Installation in a Virtual Environment"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:8
msgid "Common dependencies"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:15
msgid ""
"Different versions of Kivy have only been tested up to a certain Cython "
"version. It may or may not work with a later version."
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:19
msgid "Kivy"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:21
msgid "1.9"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:21
msgid "0.21.2"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:22
msgid "1.9.1"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:22
msgid "0.23.1"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:23
msgid "1.10.0"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:23
msgid "0.25.2"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:24
msgid "1.10.1"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:24
msgid "0.28.2"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:29
msgid "Dependencies with SDL2"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:33
#: ../../sources/installation/installation-linux-venvs.rst:144
msgid "Ubuntu example"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:35
msgid ""
"In the following command use \"python\" and \"python-dev\" for Python 2, "
"or \"python3\" and \"python3-dev\" for Python 3."
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:64
msgid ""
"**Note:**  Depending on your Linux version, you may receive error "
"messages related to the \"ffmpeg\" package. In this scenario, use "
"\"libav-tools \\\" in place of \"ffmpeg \\\" (above), or use a PPA (as "
"shown below):"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:75
msgid "Fedora example"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:77
msgid ""
"You will likely need to do this preliminary step which installs the "
"rpmfusion-free repository unless you have some other 3rd-party repo "
"installed which has the required packages. See rpmfusion.org for complete"
" installation instructions, but only the rpmfusion-free repo is needed "
"for acquiring kivy dependencies (though rpmfusion-nonfree is recommended "
"by rpm fusion installation instructions) as shown in this step."
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:83
msgid ""
"After you ensure that a 3rd-party repository containing any packages that"
" dnf is otherwise unable to find, continue installing dependencies:"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:109
#: ../../sources/installation/installation-linux-venvs.rst:211
#: ../../sources/installation/installation-windows.rst:37
msgid "Installation"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:110
msgid ""
"(after installing dependencies above specific to your distribution, do "
"the following remaining steps on any distro where no package is "
"available)"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:140
msgid "Dependencies with legacy PyGame"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:171
msgid "Fedora"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:195
msgid "OpenSuse"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:249
msgid "Install additional Virtualenv packages"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:267
#: ../../sources/installation/installation-osx.rst:121
msgid "Start from the Command Line"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:269
msgid ""
"We ship some examples that are ready-to-run. However, these examples are "
"packaged inside the package. This means you must first know where "
"easy_install has installed your current kivy package, and then go to the "
"examples directory::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:275
msgid "And you should have a path similar to::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:279
msgid "Then you can go to the example directory, and run it::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:291
msgid ""
"If you are familiar with Unix and symbolic links, you can create a link "
"directly in your home directory for easier access. For example:"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:294
msgid "Get the example path from the command line above"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:295
msgid "Paste into your console::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:299
msgid "Then, you can access to kivy-examples directly in your home directory::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:303
msgid ""
"If you wish to start your Kivy programs as scripts (by typing "
"`./main.py`) or by double-clicking them, you will want to define the "
"correct version of Python by linking to it. Something like::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:308
msgid ""
"Or, if you are running Kivy inside a virtualenv, link to the Python "
"interpreter for it, like::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:312
msgid "Then, inside each main.py, add a new first line::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:316
msgid ""
"NOTE: Beware of Python files stored with Windows-style line endings (CR-"
"LF). Linux will not ignore the <CR> and will try to use it as part of the"
" file name. This makes confusing error messages. Convert to Unix line "
"endings."
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:320
msgid "Device permissions"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:322
msgid ""
"When you app starts, Kivy uses `Mtdev "
"<http://wiki.ubuntu.com/Multitouch>`_ to scan for available multi-touch "
"devices to use for input. Access to these devices is typically restricted"
" to users or group with the appropriate permissions."
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:327
msgid ""
"If you do not have access to these devices, Kivy will log an error or "
"warning specifying these devices, normally something like::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:332
msgid ""
"In order to use these devices, you can add your user to a group that has "
"the required permissions. For example, in Ubuntu, you can add the user to"
" the 'input' group::"
msgstr ""

#: ../../sources/installation/installation-linux-venvs.rst:338
msgid ""
"Note that you need to log out then back in again for these permissions to"
" be applied."
msgstr ""

#: ../../sources/installation/installation-osx.rst:4
msgid "Installation on OS X"
msgstr ""

#: ../../sources/installation/installation-osx.rst:8
msgid "This guide describes multiple ways for setting up Kivy."
msgstr ""

#: ../../sources/installation/installation-osx.rst:11
msgid "Using Wheels"
msgstr ""

#: ../../sources/installation/installation-osx.rst:13
msgid ""
"Wheels are precompiled binaries for the specific platform you are on. All"
" you need to do to install kivy using wheels on osx is ::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:18
msgid ""
"If you would like to use media playback with kivy, you should install "
"`ffpyplayer` like so ::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:22
msgid ""
"Make sure to set `KIVY_VIDEO=ffpyplayer` env variable before running the "
"app."
msgstr ""

#: ../../sources/installation/installation-osx.rst:24
msgid "Gstreamer Wheels would be uploaded to pypi shortly."
msgstr ""

#: ../../sources/installation/installation-osx.rst:27
msgid "Using Conda"
msgstr ""

#: ../../sources/installation/installation-osx.rst:29
msgid "If you use Anaconda; you first need to activate conda-forger like so ::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:33
msgid "Then you can install kivy using ::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:38
msgid "Using The Kivy.app"
msgstr ""

#: ../../sources/installation/installation-osx.rst:42
msgid ""
"This method has only been tested on OS X 10.7 and above (64-bit). For "
"versions prior to 10.7 or 10.7 32-bit, you have to install the components"
" yourself."
msgstr ""

#: ../../sources/installation/installation-osx.rst:46
msgid ""
"For OS X 10.7 and later, we provide packages with all dependencies "
"bundled in a virtual environment, including a Python interpreter for "
"python3 version. These bundles are primarily used for rapid prototyping, "
"and currently serve as containers for packaging Kivy apps with Buildozer."
msgstr ""

#: ../../sources/installation/installation-osx.rst:51
msgid "To install Kivy, you must:"
msgstr ""

#: ../../sources/installation/installation-osx.rst:53
msgid ""
"Navigate to the latest Kivy release at https://kivy.org/downloads/ and "
"download `Kivy-*-osx-python*.dmg`."
msgstr ""

#: ../../sources/installation/installation-osx.rst:55
msgid "Open the dmg"
msgstr ""

#: ../../sources/installation/installation-osx.rst:56
msgid "Copy the Kivy.app to /Applications."
msgstr ""

#: ../../sources/installation/installation-osx.rst:57
msgid ""
"Create a symlink by running the `makesymlinks` in the window that opens "
"when you open the dmg"
msgstr ""

#: ../../sources/installation/installation-osx.rst:58
msgid ""
"Examples and all the normal kivy tools are present in the "
"Kivy.app/Contents/Resources/kivy directory."
msgstr ""

#: ../../sources/installation/installation-osx.rst:60
msgid ""
"You should now have a `kivy` script that you can use to launch your kivy "
"app from the terminal."
msgstr ""

#: ../../sources/installation/installation-osx.rst:62
msgid "You can just drag and drop your main.py to run your app too."
msgstr ""

#: ../../sources/installation/installation-osx.rst:66
msgid "Installing modules"
msgstr ""

#: ../../sources/installation/installation-osx.rst:68
msgid ""
"The Kivy SDK on OS X uses its own virtual env that is activated when you "
"run your app using the `kivy` command. To install any module you need to "
"install the module like so::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:74
msgid "Where are the modules/files installed?"
msgstr ""

#: ../../sources/installation/installation-osx.rst:75
msgid "Inside the portable venv within the app at::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:79
msgid ""
"If you install a module that installs a binary for example like kivy-"
"garden. That binary will be only available from the venv above, as in "
"after you do::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:84
msgid "The garden lib will be only available when you activate this env::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:91
msgid "To install binary files"
msgstr ""

#: ../../sources/installation/installation-osx.rst:93
msgid ""
"Just copy the binary to the "
"/Applications/Kivy.app/Contents/Resources/venv/bin/ directory."
msgstr ""

#: ../../sources/installation/installation-osx.rst:96
msgid "To include other frameworks"
msgstr ""

#: ../../sources/installation/installation-osx.rst:97
msgid ""
"Kivy.app comes with SDL2 and Gstreamer frameworks provided. To include "
"frameworks other than the ones provided do the following::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:106
msgid ""
"Do not forget to replace <Framework_name> with your framework. This tool "
"`osxrelocator` essentially changes the path for the libs in the framework"
" such that they are relative to the executable within the .app, making "
"the Framework portable with the .app."
msgstr ""

#: ../../sources/installation/installation-osx.rst:112
msgid "Start any Kivy Application"
msgstr ""

#: ../../sources/installation/installation-osx.rst:114
msgid ""
"You can run any Kivy application by simply dragging the application's "
"main file onto the Kivy.app icon. Just try this with any python file in "
"the examples folder."
msgstr ""

#: ../../sources/installation/installation-osx.rst:123
msgid ""
"If you want to use Kivy from the command line, double-click the ``Make "
"Symlinks`` script after you have dragged the Kivy.app into the "
"Applications folder. To test if it worked:"
msgstr ""

#: ../../sources/installation/installation-osx.rst:126
msgid "Open Terminal.app and enter::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:130
msgid "You should get a Python prompt."
msgstr ""

#: ../../sources/installation/installation-osx.rst:132
msgid "In there, type::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:136
msgid "If it just goes to the next line without errors, it worked."
msgstr ""

#: ../../sources/installation/installation-osx.rst:138
msgid ""
"Running any Kivy application from the command line is now simply a matter"
" of executing a command like the following::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:145
msgid "Using Homebrew with pip"
msgstr ""

#: ../../sources/installation/installation-osx.rst:147
msgid "You can install Kivy with Homebrew and pip using the following steps:"
msgstr ""

#: ../../sources/installation/installation-osx.rst:149
msgid "Install the requirements using `homebrew <http://brew.sh>`_::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:153
#: ../../sources/installation/installation-osx.rst:205
msgid "Install Cython and Kivy using pip:"
msgstr ""

#: ../../sources/installation/installation-osx.rst:160
#: ../../sources/installation/installation-osx.rst:212
msgid "To install the development version, use this in the second step::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:165
msgid "Using MacPorts with pip"
msgstr ""

#: ../../sources/installation/installation-osx.rst:169
msgid ""
"You will have to manually install gstreamer support if you wish to "
"support video playback in your Kivy App. The latest port documents show "
"the following `py-gst-python port "
"<https://trac.macports.org/ticket/44813>`_."
msgstr ""

#: ../../sources/installation/installation-osx.rst:173
msgid "You can install Kivy with macports only:"
msgstr ""

#: ../../sources/installation/installation-osx.rst:175
#: ../../sources/installation/installation-osx.rst:189
msgid "Install `Macports <https://www.macports.org>`_"
msgstr ""

#: ../../sources/installation/installation-osx.rst:177
msgid "Choose python versions for Kivy, available version 2.7, 3.5, 3.6"
msgstr ""

#: ../../sources/installation/installation-osx.rst:179
msgid ""
"$ port install py35-kivy  # for python 3.5 $ port install py36-kivy  # "
"for python 3.6"
msgstr ""

#: ../../sources/installation/installation-osx.rst:182
msgid "Check if kivy is available"
msgstr ""

#: ../../sources/installation/installation-osx.rst:184
msgid "$ python3.5 $ >>> import kivy"
msgstr ""

#: ../../sources/installation/installation-osx.rst:187
msgid "You can install Kivy with Macports and pip using the following steps:"
msgstr ""

#: ../../sources/installation/installation-osx.rst:191
msgid "Install and set Python 3.4 as the default::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:196
msgid "Install and set pip as the default::"
msgstr ""

#: ../../sources/installation/installation-osx.rst:201
msgid "Install the requirements using `Macports <https://www.macports.org>`_::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:4
msgid "Installation on Raspberry Pi"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:6
msgid ""
"You can install Kivy manually, or you can download and boot KivyPie on "
"the Raspberry Pi. Both options are described below."
msgstr ""

#: ../../sources/installation/installation-rpi.rst:11
msgid "Manual installation (On Raspbian Jessie/Stretch)"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:13
#: ../../sources/installation/installation-rpi.rst:61
#: ../../sources/installation/installation-rpi.rst:97
msgid "Install the dependencies::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:23
#: ../../sources/installation/installation-rpi.rst:109
msgid "Install a new enough version of Cython:"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:29
#: ../../sources/installation/installation-rpi.rst:81
#: ../../sources/installation/installation-rpi.rst:115
msgid "Install Kivy globally on your system::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:33
#: ../../sources/installation/installation-rpi.rst:85
#: ../../sources/installation/installation-rpi.rst:119
msgid "Or build and use kivy inplace (best for development)::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:44
#: ../../sources/installation/installation-rpi.rst:132
msgid ""
"On versions of kivy prior to 1.10.1, Mesa library naming changes can "
"result in \"Unable to find any valuable Window provider\" errors. If you "
"experience this issue, please upgrade or consult `ticket #5360. "
"<https://github.com/kivy/kivy/issues/5360>`_"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:50
msgid "Manual installation (On Raspbian Wheezy)"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:52
msgid "Add APT sources for Gstreamer 1.0 in `/etc/apt/sources.list`::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:56
msgid "Add APT key for vontaene.de::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:70
#: ../../sources/installation/installation-rpi.rst:104
msgid "Install pip from source::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:75
msgid "Install Cython from sources (debian packages are outdated):"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:95
msgid "Manual installation (On Arch Linux ARM)"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:125
msgid "Images to use::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:138
msgid "KivyPie distribution"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:140
msgid ""
"KivyPie is a compact and lightweight Raspbian based distribution that "
"comes with Kivy installed and ready to run. It is the result of applying "
"the manual installation steps described above, with a few more extra "
"tools. You can download the image from http://kivypie.mitako.eu/kivy-"
"download.html and boot it on a Raspberry PI."
msgstr ""

#: ../../sources/installation/installation-rpi.rst:148
msgid "Running the demo"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:150
msgid "Go to your `kivy/examples` folder, you'll have tons of demo you could try."
msgstr ""

#: ../../sources/installation/installation-rpi.rst:152
msgid "You could start the showcase::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:157
msgid "3d monkey demo is also fun too see::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:163
msgid "Change the default screen to use"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:165
msgid ""
"You can set an environment variable named `KIVY_BCM_DISPMANX_ID` in order"
" to change the display used to run Kivy. For example, to force the "
"display to be HDMI, use::"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:171
msgid "Check :ref:`environment` to see all the possible values."
msgstr ""

#: ../../sources/installation/installation-rpi.rst:174
msgid "Using Official RPi touch display"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:176
msgid ""
"If you are using the official Raspberry Pi touch display, you need to "
"configure Kivy to use it as an input source. To do this, edit the file "
"``~/.kivy/config.ini`` and go to the ``[input]`` section. Add this:"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:186
msgid "For more information about configuring Kivy, see :ref:`configure kivy`"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:189
msgid "Where to go ?"
msgstr ""

#: ../../sources/installation/installation-rpi.rst:191
msgid ""
"We made few games using GPIO / physical input we got during Pycon 2013: a"
" button and a tilt. Checkout the https://github.com/kivy/piki. You will "
"need to adapt the GPIO pin in the code."
msgstr ""

#: ../../sources/installation/installation-rpi.rst:195
msgid ""
"A video to see what we were doing with it: "
"http://www.youtube.com/watch?v=NVM09gaX6pQ"
msgstr ""

#: ../../sources/installation/installation-windows.rst:4
msgid "Installation on Windows"
msgstr ""

#: ../../sources/installation/installation-windows.rst:7
msgid "Prerequisites"
msgstr ""

#: ../../sources/installation/installation-windows.rst:9
msgid ""
"Kivy is written in `Python "
"<https://en.wikipedia.org/wiki/Python_%28programming_language%29>`_ and "
"as such, to use Kivy, you need an existing installation of `Python "
"<https://www.python.org/downloads/windows/>`_. Multiple versions of "
"Python can be installed side by side, but Kivy needs to be installed in "
"each Python version that you want to use Kivy in."
msgstr ""

#: ../../sources/installation/installation-windows.rst:16
msgid ""
"Beginning with 1.9.1 we provide binary `wheels "
"<https://wheel.readthedocs.org/en/latest/>`_ for Kivy and all its "
"dependencies to be used with an existing Python installation. See :ref"
":`install-win-dist`."
msgstr ""

#: ../../sources/installation/installation-windows.rst:21
msgid ""
"We also provide nightly wheels generated using Kivy `master "
"<https://github.com/kivy/kivy>`_. See :ref:`install-nightly-win-dist`. "
"See also :ref:`upgrade-win-dist`. If installing kivy to an **alternate "
"location** and not to site-packages, please see :ref:`alternate-win`."
msgstr ""

#: ../../sources/installation/installation-windows.rst:28
msgid ""
"For Python < 3.5 we use the MinGW compiler. However, for Python 3.5+ on "
"Windows we currently only support the MSVC compiler because of the "
"following Python `issue 4709 <http://bugs.python.org/issue4709>`_ about "
"MinGW. Generally this should make no difference when using precompiled "
"wheels."
msgstr ""

#: ../../sources/installation/installation-windows.rst:39
msgid ""
"Now that python is installed, open the :ref:`windows-run-app` and make "
"sure python is available by typing ``python --version``. Then, do the "
"following to install."
msgstr ""

#: ../../sources/installation/installation-windows.rst:43
msgid "Ensure you have the latest pip and wheel::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:47
msgid ""
"Install the dependencies (skip gstreamer (~120MB) if not needed, see :ref"
":`kivy-dependencies`)::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:55
msgid ""
"If you encounter a `MemoryError` while installing, add after `pip "
"install` an option `--no-cache-dir`."
msgstr ""

#: ../../sources/installation/installation-windows.rst:58
msgid ""
"For Python 3.5+, you can also use the angle backend instead of glew. This"
" can be installed with::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:63
msgid "Install kivy::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:67
msgid "(Optionally) Install the kivy examples::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:71
msgid ""
"The examples are installed in the share directory under the root "
"directory where python is installed."
msgstr ""

#: ../../sources/installation/installation-windows.rst:73
msgid ""
"That's it. You should now be able to ``import kivy`` in python or run a "
"basic example if you installed the kivy examples::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:80
msgid ""
"If you encounter any **permission denied** errors, try opening the "
"`Command prompt as administrator <https://technet.microsoft.com/en-"
"us/library/cc947813%28v=ws.10%29.aspx>`_ and trying again."
msgstr ""

#: ../../sources/installation/installation-windows.rst:86
msgid "What are wheels, pip and wheel"
msgstr ""

#: ../../sources/installation/installation-windows.rst:88
msgid ""
"In Python, packages such as Kivy can be installed with the python package"
" manager, `pip <https://pip.pypa.io/en/stable/>`_. Some packages such as "
"Kivy require additional steps, such as compilation, when installing using"
" the Kivy source code with pip. Wheels (with a ``.whl`` extension) are "
"pre-built distributions of a package that has already been compiled and "
"do not require additional steps to install."
msgstr ""

#: ../../sources/installation/installation-windows.rst:95
msgid ""
"When hosted on `pypi <https://pypi.python.org/pypi>`_ one installs a "
"wheel using ``pip``, e.g. ``python -m pip install kivy``. When "
"downloading and installing a wheel directly, ``python -m pip install "
"wheel_file_name`` is used, such as::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:105
msgid "Nightly wheel installation"
msgstr ""

#: ../../sources/installation/installation-windows.rst:128
#: ../../sources/installation/installation-windows.rst:215
msgid ""
"Using the latest development version can be risky and you might encounter"
" issues during development. If you encounter any bugs, please report "
"them."
msgstr ""

#: ../../sources/installation/installation-windows.rst:131
msgid ""
"Snapshot wheels of current Kivy master are created on every commit to the"
" `master` branch of kivy repository. They can be found `here "
"<https://kivy.org/downloads/appveyor/kivy>`_. To use them, instead of "
"doing ``python -m pip install kivy`` we'll install one of these wheels as"
" follows."
msgstr ""

#: ../../sources/installation/installation-windows.rst:137
msgid "|cp27_win32|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:138
msgid "|cp35_win32|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:139
msgid "|cp36_win32|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:140
msgid "|cp37_win32|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:142
msgid "|cp27_amd64|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:143
msgid "|cp35_amd64|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:144
msgid "|cp36_amd64|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:145
msgid "|cp37_amd64|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:147
msgid "Perform steps 1 and 2 of the above Installation section."
msgstr ""

#: ../../sources/installation/installation-windows.rst:148
msgid "Download the appropriate wheel for your system."
msgstr ""

#: ../../sources/installation/installation-windows.rst:149
msgid ""
"Install it with ``python -m pip install wheel-name`` where ``wheel-name``"
" is the name of the renamed file and add deps to the `PATH`."
msgstr ""

#: ../../sources/installation/installation-windows.rst:152
msgid ""
"Kivy examples are separated from the core because of their size. The "
"examples can be installed separately on both Python 2 and 3 with this "
"single wheel:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:155
msgid "|examples_whl|_"
msgstr ""

#: ../../sources/installation/installation-windows.rst:160
msgid "Kivy's dependencies"
msgstr ""

#: ../../sources/installation/installation-windows.rst:162
msgid ""
"We offer wheels for Kivy and its dependencies separately so only desired "
"dependencies need be installed. The dependencies are offered as optional "
"sub-packages of kivy.deps, e.g. ``kivy.deps.sdl2``."
msgstr ""

#: ../../sources/installation/installation-windows.rst:166
msgid "Currently on Windows, we provide the following dependency wheels:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:168
msgid "`gstreamer <https://gstreamer.freedesktop.org>`_ for audio and video"
msgstr ""

#: ../../sources/installation/installation-windows.rst:169
msgid ""
"`glew <http://glew.sourceforge.net/>`_ and/or `angle (3.5 only) "
"<https://github.com/Microsoft/angle>`_ for OpenGL"
msgstr ""

#: ../../sources/installation/installation-windows.rst:171
msgid "`sdl2 <https://libsdl.org>`_ for control and/or OpenGL."
msgstr ""

#: ../../sources/installation/installation-windows.rst:173
msgid ""
"One can select which of these to use for OpenGL use using the "
"`KIVY_GL_BACKEND` envrionment variable by setting it to `glew` (the "
"default), `angle`, or `sdl2`. `angle` is currently in an experimental "
"phase as a substitute for `glew` on Python 3.5 only."
msgstr ""

#: ../../sources/installation/installation-windows.rst:179
msgid ""
"`gstreamer` is an optional dependency which only needs to be installed if"
" video display or audio is desired. `ffpyplayer` is an alternate "
"dependency for audio or video."
msgstr ""

#: ../../sources/installation/installation-windows.rst:186
msgid "Command line"
msgstr ""

#: ../../sources/installation/installation-windows.rst:188
msgid ""
"Know your command line. To execute any of the ``pip`` or ``wheel`` "
"commands, one needs a command line tool with python on the path. The "
"default command line on Windows is `Command Prompt "
"<http://www.computerhope.com/issues/chusedos.htm>`_, and the quickest way"
" to open it is to press `Win+R` on your keyboard, type ``cmd`` in the "
"window that opens, and then press enter."
msgstr ""

#: ../../sources/installation/installation-windows.rst:195
msgid ""
"Alternate linux style command shells that we recommend is `Git for "
"Windows <https://git-for-windows.github.io/>`_ which offers a bash "
"command line as `well <http://rogerdudler.github.io/git-guide/>`_ as `git"
" <https://try.github.io>`_. Note, CMD can still be used even if bash is "
"installed."
msgstr ""

#: ../../sources/installation/installation-windows.rst:201
msgid ""
"Walking the path! To add your python to the path, simply open your "
"command line and then use the ``cd`` command to change the current "
"directory to where python is installed, e.g. ``cd C:\\Python27``. "
"Alternatively if you only have one python version installed, permanently "
"add the python directory to the path for `cmd "
"<http://www.computerhope.com/issues/ch000549.htm>`_ or `bash "
"<http://stackoverflow.com/q/14637979>`_."
msgstr ""

#: ../../sources/installation/installation-windows.rst:211
msgid "Use development Kivy"
msgstr ""

#: ../../sources/installation/installation-windows.rst:218
msgid ""
"To compile and install kivy using the kivy `source code "
"<https://github.com/kivy/kivy/archive/master.zip>`_  or to use kivy with "
"git rather than a wheel there are some additional steps:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:222
msgid ""
"Both the ``python`` and the ``Python\\Scripts`` directories **must** be "
"on the path. They must be on the path every time you recompile kivy."
msgstr ""

#: ../../sources/installation/installation-windows.rst:225
msgid "Ensure you have the latest pip and wheel with::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:229
msgid "Get the compiler. For Python < 3.5 we use mingwpy as follows."
msgstr ""

#: ../../sources/installation/installation-windows.rst:232
msgid ""
"Create the ``python\\Lib\\distutils\\distutils.cfg`` file and add the two"
" lines::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:238
msgid "Install MinGW with::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:242
msgid ""
"For Python 3.5 we use the MSVC compiler. For 3.5, `Visual Studio 2015 "
"<https://www.visualstudio.com/downloads/>`_ is required, which is "
"availible for free. Just download and install it and you'll be good to "
"go."
msgstr ""

#: ../../sources/installation/installation-windows.rst:247
msgid ""
"Visual Studio is very big so you can also use the smaller, `Visual C "
"Build Tools instead <https://github.com/kivy/kivy/wiki/Using-Visual-C"
"---Build-Tools-instead-of-Visual-Studio-on-Windows>`_."
msgstr ""

#: ../../sources/installation/installation-windows.rst:251
msgid "Set the environment variables. On windows do::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:256
msgid "In bash do::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:261
msgid "These variables must be set everytime you recompile kivy."
msgstr ""

#: ../../sources/installation/installation-windows.rst:263
msgid ""
"Install the other dependencies as well as their dev versions (you can "
"skip gstreamer and gstreamer_dev if you aren't going to use video/audio):"
msgstr ""

#: ../../sources/installation/installation-windows.rst:272
msgid ""
"If you downloaded or cloned kivy to an alternate location and don't want "
"to install it to site-packages read the next section."
msgstr ""

#: ../../sources/installation/installation-windows.rst:275
msgid ""
"Finally compile and install kivy with ``pip install filename``, where "
"``filename`` can be a url such as "
"``https://github.com/kivy/kivy/archive/master.zip`` for kivy master, or "
"the full path to a local copy of a kivy."
msgstr ""

#: ../../sources/installation/installation-windows.rst:281
msgid "Compile Kivy"
msgstr ""

#: ../../sources/installation/installation-windows.rst:283
msgid "Start installation of Kivy cloned from GitHub::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:287
msgid ""
"If the compilation succeeds without any error, Kivy should be good to go."
" You can test it with running a basic example::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:295
msgid "Installing Kivy to an alternate location"
msgstr ""

#: ../../sources/installation/installation-windows.rst:297
msgid ""
"In development Kivy is often installed to an alternate location and then "
"installed with::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:302
msgid ""
"That allows Kivy to remain in its original location while being available"
" to python, which is useful for tracking changes you make in Kivy for "
"example directly with Git."
msgstr ""

#: ../../sources/installation/installation-windows.rst:306
msgid ""
"To achieve using Kivy in an alternate location extra tweaking is "
"required. Due to this `issue <https://github.com/pypa/pip/issues/2677>`_ "
"``wheel`` and ``pip`` install the dependency wheels to ``python\\Lib"
"\\site-packages\\kivy``. So they need to be moved to your actual kivy "
"installation from site-packages."
msgstr ""

#: ../../sources/installation/installation-windows.rst:311
msgid ""
"After installing the kivy dependencies and downloading or cloning kivy to"
" your favorite location, do the following:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:314
msgid ""
"Move the contents of ``python\\Lib\\site-packages\\kivy\\deps`` to "
"``your-path\\kivy\\deps`` where ``your-path`` is the path where your kivy"
" is located. That means if you cloned from GitHub, the ``deps`` have to "
"end up in the **inner** ``kivy`` folder."
msgstr ""

#: ../../sources/installation/installation-windows.rst:318
msgid "Remove the ``python\\Lib\\site-packages\\kivy`` directory altogether."
msgstr ""

#: ../../sources/installation/installation-windows.rst:319
msgid ""
"From ``python\\Lib\\site-packages`` move **all** ``kivy.deps.*.dist-"
"info`` directories to ``your-path`` right next to ``kivy``."
msgstr ""

#: ../../sources/installation/installation-windows.rst:322
msgid ""
"Now you can safely compile kivy in its current location with one of these"
" commands::"
msgstr ""

#: ../../sources/installation/installation-windows.rst:330
msgid ""
"**If kivy fails to be imported,** you probably didn't delete all the "
"``*.dist-info`` folders and and the kivy or ``kivy.deps*`` folders from "
"site-packages."
msgstr ""

#: ../../sources/installation/installation-windows.rst:335
msgid "Making Python available anywhere"
msgstr ""

#: ../../sources/installation/installation-windows.rst:337
msgid "There are two methods for launching python on your ``*.py`` files."
msgstr ""

#: ../../sources/installation/installation-windows.rst:340
msgid "Double-click method"
msgstr ""

#: ../../sources/installation/installation-windows.rst:342
msgid ""
"If you only have one Python installed, you can associate all ``*.py`` "
"files with your python, if it isn't already, and then run it by double "
"clicking. Or you can only do it once if you want to be able to choose "
"each time:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:346
msgid ""
"Right click on the Python file (.py file extension) of the application "
"you want to launch"
msgstr ""

#: ../../sources/installation/installation-windows.rst:349
msgid "From the context menu that appears, select *Open With*"
msgstr ""

#: ../../sources/installation/installation-windows.rst:350
msgid ""
"Browse your hard disk drive and find the file ``python.exe`` that you "
"want to use. Select it."
msgstr ""

#: ../../sources/installation/installation-windows.rst:353
msgid ""
"Select \"Always open the file with...\" if you don't want to repeat this "
"procedure every time you double click a .py file."
msgstr ""

#: ../../sources/installation/installation-windows.rst:356
msgid "You are done. Open the file."
msgstr ""

#: ../../sources/installation/installation-windows.rst:359
msgid "Send-to method"
msgstr ""

#: ../../sources/installation/installation-windows.rst:361
msgid "You can launch a .py file with our Python using the Send-to menu:"
msgstr ""

#: ../../sources/installation/installation-windows.rst:363
msgid ""
"Browse to the ``python.exe`` file you want to use. Right click on it and "
"copy it."
msgstr ""

#: ../../sources/installation/installation-windows.rst:366
msgid ""
"Open Windows explorer (File explorer in Windows 8), and to go the address"
" 'shell:sendto'. You should get the special Windows directory `SendTo`"
msgstr ""

#: ../../sources/installation/installation-windows.rst:369
msgid "Paste the previously copied ``python.exe`` file **as a shortcut**."
msgstr ""

#: ../../sources/installation/installation-windows.rst:370
msgid "Rename it to python <python-version>. E.g. ``python27-x64``"
msgstr ""

#: ../../sources/installation/installation-windows.rst:372
msgid ""
"You can now execute your application by right clicking on the `.py` file "
"-> \"Send To\" -> \"python <python-version>\"."
msgstr ""

#: ../../sources/installation/installation-windows.rst:378
msgid "Upgrading from a previous Kivy dist"
msgstr ""

#: ../../sources/installation/installation-windows.rst:380
msgid ""
"To install the new wheels to a previous Kivy distribution all the files "
"and folders, except for the python folder should be deleted from the "
"distribution. This python folder will then be treated as a normal system "
"installed python and all the steps described in :ref:`Installation` can "
"then be continued."
msgstr ""

