# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.9.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-02 17:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/guide/basic.rst:4
msgid "Kivy Basics"
msgstr ""

#: ../../source/guide/basic.rst:7
msgid "Installation of the Kivy environment"
msgstr ""

#: ../../source/guide/basic.rst:9
msgid ""
"Kivy depends on many Python libraries, such as pygame, gstreamer, PIL, "
"Cairo, and more. They are not all required, but depending on the platform"
" you're working on, they can be a pain to install. For Windows and MacOS "
"X, we provide a portable package that you can just unzip and use."
msgstr ""

#: ../../source/guide/basic.rst:15
msgid ":ref:`installation_windows`"
msgstr ""

#: ../../source/guide/basic.rst:16
msgid ":ref:`installation_osx`"
msgstr ""

#: ../../source/guide/basic.rst:17
msgid ":ref:`installation_linux`"
msgstr ""

#: ../../source/guide/basic.rst:19
msgid ""
"If you want to install everything yourself, ensure that you have at least"
" `Cython <http://cython.org>`_ and `Pygame <http://pygame.org>`_. A "
"typical pip installation looks like this::"
msgstr ""

#: ../../source/guide/basic.rst:27
msgid ""
"The `development version <https://github.com/kivy/kivy>`_ can be "
"installed with git::"
msgstr ""

#: ../../source/guide/basic.rst:36
msgid "Create an application"
msgstr ""

#: ../../source/guide/basic.rst:38
msgid "Creating a kivy application is as simple as:"
msgstr ""

#: ../../source/guide/basic.rst:40
msgid "sub-classing the :class:`~kivy.app.App` class"
msgstr ""

#: ../../source/guide/basic.rst:41
msgid ""
"implementing its :meth:`~kivy.app.App.build` method so it returns a "
":class:`~kivy.uix.Widget` instance (the root of your widget tree)"
msgstr ""

#: ../../source/guide/basic.rst:43
msgid ""
"instantiating this class, and calling its :meth:`~kivy.app.App.run` "
"method."
msgstr ""

#: ../../source/guide/basic.rst:46
msgid "Here is an example of a minimal application::"
msgstr ""

#: ../../source/guide/basic.rst:64
msgid "You can save this to a text file, `main.py` for example, and run it."
msgstr ""

#: ../../source/guide/basic.rst:67
msgid "Kivy App Life Cycle"
msgstr ""

#: ../../source/guide/basic.rst:69
msgid "First off, let's get familiar with the Kivy app life cycle."
msgstr ""

#: ../../source/guide/basic.rst:73
msgid ""
"As you can see above, for all intents and purposes, our entry point into "
"our App is the run() method, and in our case that is \"MyApp().run()\". "
"We will get back to this, but let's start from the third line::"
msgstr ""

#: ../../source/guide/basic.rst:79
msgid ""
"It's required that the base Class of your App inherits from the `App` "
"class. It's present in the kivy_installation_dir/kivy/app.py."
msgstr ""

#: ../../source/guide/basic.rst:83
msgid ""
"Go ahead and open up that file if you want to delve deeper into what the "
"Kivy App class does. We encourage you to open the code and read through "
"it. Kivy is based on Python and uses Sphinx for documentation, so the "
"documentation for each class is in the actual file."
msgstr ""

#: ../../source/guide/basic.rst:88
msgid "Similarly on line 2::"
msgstr ""

#: ../../source/guide/basic.rst:92
msgid ""
"One important thing to note here is the way packages/classes are laid "
"out. The :class:`~kivy.uix` module is the section that holds the user "
"interface elements like layouts and widgets."
msgstr ""

#: ../../source/guide/basic.rst:96
msgid "Moving on to line 5::"
msgstr ""

#: ../../source/guide/basic.rst:100
msgid ""
"This is where we are `defining` the Base Class of our Kivy App. You "
"should only ever need to change the name of your app `MyApp` in this "
"line."
msgstr ""

#: ../../source/guide/basic.rst:103
msgid "Further on to line 7::"
msgstr ""

#: ../../source/guide/basic.rst:107
msgid ""
"As highlighted by the image above, show casing the `Kivy App Life Cycle`,"
" this is the function where you should initialize and return your `Root "
"Widget`. This is what we do on line 8::"
msgstr ""

#: ../../source/guide/basic.rst:113
msgid ""
"Here we initialize a Label with text 'Hello World' and return its "
"instance. This Label will be the Root Widget of this App."
msgstr ""

#: ../../source/guide/basic.rst:117
msgid ""
"Python uses indentation to denote code blocks, therefore take note that "
"in the code provided above, at line 9 the class and function definition "
"ends."
msgstr ""

#: ../../source/guide/basic.rst:120
msgid "Now on to the portion that will make our app run at line 11 and 12::"
msgstr ""

#: ../../source/guide/basic.rst:125
msgid ""
"Here the class `MyApp` is initialized and its run() method called. This "
"initializes and starts our Kivy application."
msgstr ""

#: ../../source/guide/basic.rst:130
msgid "Running the application"
msgstr ""

#: ../../source/guide/basic.rst:131
msgid "To run the application, follow the instructions for your operating system:"
msgstr ""

#: ../../source/guide/basic.rst:137
msgid "Linux"
msgstr ""

#: ../../source/guide/basic.rst:134
msgid ""
"Follow the instructions for :ref:`running a Kivy application on Linux "
"<linux-run-app>`::"
msgstr ""

#: ../../source/guide/basic.rst:145
msgid "Windows"
msgstr ""

#: ../../source/guide/basic.rst:140
msgid ""
"Follow the instructions for :ref:`running a Kivy application on Windows "
"<windows-run-app>`::"
msgstr ""

#: ../../source/guide/basic.rst:151
msgid "Mac OS X"
msgstr ""

#: ../../source/guide/basic.rst:148
msgid ""
"Follow the instructions for :ref:`running a Kivy application on OS X "
"<osx-run-app>`::"
msgstr ""

#: ../../source/guide/basic.rst:155
msgid "Android"
msgstr ""

#: ../../source/guide/basic.rst:154
msgid ""
"Your application needs some complementary files to be able to run on "
"Android.  See :doc:`/guide/packaging-android` for further reference."
msgstr ""

#: ../../source/guide/basic.rst:157
msgid ""
"A window should open, showing a single Label (with the Text 'Hello "
"World') that covers the entire window's area. That's all there is to it."
msgstr ""

#: ../../source/guide/basic.rst:165
msgid "Customize the application"
msgstr ""

#: ../../source/guide/basic.rst:167
msgid "Lets extend this application a bit, say a simple UserName/Password page."
msgstr ""

#: ../../source/guide/basic.rst:199
msgid "At line 2 we import a :class:`~kivy.uix.gridlayout.Gridlayout`::"
msgstr ""

#: ../../source/guide/basic.rst:203
msgid ""
"This class is used as a Base for our Root Widget (LoginScreen) defined at"
" line 9::"
msgstr ""

#: ../../source/guide/basic.rst:208
msgid ""
"At line 12 in the class LoginScreen, we overload the method "
":meth:`~kivy.widget.Widget.__init__` so as to add widgets and to define "
"their behavior::"
msgstr ""

#: ../../source/guide/basic.rst:215
msgid ""
"One should not forget to call super in order to implement the "
"functionality of the original class being overloaded. Also note that it "
"is good practice not to omit the `**kwargs` while calling super, as they "
"are sometimes used internally."
msgstr ""

#: ../../source/guide/basic.rst:219
msgid "Moving on to Line 15 and beyond::"
msgstr ""

#: ../../source/guide/basic.rst:229
msgid ""
"We ask the GridLayout to manage its children in two columns and add a "
":class:`~kivy.uix.label.Label` and a "
":class:`~kivy.uix.textinput.TextInput` for the username and password."
msgstr ""

#: ../../source/guide/basic.rst:233
msgid "Running the above code will give you a window that should look like this:"
msgstr ""

#: ../../source/guide/basic.rst:238
msgid ""
"Try re-sizing the window and you will see that the widgets on screen "
"adjust themselves according to the size of the window without you having "
"to do anything. This is because widgets use size hinting by default."
msgstr ""

#: ../../source/guide/basic.rst:242
msgid ""
"The code above doesn't handle the input from the user, does no validation"
" or anything else. We will delve deeper into this and "
":class:`~kivy.widget.Widget` size and positioning in the coming sections."
msgstr ""

#: ../../source/guide/basic.rst:248
msgid "Platform specifics"
msgstr ""

#: ../../source/guide/basic.rst:250
msgid "Opening a Terminal application and setting the kivy environment variables."
msgstr ""

#: ../../source/guide/basic.rst:252
msgid ""
"On Windows, just double click the kivy.bat and a terminal will be opened "
"with all the required variables already set."
msgstr ""

#: ../../source/guide/basic.rst:255
msgid ""
"On nix* systems, open the terminal of your choice and if kivy isn't "
"installed globally::"
msgstr ""

