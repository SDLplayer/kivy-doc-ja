# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.9.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-02 17:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/guide/android.rst:5
msgid "Kivy on Android"
msgstr "Kivy on Android(翻訳中)"

#: ../../source/guide/android.rst:7
#, python-format
msgid ""
"You can run Kivy applications on Android, on (more or less) any device "
"with OpenGL ES 2.0 (Android 2.2 minimum). This is standard on modern "
"devices; Google reports the requirement is met by `99.9% of devices "
"<https://developer.android.com/about/dashboards/index.html>`_."
msgstr ""
"Android上でOpenGL ES 2.0（アンドロイド2.2以上）を持つ（多かれ少なかれ）"
"任意のデバイスでKivyアプリケーションを実行できます。"
"Googleの要件が満たされている報告した`デバイスの99.9％ で<https://developer.android.com/about/dashboards/index.html>`_"
"現代のデバイス上の標準です。"

#: ../../source/guide/android.rst:12
msgid ""
"Kivy APKs are normal Android apps that you can distribute like any other,"
" including on stores like the Play store. They behave properly when "
"paused or restarted, may utilise Android services and have access to most"
" of the normal java API as described below."
msgstr ""
"Kivy APKを使用するとPlay storeや他のストアで配布できる標準のAndroid appを開発出来ます。"
"一時停止または再起動したときに正しく動作し、Androidのサービスを利用し、"
"以下に説明するように、通常のJava APIのほとんどにアクセスできます。"

#: ../../source/guide/android.rst:17
msgid ""
"Follow the instructions below to learn how to :ref:`package your app for "
"Android <package_for_android>`, :ref:`debug your code on the device "
"<debug_android>`, and :ref:`use Android APIs <using_android_apis>` such "
"as for vibration and reading sensors."
msgstr ""
" 学習の際は以下の手順に従ってください。:ref:`package your app for Android <package_for_android>`、"
" :ref:`debug your code on the device <debug_android>`"
"を 、そして振動や読み取りセンサ用を使用するには:ref:`use Android APIs <using_android_apis>` を参照してださい。"

#: ../../source/guide/android.rst:25
msgid "Package for Android"
msgstr "Package for Android(Android用にパッケージ)"

#: ../../source/guide/android.rst:27
msgid ""
"The Kivy project provides all the necessary tools to package your app on "
"Android, including building your own standalone APK that may be "
"distributed on a market like the Play store. This is covered fully in the"
" :ref:`packaging_android` documentation."
msgstr ""
"Kivyプロジェクトは、Play storeのような市場に流通できる独自のスタンドアロンのAPKを構築するなど、"
"Android上のアプリをパッケージ化するために必要なすべてのツールを提供しています。 "
"これは、:ref:`packaging_android`のドキュメントにカバーされています。"

#: ../../source/guide/android.rst:36
msgid "Debugging your application on the Android platform"
msgstr ""

#: ../../source/guide/android.rst:38
msgid ""
"You can view the normal output of your code (stdout, stderr), as well as "
"the normal Kivy logs, through the Android logcat stream. This is accessed"
" through adb, provided by the `Android SDK "
"<http://developer.android.com/sdk/index.html>`_. You may need to enable "
"adb in your device's developer options, then connect your device to your "
"computer and run::"
msgstr ""

#: ../../source/guide/android.rst:47
msgid "You'll see all the logs including your stdout/stderr and Kivy logger."
msgstr ""

#: ../../source/guide/android.rst:50
msgid ""
"If you packaged your app with Buildozer, the `adb` tool may not be in "
"your :code:`$PATH` and the above command may not work. You can instead "
"run::"
msgstr ""

#: ../../source/guide/android.rst:55
msgid ""
"to run the version installed by Buildozer, or find the SDK tools at "
":code:`$HOME/.buildozer/android/platform`."
msgstr ""

#: ../../source/guide/android.rst:59
msgid ""
"You can also run and debug your application using the `Kivy Launcher`_. "
"If you run your application this way, you will find log files inside the "
"\"/.kivy/logs\" sub-folder within your application folder."
msgstr ""

#: ../../source/guide/android.rst:67
msgid "Using Android APIs"
msgstr ""

#: ../../source/guide/android.rst:69
msgid ""
"Although Kivy is a Python framework, the Kivy project maintains tools to "
"easily use the normal java APIs, for everything from vibration to sensors"
" to sending messages through SMS or email."
msgstr ""

#: ../../source/guide/android.rst:73
msgid ""
"For new users, we recommend using :ref:`Plyer`. For more advanced access "
"or for APIs not currently wrapped, you can use :ref:`Pyjnius` directly. "
"Kivy also supplies an :ref:`android module <android_module>` for basic "
"Android functionality."
msgstr ""

#: ../../source/guide/android.rst:78
msgid ""
"User contributed Android code and examples are available on the `Kivy "
"wiki <https://github.com/kivy/kivy/wiki#mobiles>`_."
msgstr ""

#: ../../source/guide/android.rst:84
msgid "Plyer"
msgstr ""

#: ../../source/guide/android.rst:86
msgid ""
"`Plyer <https://github.com/kivy/plyer>`__ is a pythonic, platform-"
"independent API to use features commonly found on various platforms, "
"particularly mobile ones. The idea is that your app can call simply call "
"a Plyer function, such as to present a notification to the user, and "
"Plyer will take care of doing so in the right way regardless of the "
"platform or operating system. Internally, Plyer uses Pyjnius (on "
"Android), Pyobjus (on iOS) and some platform specific APIs on desktop "
"platforms."
msgstr ""

#: ../../source/guide/android.rst:95
msgid ""
"For instance, the following code would make your Android device vibrate, "
"or raise a NotImplementedError that you can handle appropriately on other"
" platforms such as desktops that don't have appropriate hardware:::"
msgstr ""

#: ../../source/guide/android.rst:103
msgid ""
"Plyer's list of supported APIs is growing quite quickly, you can see the "
"full list in the Plyer `README <https://github.com/kivy/plyer>`_."
msgstr ""

#: ../../source/guide/android.rst:110
msgid "Pyjnius"
msgstr ""

#: ../../source/guide/android.rst:112
msgid ""
"Pyjnius is a Python module that lets you access java classes directly "
"from Python, automatically converting arguments to the right type, and "
"letting you easily convert the java results to Python."
msgstr ""

#: ../../source/guide/android.rst:116
msgid ""
"Pyjnius can be obtained from `github <https://github.com/kivy/pyjnius>`_,"
" and has its `own documentation "
"<http://pyjnius.readthedocs.org/en/latest/>`__."
msgstr ""

#: ../../source/guide/android.rst:120
msgid ""
"Here is a simple example showing Pyjnius' ability to access the normal "
"Android vibration API, the same result of the plyer code above::"
msgstr ""

#: ../../source/guide/android.rst:142
msgid ""
"This code directly follows the java API functions to call the vibrator, "
"with Pyjnius automatically translating the api to Python code and our "
"calls back to the equivalent java. It is much more verbose and java-like "
"than Plyer's version, for no benefit in this case, though Plyer does not "
"wrap every API available to Pyjnius."
msgstr ""

#: ../../source/guide/android.rst:148
msgid ""
"Pyjnius also has powerful abilities to implement java interfaces, which "
"is important for wrapping some APIs, but these are not documented here - "
"you can see Pyjnius' `own documentation "
"<http://pyjnius.readthedocs.org/en/latest/>`__."
msgstr ""

#: ../../source/guide/android.rst:156
msgid "Android module"
msgstr ""

#: ../../source/guide/android.rst:158
msgid ""
"Python-for-android includes a python module (actually cython wrapping "
"java) to access a limited set of Android APIs. This has been largely "
"superseded by the more flexible Pyjnius and Plyer as above, but may still"
" occasionally be useful. The available functions are given in the "
"`python-for-android documentation <http://python-for-"
"android.readthedocs.org/en/latest/>`_."
msgstr ""

#: ../../source/guide/android.rst:165
msgid ""
"This includes code for billing/IAP and creating/accessing Android "
"services, which is not yet available in the other tools above."
msgstr ""

#: ../../source/guide/android.rst:169
msgid "Status of the Project and Tested Devices"
msgstr ""

#: ../../source/guide/android.rst:171
msgid ""
"These sections previously described the existence of Kivy's Android build"
" tools, with their limitations and some devices that were known to work."
msgstr ""

#: ../../source/guide/android.rst:175
msgid ""
"The Android tools are now quite stable, and should work with practically "
"any device; our minimum requirements are OpenGL ES 2.0 and Android 2.2. "
"These are very common now - Kivy has even been run on an Android "
"smartwatch!"
msgstr ""

#: ../../source/guide/android.rst:180
msgid ""
"A current technical limitation is that the Android build tools compile "
"only ARM APKs, which will not run on Android devices with x86 processors "
"(these are currently rare). This should be added soon."
msgstr ""

#: ../../source/guide/android.rst:184
msgid ""
"As Kivy works fine on most devices, the list of supported phones/tablets "
"has been retired - all Android devices are likely to work if they meet "
"the conditions above."
msgstr ""

