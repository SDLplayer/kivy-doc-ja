# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.9.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-02 17:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/guide/packaging-osx.rst:2
msgid "Creating packages for OS X"
msgstr ""

#: ../../source/guide/packaging-osx.rst:5
msgid ""
"Packaging Kivy applications with the following methods must be done "
"inside OS X, 32-bit platforms are no longer supported."
msgstr ""

#: ../../source/guide/packaging-osx.rst:11
msgid "Using Buildozer"
msgstr ""

#: ../../source/guide/packaging-osx.rst:13
msgid ""
"pip install git+http://github.com/kivy/buildozer cd "
"/to/where/I/Want/to/package buildozer init"
msgstr ""

#: ../../source/guide/packaging-osx.rst:17
msgid ""
"Edit the buildozer.spec and add the details for your app. Dependencies "
"can be added to the `requirements=` section."
msgstr ""

#: ../../source/guide/packaging-osx.rst:20
msgid "By default the kivy version specified in the requirements is ignored."
msgstr ""

#: ../../source/guide/packaging-osx.rst:22
msgid ""
"If you have a Kivy.app at /Applications/Kivy.app then that is used, for "
"packaging. Otherwise the latest build from kivy.org using Kivy master "
"will be downloaded and used."
msgstr ""

#: ../../source/guide/packaging-osx.rst:26
msgid ""
"If you want to package for python 3.x.x simply download the package named"
" Kivy3.7z from the download section of kivy.org and extract it to "
"Kivy.app in /Applications, then run::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:32
msgid ""
"Once the app is packaged, you might want to remove unneeded packages like"
" gstreamer, if you don't need video support. Same logic applies for other"
" things you do not use, just reduce the package to its minimal state that"
" is needed for the app to run."
msgstr ""

#: ../../source/guide/packaging-osx.rst:37
msgid ""
"As an example we are including the showcase example packaged using this "
"method for both Python 2 (9.xMB) and 3 (15.xMB), you can find the "
"packages here: "
"https://drive.google.com/drive/folders/0B1WO07-OL50_alFzSXJUajBFdnc ."
msgstr ""

#: ../../source/guide/packaging-osx.rst:42
msgid "That's it. Enjoy!"
msgstr ""

#: ../../source/guide/packaging-osx.rst:44
msgid ""
"Buildozer right now uses the Kivy SDK to package your app. If you want to"
" control more details about your app than buildozer currently offers then"
" you can use the SDK directly, as detailed in the section below."
msgstr ""

#: ../../source/guide/packaging-osx.rst:50
msgid "Using the Kivy SDK"
msgstr ""

#: ../../source/guide/packaging-osx.rst:52
msgid ""
"Since version 1.9.0, Kivy is released for the OS X platform in a self-"
"contained, portable distribution."
msgstr ""

#: ../../source/guide/packaging-osx.rst:55
msgid ""
"Apps can be packaged and distributed with the Kivy SDK using the method "
"described below, making it easier to include frameworks like SDL2 and "
"GStreamer."
msgstr ""

#: ../../source/guide/packaging-osx.rst:59
msgid ""
"Make sure you have the unmodified Kivy SDK (Kivy.app) from the download "
"page."
msgstr ""

#: ../../source/guide/packaging-osx.rst:61
msgid "Run the following commands::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:70
msgid ""
"This step above is important, you have to make sure to preserve the paths"
" and permissions. A command like ``cp -rf`` will copy but make the app "
"unusable and lead to error later on."
msgstr ""

#: ../../source/guide/packaging-osx.rst:74
msgid ""
"Now all you need to do is to include your compiled app in the Kivy.app by"
" running the following command::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:79
msgid "Where <app_folder_name> is the name of your app."
msgstr ""

#: ../../source/guide/packaging-osx.rst:81
msgid ""
"This copies Kivy.app to `<app_folder_name>.app` and includes a compiled "
"copy of your app into this package."
msgstr ""

#: ../../source/guide/packaging-osx.rst:84
msgid ""
"That's it, your self-contained package is ready to be deployed! You can "
"now further customize your app as described bellow."
msgstr ""

#: ../../source/guide/packaging-osx.rst:88
msgid "Installing modules"
msgstr ""

#: ../../source/guide/packaging-osx.rst:90
msgid ""
"Kivy package on osx uses its own virtual env that is activated when you "
"run your app using `kivy` command. To install any module you need to "
"install the module like so::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:96
msgid "Where are the modules/files installed?"
msgstr ""

#: ../../source/guide/packaging-osx.rst:97
msgid "Inside the portable venv within the app at::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:101
msgid ""
"If you install a module that installs a binary for example like kivy-"
"garden That binary will be only available from the venv above, as in "
"after you do::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:106
msgid "The garden lib will be only available when you activate this env."
msgstr ""

#: ../../source/guide/packaging-osx.rst:108
msgid ""
"source /Applications/Kivy.app/Contents/Resources/venv/bin/activate garden"
" install mapview deactivate"
msgstr ""

#: ../../source/guide/packaging-osx.rst:113
msgid "To install binary files"
msgstr ""

#: ../../source/guide/packaging-osx.rst:115
msgid ""
"Just copy the binary to the Kivy.app/Contents/Resources/venv/bin/ "
"directory."
msgstr ""

#: ../../source/guide/packaging-osx.rst:118
msgid "To include other frameworks"
msgstr ""

#: ../../source/guide/packaging-osx.rst:119
msgid ""
"Kivy.app comes with SDL2 and Gstreamer frameworks provided. To include "
"frameworks other than the ones provided do the following::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:128
msgid ""
"Do not forget to replace <Framework_name> with your framework. This tool "
"`osxrelocator` essentially changes the path for the libs in the framework"
" such that they are relative to the executable within the .app, making "
"the Framework portable with the .app."
msgstr ""

#: ../../source/guide/packaging-osx.rst:135
msgid "Shrinking the app size"
msgstr ""

#: ../../source/guide/packaging-osx.rst:136
msgid ""
"The app has a considerable size right now, however the unneeded parts can"
" be removed from the package."
msgstr ""

#: ../../source/guide/packaging-osx.rst:139
msgid ""
"For example if you don't use GStreamer, simply remove it from "
"YourApp.app/Contents/Frameworks. Similarly you can remove the examples "
"folder from /Applications/Kivy.app/Contents/Resources/kivy/examples/ or "
"kivy/tools, kivy/docs etc."
msgstr ""

#: ../../source/guide/packaging-osx.rst:145
msgid ""
"This way the package can be made to only include the parts that are "
"needed for your app."
msgstr ""

#: ../../source/guide/packaging-osx.rst:149
msgid "Adjust settings"
msgstr ""

#: ../../source/guide/packaging-osx.rst:150
msgid ""
"Icons and other settings of your app can be changed by editing "
"YourApp/Contents/info.plist to suit your needs."
msgstr ""

#: ../../source/guide/packaging-osx.rst:154
msgid "Create a DMG"
msgstr ""

#: ../../source/guide/packaging-osx.rst:155
msgid "To make a DMG of your app use the following command::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:159
msgid ""
"Note the lack of `/` at the end. This should give you a compressed dmg "
"that will further shrink the size of your distributed app."
msgstr ""

#: ../../source/guide/packaging-osx.rst:167
msgid "Using PyInstaller without Homebrew"
msgstr ""

#: ../../source/guide/packaging-osx.rst:168
msgid ""
"First install Kivy and its dependencies without using Homebrew as "
"mentioned here http://kivy.org/docs/installation/installation.html"
"#development-version."
msgstr ""

#: ../../source/guide/packaging-osx.rst:171
msgid ""
"Once you have kivy and its deps installed, you need to install "
"PyInstaller."
msgstr ""

#: ../../source/guide/packaging-osx.rst:173
msgid "Let's assume we use a folder like `testpackaging`::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:178
msgid ""
"Create a file named touchtracer.spec in this directory and add the "
"following code to it::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:218
msgid "Change the paths with your relevant paths::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:226
msgid "Then run the following command::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:230
msgid ""
"Replace `touchtracer` with your app where appropriate. This will give you"
" a <yourapp>.app in the dist/ folder."
msgstr ""

#: ../../source/guide/packaging-osx.rst:235
msgid "Using PyInstaller and Homebrew"
msgstr ""

#: ../../source/guide/packaging-osx.rst:237
msgid "Package your app on the oldest OS X version you want to support."
msgstr ""

#: ../../source/guide/packaging-osx.rst:241
msgid "Install `Homebrew <http://brew.sh>`_"
msgstr ""

#: ../../source/guide/packaging-osx.rst:242
msgid "Install Python::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:247
msgid ""
"To use Python 3, ``brew install python3`` and replace ``pip`` with "
"``pip3`` in the guide below."
msgstr ""

#: ../../source/guide/packaging-osx.rst:250
msgid ""
"(Re)install your dependencies with ``--build-bottle`` to make sure they "
"can be used on other machines::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:256
msgid ""
"If your project depends on GStreamer or other additional libraries "
"(re)install them with ``--build-bottle`` as described `below <additional "
"libraries_>`_."
msgstr ""

#: ../../source/guide/packaging-osx.rst:259
msgid "Install Cython and Kivy::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:264
msgid "Install PyInstaller::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:268
msgid "Package your app using the path to your main.py::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:278
msgid ""
"This will not yet copy additional image or sound files. You would need to"
" adapt the created ``.spec`` file for that."
msgstr ""

#: ../../source/guide/packaging-osx.rst:284
msgid ""
"The specs file is named `touchtracer.spec` and is located in the "
"directory where you ran the pyinstaller command."
msgstr ""

#: ../../source/guide/packaging-osx.rst:287
msgid ""
"You need to change the `COLLECT()` call to add the data of touchtracer "
"(`touchtracer.kv`, `particle.png`, ...). Change the line to add a Tree() "
"object. This Tree will search and add every file found in the touchtracer"
" directory to your final package. Your COLLECT section should look "
"something like this::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:301
msgid ""
"This will add the required hooks so that PyInstaller gets the required "
"Kivy files. We are done. Your spec is ready to be executed."
msgstr ""

#: ../../source/guide/packaging-osx.rst:307
msgid "Open a console."
msgstr ""

#: ../../source/guide/packaging-osx.rst:308
msgid "Go to the PyInstaller directory, and build the spec::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:312
msgid "Run::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:318
msgid "You will now have a Touchtracer.dmg available in the `dist` directory."
msgstr ""

#: ../../source/guide/packaging-osx.rst:325
msgid "If your project depends on GStreamer::"
msgstr ""

#: ../../source/guide/packaging-osx.rst:330
msgid ""
"If your Project needs Ogg Vorbis support be sure to add the ``--with-"
"libvorbis`` option to the command above."
msgstr ""

#: ../../source/guide/packaging-osx.rst:333
msgid ""
"If you are using Python from Homebrew you currently also need the "
"following step until `this pull request "
"<https://github.com/Homebrew/homebrew/pull/46097>`_ gets merged::"
msgstr ""

