# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.9.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-02 17:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/installation/installation-windows.rst:4
msgid "Installation on Windows"
msgstr "Installation on Windows(翻訳済み)"

#: ../../source/installation/installation-windows.rst:6
msgid ""
"Beginning with 1.9.1 we provide binary `wheels "
"<https://wheel.readthedocs.org/en/latest/>`_ for Kivy and all its "
"dependencies to be used with an existing Python installation. See :ref"
":`install-win-dist`."
msgstr ""
"1.9.1以降では、Kivyためにのバイナリ`wheels <https://wheel.readthedocs.org/en/latest/>`_ を提供します。"
"すべての依存関係は、既存のPythonインストールに使用します。 :ref:`install-win-dist` を参照してください 。"

#: ../../source/installation/installation-windows.rst:10
msgid ""
"We also provide nightly wheels generated using Kivy `master "
"<https://github.com/kivy/kivy>`_. See :ref:`install-nightly-win-dist`. "
"See also :ref:`upgrade-win-dist`. If installing kivy to an **alternate "
"location** and not to site-packages, please see :ref:`alternate-win`."
msgstr ""
"また、Kivy `master <https://github.com/kivy/kivy>`_を使用して生成された"
"Nightlyのwheel を提供します 。:ref:`install-nightly-win-dist`を参照してください 。"
":ref:`upgrade-win-dist`を参照してください 。"
"site-packagesではなく別の場所にkivyをインストールする場合は、"
":ref:`alternate-win`を参照してください 。"

#: ../../source/installation/installation-windows.rst:16
msgid ""
"Python 3.5 is currently not supported on Windows due to issues with MinGW"
" and Python 3.5. Support is not expected for some time. See `here "
"<http://bugs.python.org/issue4709>`_ for details. If required, 3.5 MSVC "
"builds should be posssible, but have not been attempted, please enquire "
"or let us know if you've compiled with MSVC."
msgstr ""
"Python3.5は、現在、MinGWとPython 3.5が原因の問題についてWindows上でサポートされていません。"
"サポートはしばらくされません。詳細については`ここ <http://bugs.python.org/issue4709>`_を"
"参照してください。3.5が必要な場合は、MSVC build はposssibleにする必要がありますが、"
"試していないのでお問い合わせください。またはMSVCでコンパイルした場合はお知らせください。"


#: ../../source/installation/installation-windows.rst:22
msgid ""
"To use Kivy you need `Python "
"<https://www.python.org/downloads/windows/>`_. Multiple versions of "
"Python can be installed side by side, but Kivy needs to be installed for "
"each Python version that you want to use Kivy."
msgstr ""
"Kivyを使用するには`Python <https://www.python.org/downloads/windows/>`_が必要です 。"
"Pythonの複数のバージョンを平行にインストールできますが、"
"KivyはKivyを使用する各Pythonのバージョンにインストールする必要があります"

#: ../../source/installation/installation-windows.rst:29
msgid "Installation"
msgstr "Installation(インストール)"

#: ../../source/installation/installation-windows.rst:31
msgid ""
"Now that python is installed, open the :ref:`Command line` and make sure "
"python is available by typing ``python --version``. Then, do the "
"following to install."
msgstr ""
"pythonがすでにインストールされているとして、コマンドラインを開き、"
"次のように入力して「python --version 」Pythonが利用可能であることを"
"確認してください。次に、インストールするには、次の手順を実行します。"

#: ../../source/installation/installation-windows.rst:34
msgid "Ensure you have the latest pip and wheel::"
msgstr "最新のpipとwheelを持っていることを確認します::"

#: ../../source/installation/installation-windows.rst:38
msgid ""
"Install the dependencies (skip gstreamer (~90MB) if not needed, see "
":ref:`Kivy's dependencies`)::"
msgstr "依存関係をインストールします（gstreamer（90MB)が必要ない場合はスキップできます、"
":ref:`Kivy's dependenciesを参照してください）::"
""

#: ../../source/installation/installation-windows.rst:44
msgid "Install kivy::"
msgstr "Kivyをインストールします::"

#: ../../source/installation/installation-windows.rst:48
msgid "That's it. You should now be able to ``import kivy`` in python."
msgstr "それでおしまい。Pythonで「import Kivy」が使用できるようになります。"

#: ../../source/installation/installation-windows.rst:52
msgid ""
"If you encounter any **permission denied** errors, try opening the "
"`Command prompt as administrator <https://technet.microsoft.com/en-"
"us/library/cc947813%28v=ws.10%29.aspx>`_ and trying again."
msgstr ""
"「permission denied」が発生した場合は、"
"`管理者としてコマンドプロンプト <https://technet.microsoft.com/enus/library/cc947813%28v=ws.10%29.aspx`_ を開
き再度実行してみてください。"

#: ../../source/installation/installation-windows.rst:60
msgid "Nightly wheel installation"
msgstr "Nightly wheel installation(Nightly wheelのインストール)"

#: ../../source/installation/installation-windows.rst:64
#: ../../source/installation/installation-windows.rst:145
msgid ""
"Using the latest development version can be risky and you might encounter"
" issues during development. If you encounter any bugs, please report "
"them."
msgstr ""
"最新の開発版を使用することはリスクがあり、開発中に問題が発生する可能性があります。"
"任意のバグに遭遇した場合は報告してください。"

#: ../../source/installation/installation-windows.rst:67
msgid ""
"Snapshot wheels of current Kivy master are created every night. They can "
"be found `here "
"<https://drive.google.com/folderview?id=0B1_HB9J8mZepOV81UHpDbmg5SWM&usp=sharing#list>`_."
" To use them, instead of doing `python -m pip install kivy` we'll install"
" one of these wheels as follows."
msgstr ""
"現在Kivyマスターのスナップショットwheel は毎晩作成されます。"
"`ここ <https://drive.google.com/folderview?id=0B1_HB9J8mZepOV81UHpDbmg5SWM&usp=sharing#list>`_にあります 。"
"次のようにこれらのwheelのいずれかをインストールします。「python -m pip install kivy」"


#: ../../source/installation/installation-windows.rst:72
msgid "`Python 2.7, 32bit <javascript:getNightly('cp27','win32');>`_"
msgstr ""

#: ../../source/installation/installation-windows.rst:73
msgid "`Python 3.4, 32bit <javascript:getNightly('cp34','win32');>`_"
msgstr ""

#: ../../source/installation/installation-windows.rst:74
msgid "`Python 2.7, 64bit <javascript:getNightly('cp27','win_amd64');>`_"
msgstr ""

#: ../../source/installation/installation-windows.rst:75
msgid "`Python 3.4, 64bit <javascript:getNightly('cp34','win_amd64');>`_"
msgstr ""

#: ../../source/installation/installation-windows.rst:77
msgid "Perform steps 1 and 2 of the above Installation section."
msgstr "上記のインストールセクションの手順1と2を実行します。"

#: ../../source/installation/installation-windows.rst:78
msgid "Download the appropriate wheel for your system."
msgstr "システムに適したwheel をダウンロードしてください。"

#: ../../source/installation/installation-windows.rst:79
msgid ""
"Rename the wheel to remove the version tag, e.g. "
"``Kivy-1.9.1.dev0_30112015_gitc68b630-cp27-none-win32.whl`` should be "
"renamed to ``Kivy-1.9.1.dev0-cp27-none-win32.whl``."
msgstr ""
"バージョンタグを削除するには、wheel の名前を変更し、"
"例えば``Kivy-1.9.1.dev0_30112015_gitc68b630-cp27-none-win32.whl``を "
"``Kivy-1.9.1.dev0-cp27-none-win32.whl``に名前を変更する必要があります。"

#: ../../source/installation/installation-windows.rst:82
msgid ""
"Install it with ``python -m pip install wheel-name`` where ``wheel-name``"
" is the name of the renamed file."
msgstr ""
"「python -m pip install wheel-name」　でインストールします。「wheel-name」は変更されたファイルの名前です。"

#: ../../source/installation/installation-windows.rst:87
msgid "Kivy's dependencies"
msgstr "Kivy's dependencies(Kivyの依存関係)"

#: ../../source/installation/installation-windows.rst:89
msgid ""
"We offer wheels for Kivy and its dependencies separately so only desired "
"dependencies need be installed. The dependencies are offered as "
"`namespace <https://www.python.org/dev/peps/pep-0420/>`_ packages of "
"Kivy.deps, e.g. ``kivy.deps.sdl2``."
msgstr ""
"唯一必要な依存関係がインストールされるために、Kivyとその依存関係のそれぞれにwheelを提供しています。"
"依存関係は次のように提供されています。 Kivy.depsの`namespace <https://www.python.org/dev/peps/pep-0420/>`_ パッケージ、例：kivy.deps.sdl2 。"

#: ../../source/installation/installation-windows.rst:94
msgid ""
"Currently on Windows, we provide the following dependency wheels: "
"``gstreamer`` for audio and video and `glew` and ``sdl2`` for graphics "
"and control. ``gstreamer`` is an optional dependency which only needs to "
"be installed if video display or audio is desired."
msgstr ""
"現在、Windows上で、私たちは次の依存関係のwheelsを提供します："
"オーディオとビデオの「gstreamer」、グラフィックスおよび制御のための「GLEW」「sdl2」。"
"「gstreamer」はビデオ表示や音声再生を望む場合にインストールする必要があり、"
"オプションの依存関係です。"

#: ../../source/installation/installation-windows.rst:100
msgid "What are wheels, pip and wheel"
msgstr "What are wheels, pip and wheel(pip と wheel,wheelとは何か)"

#: ../../source/installation/installation-windows.rst:102
msgid ""
"In Python, packages such as Kivy can be installed with the python package"
" manager, `pip <https://pip.pypa.io/en/stable/>`_. Some packages such as "
"Kivy require additional steps, such as compilation, when installing using"
" the Kivy source code with pip. Wheels (with a ``.whl`` extension) are "
"pre-built distributions of a package that has already been compiled and "
"do not require additional steps to install."
msgstr ""
"Pythonでは、Kivyなどのパッケージは、Pythonのパッケージマネージャ" 
" `pip <https://pip.pypa.io/en/stable/>`_でインストールができます 。"
"pipとKivyのソースコードを使用してインストールするときなどでKivyなどの"
"いくつかのパッケージはコンパイルなどの追加の手順を必要とします。"
"wheel（拡張子は「.whl」）はすでにコンパイルされており、"
"インストールで追加の手順を必要としない事前に構築された"
"ディストリビューションパッケージです。"

#: ../../source/installation/installation-windows.rst:109
msgid ""
"When hosted on `pypi <https://pypi.python.org/pypi>`_ one installs a "
"wheel using ``pip``, e.g. ``python -m pip install kivy``. When "
"downloading and installing a wheel directly, ``python -m pip install "
"wheel_file_name`` is used, such as::"
msgstr ""
" `pypi <https://pypi.python.org/pypi>`_ でホストされている場合は、pipを使用してwheelからインストールします"
"（例：python -m pip install kivy）。"
"直接wheelをダウンロードしてディレクトリからインストールする場合は、"
"「python -m pip  install wheel_file_name」、例えば："

#: ../../source/installation/installation-windows.rst:116
msgid "Command line"
msgstr "Command line(コマンドライン)"

#: ../../source/installation/installation-windows.rst:118
msgid ""
"Know your command line. To execute any of the ``pip`` or ``wheel`` "
"commands, one needs a command line tool with python on the path. The "
"default command line on Windows is `CMD "
"<http://www.computerhope.com/issues/chusedos.htm>`_, and the quickest way"
" to open it is to press `Win+R` on your keyboard, type ``cmd`` in the "
"window that opens, and then press enter."
msgstr ""
"コマンドラインを知っています。「pip」または「wheel」コマンドのいずれかを実行するには、"
"コマンドラインツールでパス上のpythonの使用が必要です。"
"Windowsのデフォルトのコマンドラインは`CMD <http://www.computerhope.com/issues/chusedos.htm>`_"
"で 、開くための最も簡単な方法は、キーボードで「Win + R」を押し、"
"開いたウィンドウ内で「cmd」と入力し、Enterキーを押します。"


#: ../../source/installation/installation-windows.rst:125
msgid ""
"Alternate linux style command shells that we reccomend is `Git for "
"Windows <https://git-for-windows.github.io/>`_ which offers a bash "
"command line as `well <http://rogerdudler.github.io/git-guide/>`_ as `git"
" <https://try.github.io>`_. Note, CMD can still be used even if bash is "
"installed."
msgstr ""
"代替Linuxのスタイルのコマンドシェルとしては`git <https://try.github.io>`_の"
" `操作 <http://rogerdudler.github.io/git-guide/>`などはbashの"
"コマンドラインである`Git for Windows <https://git-for-windows.github.io/>`_を推薦します。"
"ノート、CMDはbashがインストールされている場合でも使用できます。"

#: ../../source/installation/installation-windows.rst:131
msgid ""
"Walking the path! To add your python to the path, simply open your "
"command line and then us the ``cd`` command to change the current "
"directory to where python is installed, e.g. ``cd C:\\Python27``. "
"Alternatively if you only have one python version installed, permanently "
"add the python directory to the path for `CMD "
"<http://www.computerhope.com/issues/ch000549.htm>`_ for `bash "
"<http://stackoverflow.com/questions/14637979/how-to-permanently-set-path-"
"on-linux>`_."
msgstr ""
"パスを歩いてみましょう！パスにpythonを追加するには、コマンドラインを開き、"
"「cd」コマンドで、Pythonがインストールされている場所へカレントディレクトリ"
"を変更するには、例えば「cd C:\Python27」と入力します 。"
Pythonのバージョンを1つのみインストールしている場合は、"
" `CMD<http://www.computerhope.com/issues/ch000549.htm>`_ や"
"`bash <http://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux>`_"
"のためにPythonのディレクトリを追加して永続的にします。


#: ../../source/installation/installation-windows.rst:141
msgid "Use development Kivy"
msgstr "Use development Kivy(Kivyの開発バージョンを使用する)"

#: ../../source/installation/installation-windows.rst:148
msgid ""
"To compile and install kivy using the kivy `source code "
"<https://github.com/kivy/kivy/archive/master.zip>`_  or to use kivy with "
"git rather than a wheel there are some additional steps:"
msgstr ""
"Kivyの`ソースコード <https://github.com/kivy/kivy/archive/master.zip>`_ "
"を使用するかまたはgitを使用してのコンパイルと"
"Kivyをインストールするには、wheelからインストールするよりもいくつかの追加の手順があります:"

#: ../../source/installation/installation-windows.rst:152
msgid ""
"Both the ``python`` and the ``Python\\Scripts`` directories **must** be "
"on the path They must be on the path every time you recompile kivy."
msgstr ""
"「python」と「Python\\Scripts」ディレクトリの両方とも、"
"kivyを再コンパイルするたびにパス上に存在している必要があります。"

#: ../../source/installation/installation-windows.rst:154
msgid "Ensure you have the latest pip and wheel with::"
msgstr "pipとwheelが最新であることを確認してください::"

#: ../../source/installation/installation-windows.rst:158
msgid ""
"Create the ``python\\Lib\\distutils\\distutils.cfg`` file and add the two"
" lines::"
msgstr "「python\\Lib\\distutils\\distutils.cfg」ファイルを作成して、以下の2行を追加します::"

#: ../../source/installation/installation-windows.rst:163
msgid "Install MinGW with::"
msgstr "MinGWをインストールします::"

#: ../../source/installation/installation-windows.rst:167
msgid "Set the environment variables. On windows do::"
msgstr "環境変数を設定します。ウィンドウズ上で実行する場合::"

#: ../../source/installation/installation-windows.rst:172
msgid "In bash do::"
msgstr "bashで実行する場合：:"

#: ../../source/installation/installation-windows.rst:177
msgid "These variables must be set everytime you recompile kivy."
msgstr "変数はKivyをインストールするたびに設定が必要です。"

#: ../../source/installation/installation-windows.rst:179
msgid ""
"Install the other dependencies as well as their dev versions (you can "
"skip gstreamer and gstreamer_dev if you aren't going to use "
"video/audio)::"
msgstr ""
"その他の依存関係だけでなく、そのdevのバージョン"
"（ビデオ/オーディオを使用しない場合は、gstreamer"
"とgstreamer_devをスキップできます）をインストールします::"

#: ../../source/installation/installation-windows.rst:186
msgid ""
"If you downloaded or cloned kivy to an alternate location and don't want "
"to install it to site-packages read the next section."
msgstr ""
"Kivyをダウンロードしたかまたは別の場所にクローニングして、"
"site-packagesにインストールしたくない場合は、次のセクションをお読みください。"

#: ../../source/installation/installation-windows.rst:188
msgid ""
"Finally compile and install kivy with ``pip install filename``, where "
"``filename`` can be a url such as "
"``https://github.com/kivy/kivy/archive/master.zip`` for kivy master, or "
"the full path to a local copy of a kivy zip."
msgstr ""
"最後にコンパイルしてkivyはインストール（pip install filename）します。"
" filenameは次のようにURLを指定できます：https://github.com/kivy/kivy/archive/master.zip。 "
"URLはkivyマスター、またはkivy zipのローカルでコピーされた絶対パスを指定します。"


#: ../../source/installation/installation-windows.rst:195
msgid "Installing Kivy to an alternate location"
msgstr "Installing Kivy to an alternate location(別の場所にKivyをインストール)"

#: ../../source/installation/installation-windows.rst:197
msgid ""
"In development Kivy is often installed to an alternate location and then "
"installed with ``python -m pip install -e location``, which allows it to "
"remain in its original location while being available to python. In that "
"case extra tweaking is required. Due to a `issue "
"<https://github.com/pypa/pip/issues/2677>`_ ``wheel`` and ``pip`` install"
" the dependency wheels to ``python\\Lib\\site-packages\\kivy``. So they "
"need to be moved to your actual kivy installation from site-packages."
msgstr ""
"Kivyの開発版は、多くの場合、別の場所にインストールされ、その後、"
"「python -m pip install -e location」で一緒にインストールできます、"
"pythonに利用可能でありながら、元の場所に残せます。"
"その場合、微調整が必要です。"
"`問題 <https://github.com/pypa/pip/issues/2677>`_ の「wheel」と"
"「pip」で依存関係のwheel(python\Lib\site-packages\kivy)をインストールするのに起因します。"
"そのため、site-packagesから実際のkivyのインストールする場所に移動する必要があります。"

#: ../../source/installation/installation-windows.rst:205
msgid ""
"After installing the kivy dependencies and downloading or cloning kivy to"
" your favorite location, do the following:"
msgstr ""
"kivyの依存関係をインストールし、ダウンロードして、お気に入りの場所にkivyをクローニングした後、次の操作を行います。"

#: ../../source/installation/installation-windows.rst:208
msgid ""
"Move the contents of ``python\\Lib\\site-packages\\kivy\\deps`` to "
"``your-path\\kivy\\deps`` where ``your-path`` is the path where your kivy"
" is located."
msgstr ""
"「python\Lib\site-packages\kivy\depsからyour-path\kivy\deps」にコン"
"テンツを移動します。「your-path」はkivyが配置されているパスです。"

#: ../../source/installation/installation-windows.rst:211
msgid "Remove the ``python\\Lib\\site-packages\\kivy`` directory altogether."
msgstr "「python\Lib\site-packages\kivy」のディレクトリを完全に削除します。"

#: ../../source/installation/installation-windows.rst:212
msgid ""
"From ``python\\Lib\\site-packages`` move **all** the ``kivy.deps.*.pth`` "
"files and **all** ``kivy.deps.*.dist-info` directories to ``your-path`` "
"right next to ``kivy``."
msgstr ""
"「python\Lib\site-packages」から、「kivy.deps.*.pth」ファイルとすべての「kivy.deps."
"pth*.dist-info」のディレクトリから「your-path」のすぐ隣にkivyにすべてのファイルを移動します"

#: ../../source/installation/installation-windows.rst:216
msgid ""
"Now you can safely compile kivy in its current location with ``make`` or "
"``python -m pip install -e location`` or just ``python setup.py build_ext"
" --inplace``."
msgstr ""
"今、現在のカレントでkivyを安全にコンパイルでます。「make」や「python -m pip install -e location」だけか「Python setup.py build_ext --inplace」。"

#: ../../source/installation/installation-windows.rst:219
msgid ""
"**If kivy fails to be imported,** you probably didn't delete all the "
"*.pth files and and the kivy or kivy.deps* folders from site-packages."
msgstr ""
"**kivyのインポートに失敗した場合は**、おそらく、すべてのpthのファイルと"
"site-packagesからkivyまたはkivy.depsフォルダを削除していないです。"

#: ../../source/installation/installation-windows.rst:223
msgid "Making Python available anywhere"
msgstr "Making Python available anywhere(どこでもPythonが利用できるようにする)"

#: ../../source/installation/installation-windows.rst:225
msgid "There are two methods for launching python on your *.py files."
msgstr ".pyファイルをpythondで起動するためには2つの方法があります。"

#: ../../source/installation/installation-windows.rst:228
msgid "Double-click method"
msgstr "メソッドをダブルクリックします"

#: ../../source/installation/installation-windows.rst:230
msgid ""
"If you only have one Python installed, you can associate all *.py files "
"with your python, if it isn't already, and then run it by double "
"clicking. Or you can only do it once if you want to be able to choose "
"each time:"
msgstr ""
"Pythonのバージョンを一つだけインストールしている場合は、すべてのpythonでの.pyファイルを関連付けできます。実行されていない場合は、ダブルクリックして実行します。"
"実行するたびにその方法で実行するか、一度だけ行えます。"

#: ../../source/installation/installation-windows.rst:234
msgid ""
"Right click on the Python file (.py file extension) of the application "
"you want to launch"
msgstr "起動したいアプリケーションのPythonファイル（.pyファイル拡張子）で右クリック"

#: ../../source/installation/installation-windows.rst:235
msgid "From the context menu that appears, select *Open With*"
msgstr "表示されるコンテキストメニューから、 「プログラムから開く」を選択"

#: ../../source/installation/installation-windows.rst:236
msgid ""
"Browse your hard disk drive and find the file ``python.exe`` that you "
"want to use. Select it."
msgstr "ハード・ディスク・ドライブを参照し、「python.exe」ファイルを参照して使用したいです。選択します。"

#: ../../source/installation/installation-windows.rst:237
msgid ""
"Select \"Always open the file with...\" if you don't want to repeat this "
"procedure every time you double click a .py file."
msgstr ""
"この手順に.pyファイルをダブルクリックするたびに繰り返したくない場合は、「常に使って...ファイルを開く」を選択します。"

#: ../../source/installation/installation-windows.rst:239
msgid "You are done. Open the file."
msgstr "ファイルを開いて実行します。"

#: ../../source/installation/installation-windows.rst:242
msgid "Send-to method"
msgstr "Send-to method(「Send-to」メソッド)"

#: ../../source/installation/installation-windows.rst:244
msgid "You can launch a .py file with our Python using the Send-to menu:"
msgstr "「Send-to」メニューを使用して、Pythonで.pyファイルを起動できます："

#: ../../source/installation/installation-windows.rst:246
msgid ""
"Browse to the ``python.exe`` file you want to use. Right click on it and "
"copy it."
msgstr "python.exeを参照して使用するファイルにします。その上で右クリックしてコピーします。"

#: ../../source/installation/installation-windows.rst:248
msgid ""
"Open Windows explorer (File explorer in Windows 8), and to go the address"
" 'shell:sendto'. You should get the special Windows directory `SendTo`"
msgstr ""
"Windowsエクスプローラ（Windows8のファイルエクスプローラ）を開きます、"
"およびアドレスに「shell:sendto」を入力して移動します。"
"特別なWindowsデレクトリの「SendTo」を取得する必要があります"

#: ../../source/installation/installation-windows.rst:250
msgid "Paste the previously copied ``python.exe`` file **as a shortcut**."
msgstr "以前にコピーしたpython.exeファイルを**ショートカット**でペーストします。"

#: ../../source/installation/installation-windows.rst:251
msgid ""
"#. Rename it to python <python-version>. E.g. ``python27-x64`` You can "
"now execute your application by right clicking on the .py file -> \"Send "
"To\" -> \"python <python-version>\"."
msgstr ""
"python <python-バージョン>に名前を変更します。"
"例：python27-x64"
".pyファイルを右クリックして、アプリケーションを実行ができます- > 「に送る」 - > "
"「python <python-バージョン>」。"

#: ../../source/installation/installation-windows.rst:258
msgid "Upgrading from a previous Kivy dist"
msgstr "Upgrading from a previous Kivy dist(以前のKivy distributionからのアップグレード)"


#: ../../source/installation/installation-windows.rst:260
msgid ""
"To install the new wheels to a previous Kivy distribution all the files "
"and folders, except for the python folder should be deleted from the "
"distribution. This python folder will then be treated as a normal system "
"installed python and all the steps described in :ref:`Installation` can "
"then be continued."
msgstr ""
"Pythonのフォルダを除いて、以前のKivyのdistributionのすべてのファイルと"
"フォルダを新しいwheelをインストールするにはdistributionから削除する必要があります。"
"Pythonのフォルダは、通常のシステムインストールのpythonとに記載されているすべての"
"ステップとして扱われます。 :ref:`Installation` の後、継続できます。"
